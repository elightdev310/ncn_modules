<?php

//------------------------------------------------------------------------------
require_once('ncn_admin.define.inc');
require_once('ncn_admin_api.inc');
require_once('ncn_admin.inc');
require_once('ncn_admin.page.inc');
require_once('ncn_admin.member.inc');
require_once('ncn_admin.claim_processing.view.inc');
require_once('ncn_admin.payment.inc');
require_once('ncn_admin_scopesheet.inc');
require_once('ncn_admin.note.inc');

function ncn_admin_menu()
{

  $items = array();

  $items['admin/config/ncn_admin'] = array(
    'title' => 'Net Claims Now Administration',
    'page callback' => 'ncn_admin_page',
    'access arguments' => array('view ncn claim'),
  );

   $items['admin/config/ncn_admin/list'] = array(
    'title' => 'Show Claims',
    'page callback' => 'ncn_admin_page',
    'access arguments' => array('view ncn claim'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
   );
   
   $items['admin/config/ncn_admin/list'] = array(
    'title' => 'Show Claims',
    'page callback' => 'ncn_admin_page',
    'access arguments' => array('view ncn claim'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
   );
   
  $items['admin/config/ncn_admin/member_ids'] = array(
    'title' => t('Quick Add Member'),
    'page callback' => 'ncn_admin_page_member_ids',
    'access arguments' => array('administer ncn_admin settings'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 8,
   );

  $items['admin/config/ncn_admin/member_id_ranges'] = array(
    'title' => t('Define Distributor ID Range'),
    'page callback' => 'ncn_admin_member_id_ranges',
    'access arguments' => array('administer ncn_admin settings'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 7,
   );
   
  $items['admin/config/ncn_admin/product_settings'] = array(
    'title' => t('Product/Ordering Settings'),
    'page callback' => 'ncn_admin_page_product_settings',
    'access arguments' => array('administer ncn_admin settings'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 6,
  );
   

  $items['admin/config/ncn_admin/email_settings'] = array(
    'title' => 'Email Settings',
    'page callback' => 'ncn_admin_page_email_settings',
    'access arguments' => array('administer ncn_admin settings'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 5,
   );

  $items['admin/config/ncn_admin/track_delete_claims'] = array(
    'title' => 'Track of Deleted Claims',
    'page callback' => 'track_delete_claims_page',
    'access arguments' => array('administer ncn_admin settings'),
        'type' => MENU_LOCAL_TASK,
    'weight' => 4,
   );
   
   $items['admin/config/ncn_admin/nda_log'] = array(
    'title' => 'Track IP Address for NDA',
    'page callback' => 'ncn_admin_nda_log',
    'access arguments' => array('administer ncn_admin settings'),
        'type' => MENU_LOCAL_TASK,
    'weight' => 3,
   );
   
   $items['admin/config/ncn_admin/transaction'] = array(
    'title' => 'Payment Transaction',
    'page callback' => 'payment_transaction_page',
    'access arguments' => array('payment transaction'),
        'type' => MENU_LOCAL_TASK,
    'weight' => 2,
   );
   $items['admin/config/ncn_admin/refund/%pid'] = array(
    'title' => 'Refund Payment',
    'page callback' => 'ncn_admin_refund_payment',
    'page arguments' => array(4),
    'access arguments' => array('payment transaction'),
    'type' => MENU_CALLBACK,
    'weight' => 2,
   );

   
  $items['admin/config/ncn_admin/messages'] = array(
    'title' => 'Show Messages',
    'page callback' => 'ncn_admin_messages',
    'access arguments' => array('administer ncn_admin settings'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 9,
   );
   
   $items['admin/config/ncn_admin/config'] = array(
    'title' => 'Settings',
    'page callback' => 'ncn_admin_page_settings',
    'access arguments' => array('administer ncn_admin settings'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
   );

  $items['admin/config/ncn_admin/messages_markread'] = array(
    'title' => 'Messages Mark Read',
    'page callback' => 'ncn_admin_messages_markread',
    'access arguments' => array('administer'),
    'type' => MENU_CALLBACK,
   );
   
   // user documents
  $items['account/serve_user_document'] = array(
    'page callback' => 'ncn_admin_serve_user_document',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
   );

  $items['admin/delete_user_document'] = array(
    'page callback' => 'ncn_admin_delete_user_document',
    'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
   );
   
    $items['account/serve_scope_file'] = array(
      'page callback' => 'ncn_admin_serve_scope_file',
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    );
    $items['account/delete_scope_file'] = array(
      'page callback' => 'ncn_admin_delete_scope_file',
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    );
    
    
    $items['ajax/ncn_admin/edit_roomname'] = array(
      'page callback' => 'ncn_admin_edit_roomname',
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    );
    
    
    $items['admin/config/ncn_member_report'] = array(
        'title' => 'Net Claims Now Member Report',
        'page callback' => 'ncn_admin_member_report',
        'access arguments' => array('administer ncn_admin settings'),
        /*'type' => MENU_LOCAL_TASK,*/
    );
    $items['admin/config/ncn_membership_cal'] = array(
        'title' => 'Net Claims Now Membership Calendar',
        'page callback' => 'ncn_admin_membership_cal',
        'access arguments' => array('administer ncn_admin settings'),
    );
    
    $items['admin/config/ncn_membership_cal_day_list'] = array(
        'title' => 'Net Claims Now Membership List',
        'page callback' => 'ncn_admin_membership_cal_day_list',
        'access arguments' => array('administer ncn_admin settings'),
        'type' => MENU_CALLBACK,
    );
    
    $items['admin/config/ncn_user/%/all_payments'] = array(
        'title' => 'Net Claims Now User All Payment',
        'page callback' => 'ncn_admin_ncn_user_all_payments',
        'page arguments'=> array(3), 
        'access arguments' => array('payment_transaction_page'),
        'type' => MENU_CALLBACK,
    );
    
    $items['admin/config/ncn_user/%/ytd'] = array(
        'title' => 'Net Claims Now User YTD Payment',
        'page callback' => 'ncn_admin_ncn_user_ytd_payments',
        'page arguments'=> array(3), 
        'access arguments' => array('payment_transaction_page'),
        'type' => MENU_CALLBACK,
    );
    
    $items['download/user_list'] = array(
        'page callback' => 'ncn_admin_download_user_list',
        'type' => MENU_CALLBACK,
        'access arguments' => array('administer ncn_admin settings'),
    );
  $items['download/transaction'] = array(
    'page callback' => 'ncn_admin_payment_download_transaction',
    'type' => MENU_CALLBACK,
    'access arguments' => array('payment transaction'),
  );
  $items['download/claim_list'] = array(
    'page callback' => 'ncn_admin_download_claim_list',
    'type' => MENU_CALLBACK,
    'access arguments' => array('payment transaction'),
  );
    $items['ajax/upload_scope_full_pdf/%/%'] = array(
        'page callback' => 'ncn_admin_scopeform_full_pdf_submit',
        'page arguments' => array(2, 3), 
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );
    
    $items['admin/config/viewclaim/scope_file/crop/%/%'] = array(
        'page callback' => 'ncn_admin_viewclaim_scopefile_crop',
        'page arguments' => array(5, 6), 
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );
    
    $items['download/ncn_video'] = array(
        'page callback' => 'ncn_admin_download_ncn_video',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    $items['ajax/generate_download_video_link'] = array(
        'page callback' => 'ncn_admin_generate_download_video_link',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    
    
    $items['ajax/ncn_admin/aci/dcl/%/daily_log_submit'] = array(
        'page callback' => 'ncn_admin_ajax_aci_dcl_daily_log_submit',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/aci/dcl/%/delete_daily_log'] = array(
        'page callback' => 'ncn_admin_ajax_aci_dcl_delete_daily_log',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/aci/dcl/%/render_daily_log_list'] = array(
        'page callback' => 'ncn_admin_ajax_aci_dcl_render_daily_log_list',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/aci/dcl/%/render_log_action_panel'] = array(
        'page callback' => 'ncn_admin_ajax_aci_dcl_render_log_action_panel',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    
    $items['ajax/ncn_admin/scopesheet/eit/%/action_submit'] = array(
        'page callback' => 'ncn_admin_ajax_ss_eit_action_submit',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/eit/%/delete'] = array(
        'page callback' => 'ncn_admin_ajax_ss_eit_delete',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/eit/%/render_eit_list'] = array(
        'page callback' => 'ncn_admin_ajax_ss_eit_render_list',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/eit/%/render_ss_eit_action_panel'] = array(
        'page callback' => 'ncn_admin_ajax_ss_eit_render_action_panel',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    
    $items['ajax/ncn_admin/scopesheet/rd/%/action_submit'] = array(
        'page callback' => 'ncn_admin_ajax_ss_rd_action_submit',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/rd/%/delete'] = array(
        'page callback' => 'ncn_admin_ajax_ss_rd_delete',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/rd/%/render_rd_list'] = array(
        'page callback' => 'ncn_admin_ajax_ss_rd_render_list',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/rd/%/render_ss_rd_action_panel'] = array(
        'page callback' => 'ncn_admin_ajax_ss_rd_render_action_panel',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    
    $items['ajax/ncn_admin/scopesheet/smr/%/action_submit'] = array(
        'page callback' => 'ncn_admin_ajax_ss_smr_action_submit',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/smr/%/delete'] = array(
        'page callback' => 'ncn_admin_ajax_ss_smr_delete',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/smr/%/render_smr_list'] = array(
        'page callback' => 'ncn_admin_ajax_ss_smr_render_list',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/smr/%/render_ss_smr_action_panel'] = array(
        'page callback' => 'ncn_admin_ajax_ss_smr_render_action_panel',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    
    $items['ajax/ncn_admin/scopesheet/ep/%/get_action_panel'] = array(
        'page callback' => 'ncn_admin_ajax_ss_ep_get_action_panel',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/ep/%/action_submit'] = array(
        'page callback' => 'ncn_admin_ajax_ss_ep_action_submit',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/ep/%/delete'] = array(
        'page callback' => 'ncn_admin_ajax_ss_ep_delete',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/ep/%/render_ep_list'] = array(
        'page callback' => 'ncn_admin_ajax_ss_ep_render_list',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/ep/%/render_ss_ep_action_panel'] = array(
        'page callback' => 'ncn_admin_ajax_ss_ep_render_action_panel',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    
    
    $items['ncn_admin/user/admin_login/%'] = array(
        'page callback' => 'ncn_admin_user_login_program',
        'page arguments' => array(3), 
        'access arguments' => array('login for test'),
        'type' => MENU_CALLBACK,
    );
    
    $items['admin/delete_claim_additional_document/%/%'] = array(
    'page callback' => 'ncn_admin_delete_claim_additional_document',
        'page arguments' => array(2, 3), 
    'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
   );
    
    $items['user/back_to_admin'] = array(
        'page callback' => 'ncn_admin_user_back_to_admin',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    
    $items['ncn_admin/testmail'] = array(
        'page callback' => 'testmail',
        'type' => MENU_CALLBACK,
        'access arguments' => FALSE,
    );
    
  ncn_admin_menu_note($items);
  
  $items['admin/config/ncn_admin/verify_payment_date'] = array(
        'title' => t('Verify Payment Date'),
        'page callback' => 'ncn_admin_verify_payment_date',
        'access arguments' => array('administer ncn_admin settings'),
        'type' => MENU_LOCAL_TASK,
        'weight' => 14,
  );
  
  return $items;
}


function testmail(){

    $_user = user_load(1013);
    profile_user_load(array($_user->uid => $_user));
    $member_type = get_member_type($_user);

    $node_title='Activation Mail (Gold)';
    $node_id = 55;
    if ($member_type == 0) {    // Gold Member
        $node_title='Activation Mail (Gold)';
        $node_id = 55;
    } else if ($member_type == 1) {
        $node_title='Activation Mail (Silver)';
        $node_id = 56;
    } else if ($member_type == 2) {
        $node_title='Activation Mail (Gold)';
        $node_id = 55;
    } else if ($member_type == 3) {
        $node_title='Activation Mail (Gold)';
        $node_id = 55;
    } else if ($member_type == 4) {
        $node_title='Activation Mail (Gold)';
        $node_id = 55;
    } else if ($member_type == 5) {
        $node_title='Activation Mail (Gold)';
        $node_id = 55;
    }

    $result = db_query('SELECT * FROM {node} WHERE type=:a AND nid=:b',array(':a'=>'attached_documents',':b'=>$node_id));

    if ($result->rowCount()>0)
    {
        foreach($result as $row)
        {
            $row = (array)$row;
            $node = node_load($row['nid']);
        }

        $index = 0;
        $atchfiles = array_pop($node->field_attach_docs);
        
        foreach ($atchfiles as $file)
        {
            $file['filepath'] = str_replace("public://","sites/default/files/",$file['uri']);
            $attaches['doc-'.$index] = $file['filepath'];
            $attache_names['doc-'.$index] = $file['filename'];
            $attach_mail_data[$file['description']] = array('filepath'=>$file['filepath']);
            $index++;
        }
    }

    $_params = array('!name'=>($_user->profile_firstname." ".$_user->profile_lastname) ,'!docs'=>$attach_mail_data);
    $ouput = ncn_admin_get_mail_body_from_template('create_user', $_params);
    print $ouput;
}


function ncn_admin_theme() {
    return array(
        'ncn_admin_scope_full_crop' => array(
            'arguments' => array('claim_id'=>0, 'room_name'=>'', 'img_path'=>''),
            'template' => 'ncn_admin_scope_full_crop',
        ),
        'ncn_admin_multi_file_list_form' => array(
              'arguments' => array('form' => NULL, 'claim_id'=>0, 'pvc_disabled'=>''),
        ),
    );
}

function template_preprocess_ncn_admin_scope_full_crop($vars) {
    
}

/**
    hook_user
*/
function ncn_admin_user($op, $edit, $account, $category = NULL) {
    switch ($op) {
    case 'login':
        if ( (isset($account->profile_memberid)&&is_member($account->profile_memberid)) || is_distributor($account) || is_associate($account) || is_subuser($account) || is_leaduser($account)) {
            drupal_goto('account');
        } else if (module_exists('ncn_ceportal') && is_claim_examiner($account)) {
            drupal_goto('ce_portal/home');
        } else {
            drupal_goto('admin');
            //drupal_goto('account');
        }
        break;
        
    case 'logout':
        /*$isRedirectHome = (isset($account->profile_memberid)&&is_member($account->profile_memberid)) || is_distributor($account) || is_associate($account) || is_subuser($account) || is_claim_examiner($account);
        if ($isRedirectHome) {
            drupal_goto();
        } else {
            drupal_goto('admin');
        }*/
        break;
    case 'delete':
        if (isset($account->profile_memberid)) {
        //  $query = "DELETE FROM member_id_pool WHERE member_id = '" . $account->profile_memberid . "' AND used = '1' ";
            $result = db_query('DELETE FROM {member_id_pool} WHERE member_id =:a AND used = 1',array(':a'=>$account->profile_memberid));
        //  $query = "DELETE FROM member_first_free WHERE member_id = '" . $account->profile_memberid . "' AND status = 1 ";
            $result = db_query('DELETE FROM {member_first_free} WHERE member_id = :a AND status = 1',array(':a'=>$account->profile_memberid));
        //  $query = "DELETE FROM member_gold_demo WHERE member_id = '" . $account->profile_memberid . "' AND status = 1 ";
            $result = db_query('DELETE FROM {member_gold_demo} WHERE member_id = :a AND status = 1',array(':a'=>$account->profile_memberid));
        //  $query = "DELETE FROM ncn_member_logo WHERE member_id = '" . $account->profile_memberid . "' AND status = 1 ";
            $result = db_query('DELETE FROM {ncn_member_logo} WHERE member_id = :a AND status = 1',array(':a'=>$account->profile_memberid));
        }
        break;
    }
}

//------------------------------------------------------------------------------
// see "ncn_message.module"
function ncn_admin_messages_markread()
{
    return ncn_message_markread();
}

//------------------------------------------------------------------------------
// see "ncn_message.module"
function ncn_admin_messages()
{
    return ncn_message_center();
}

//------------------------------------------------------------------------------
function ncn_admin_member_id_ranges()
{
    // check for access denied
    if (isset($GLOBALS['user']->roles[6]))
    {
        return("Access denied.");
    }


    // handle input
    if (isset($_POST['tfunction']))
    {
        $error = false;
    
        if ((!is_numeric($_POST['start'])) || (!is_numeric($_POST['end'])) )
        {
            drupal_set_message('Values must be numeric', 'error');
            $error = true;
        }
        else
        if ($_POST['start'] >= $_POST['end'])
        {
            drupal_set_message('End must be higher than start', 'error');
            $error = true;
        }
        
        // no errors
        if ($error == false)
        {
            // add range
        //  $query = "DELETE FROM member_id_ranges WHERE distributor = ".$_POST['distributor'];
            $result = db_query('DELETE FROM {member_id_ranges} WHERE distributor = :a',array(':a'=>$_POST['distributor']));

        //  $query = "INSERT INTO member_id_ranges VALUES(".$_POST['distributor'].", ".$_POST['start'].", ".$_POST['end'].");";
            $result = db_query('INSERT INTO {member_id_ranges} VALUES(:a,:b,:c)',
                array(':a'=>$_POST['distributor'],':b'=>$_POST['start'],':c'=>$_POST['end']));
            
            drupal_set_message('Range applied to distributor', 'status');
        }
    }
    

    // draw the page
    ob_start();

    ?>
    <fieldset>
    <legend>Add/Update range</legend>
    
    <form method="POST">
    <input type="hidden" name="tfunction" value="update_range">
        <table>
            <tr>
                <td>Distributor</td>
                <td><?php distributor_dropdown(); ?></td>
            </tr>
            <tr>
                <td>Start</td>
                <td><input type="text" name="start" value="<?=(isset($_POST['start'])? $_POST['start'] : ''); ?>">
            </tr>
            <tr>
                <td>End</td>
                <td><input type="text" name="end" value="<?=(isset($_POST['end'])? $_POST['end'] : ''); ?>">
            </tr>
            <tr>
                <td colspan=2><input type="submit" value="Add/Update Range"></td>
            </tr>
        </table>
    
    </form>
    
    </fieldset>
    <?php
    
    // show existing ranges
    ?>
    <fieldset>
    <legend>Existing Ranges</legend>
    
        <table class="sticky-enabled tableSelect-processed sticky-table">
        <thead class="tableHeader-processed">
            <th>Distributor</th>
            <th>Start Range</th>
            <th>End Range</th>
        </thead>
        <?php
        
    //  $query = "SELECT * FROM member_id_ranges";
        $result = db_query('SELECT * FROM {member_id_ranges}');
        foreach($result as $row)
        {
            $row = (array)$row;
            $user = user_load($row['distributor']);

            if (isset($user->name))
            {           
            
                ?>
                <tr>
                    <td><?= $user->profile_legalname; ?></td>
                    <td><?= $row['start']; ?></td>
                    <td><?= $row['end']; ?></td>
                </tr>
                <?php
            }
            
        }
        
        
        ?>
        </table>
    
    </fieldset>
    <?php

    // return
    $content = ob_get_contents();
    ob_end_clean();
    return $content;
}

//------------------------------------------------------------------------------
function distributor_dropdown($select_id = 0)
{
    if (is_distributor($GLOBALS['user']) == true)
    {
        // draw hidden input
        ?>
        <input type="hidden" name="distributor" value="<?= $GLOBALS['user']->uid; ?>">
        <?php   
    }
    /*else
    if  (is_account_manager($GLOBALS['user']) == true)
    {
        // get owner
        $query = "SELECT * FROM users_parent WHERE uid=".$GLOBALS['user']->uid;
        $result = db_query($query);

        foreach($result as $row)
        {
            $row = array($row);
            ?>
            <input type="hidden" name="distributor"  value="<?= $row['parent']; ?>">
            <?php   
        }
        
        // darw hidden input
    }*/
    else
    {
        $dists = get_distributor_list('active');
        ?>
        <select name="distributor">
        <?php
        if ($select_id) {
            $distributor = user_load($select_id);
            if (!$distributor) {
                print '<option value="'.$select_id.'" SELECTED >'.'User #'.$select_id.' (deleted)</option>';
            } elseif (!$distributor->status && is_distributor($distributor)) {
                print '<option value="'.$select_id.'" SELECTED >'.(isset($distributor->profile_legalname) && trim($distributor->profile_legalname)!='' ? $distributor->profile_legalname : $distributor->name ).' (blocked)</option>';
            }
        }

        foreach($dists as $row)
        {
            $user = user_load($row['uid']);
            //if (is_distributor($user)==true)
            {
                $selected = "";
                if ( $select_id == $row['uid']) { $selected = "selected"; }
                print '<option value="'.$row['uid'].'" '. $selected.' >'.(isset($user->profile_legalname) && trim($user->profile_legalname)!='' ? $user->profile_legalname : $user->name ).'</option>';
            }
        }
        ?>
        </select>
        <?php
    }


}

/* Added by sanjay  Lead User Dropdown list  */
/* Updated by kevin at Sep 5, 2017 */

function leaduser_dropdown($select_id = 0)
{
        // run through users
        $query = "SELECT usr_lead.*, usr.* FROM users_lead as usr_lead INNER JOIN users as usr  WHERE usr.uid = usr_lead.user_id AND usr.status != '0'";
        $result = db_query($query);
        ?>
        <select name="leaduser">
        <?php       
        foreach($result as $row)
        {
            $row = (array)$row;
            $selected = "";
            if ( $select_id == $row['uid']) { $selected = "selected"; }
            print '<option value="'.$row['uid'].'" '. $selected.' >'.$row['company_name'].'</a>';
        }
        ?>
        </select>
        <?php
}



function associate_dropdown($select_id = 0)
{
    if (is_associate($GLOBALS['user']) == true)
    {
        // draw hidden input
        ?>
        <input type="hidden" name="associate" value="<?= $GLOBALS['user']->uid; ?>">
        <?php   
    }
    /*else
    if  (is_account_manager($GLOBALS['user']) == true)
    {
        // get owner
        $query = "SELECT * FROM users_parent WHERE uid=".$GLOBALS['user']->uid;
        $result = db_query($query);
        
        foreach($result as $row)
        {
            $row = (array)$row;
            ?>
            <input type="hidden" name="distributor"  value="<?= $row['parent']; ?>">
            <?php   
        }
        
        // darw hidden input
    }*/
    else
    {
        $associates = get_associate_list('active');
        
        ?>
        <select name="associate">
        <?php
        $associate = user_load($select_id);
        if (!$associate) {
            print '<option value="'.$select_id.'" SELECTED >'.'User #'.$select_id.' (*deleted)</option>';
        } elseif (!$associate->status && is_associate($associate)) {
            print '<option value="'.$select_id.'" SELECTED >'.(isset($associate->profile_legalname) && trim($associate->profile_legalname)!='' ? $associate->profile_legalname : $associate->name ).' (blocked)</option>';
        }
        foreach($associates as $row)
        {
            $user = user_load($row['uid']);
            
            //if (is_associate($user)==true)
            {
                $selected = "";
                if ( $select_id == $row['uid']) { $selected ="selected"; }
                print '<option value="'.$row['uid'].'" '. $selected.' >'.(isset($user->profile_legalname) && trim($user->profile_legalname)!='' ? $user->profile_legalname : $user->name).'</option>';
            }
        }
        
        ?>
        </select>
        <?php
    }


}

//------------------------------------------------------------------------------
function account_manager_dropdown()
{
    // run through users
    $am_list = get_account_manager_list('active');
    ?>
    <select name="account_manager">
    <?php
    
    foreach($am_list as $row)
    {
        $user = user_load($row['uid']);
        
        //if (is_account_manager($user)==true)
        {
            print '<option value="'.$row['uid'].'">'.$user->profile_firstname.' '.$user->profile_lastname.'</a>';
        }
    }
    
    ?>
    </select>
    <?php
}

//------------------------------------------------------------------------------
function attempt_add_distributor_card()
{
  $date = explode("/", $_POST['profile_credit_card_expiration']);
  
  if (sizeof($date) == 2)
  {     $date = "20".$date[1]."-".$date[0];   }
  else
  {     $date = '';     }

  // add the user to cim
    $content =
        "<?xml version=\"1.0\" encoding=\"utf-8\"?>" .
        "<createCustomerProfileRequest xmlns=\"AnetApi/xml/v1/schema/AnetApiSchema.xsd\">" .
        MerchantAuthenticationBlock().
        "<profile>".
        "<merchantCustomerId>" . get_unique_auth_profile_id() . "</merchantCustomerId>". // Your own identifier for the customer.
        "<description>Distributor: ".$_POST['profile_firstname']." ".$_POST['profile_lastname']."</description>".
        "<email>" . $_POST["mail"] . "</email>".
        "</profile>".
        "</createCustomerProfileRequest>";  // <?php
    
    $response = send_xml_request($content);
    $parsedresponse = parse_api_response($response);
        
    $customerProfileId = $parsedresponse->customerProfileId;
    
  
  // add a payment profile to cim
$content =
    "<?xml version=\"1.0\" encoding=\"utf-8\"?>" .
    "<createCustomerPaymentProfileRequest xmlns=\"AnetApi/xml/v1/schema/AnetApiSchema.xsd\">" .
    MerchantAuthenticationBlock().
    "<customerProfileId>" . $customerProfileId . "</customerProfileId>".
    "<paymentProfile>".
    "<billTo>".
     "<firstName>".$_POST['profile_firstname']."</firstName>".
     "<lastName>".$_POST['profile_lastname']."</lastName>".
//   "<country>".$_POST['profile_country']."</country>".
     "<address>".$_POST['profile_address']."</address>".
     "<city>".$_POST['profile_city']."</city>".
     "<state>".$_POST['profile_state']."</state>".
     "<zip>".$_POST['profile_zip']."</zip>".
     "<phoneNumber>000-000-0000</phoneNumber>".
    "</billTo>".
    "<payment>".
     "<creditCard>".
      "<cardNumber>".$_POST['profile_credit_card_number']."</cardNumber>".
      "<expirationDate>".$date."</expirationDate>". // required format for API is YYYY-MM
      "<cardCode>".$_POST['profile_credit_card_security']."</cardCode>".
     "</creditCard>".
    "</payment>".
    "</paymentProfile>".
    "<validationMode>liveMode</validationMode>". // or liveMode
    "</createCustomerPaymentProfileRequest>";   // <?php

    $response = send_xml_request($content);
    $parsedresponse = parse_api_response($response);
    $customerPaymentProfileId = $parsedresponse->customerPaymentProfileId;

    // check for cc/details errors
    if ($parsedresponse->messages->resultCode == 'Error')
    {
        $msg = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $parsedresponse->messages->message->text);
    
        drupal_set_message($msg, 'error');
        //$form_state['redirect'] = 'apply.html?id='.$_GET['id'];
        return true;
    }

    // add payment/customer profile to database
   // $query = "DELETE FROM member_distributor_cim WHERE username='".addslashes($_POST['name'])."'";
    $result = db_query('DELETE FROM {member_distributor_cim} WHERE username=:a',
        array(':a'=>$_POST['name']));
  
//    $query = "INSERT INTO member_distributor_cim VALUES ( NULL,
//                                                        '".addslashes($_POST['name'])."',
//                                                        '".addslashes($customerProfileId)."',
//                                                        '".addslashes($customerPaymentProfileId)."'
//                                                       );";
    $result = db_query('INSERT INTO member_distributor_cim VALUES(:a,:b,:c)',
    array(':a'=>$_POST['name'],':b'=>$customerProfileId,':c'=>$customerPaymentProfileId));
    return false;
}

//------------------------------------------------------------------------------
// see user.admin.inc
function user_add_distributor()
{
    // user tried to add a distributor
    if (isset($_POST['tfunction']))
    {
        // error checking
        $error = false;
        
        foreach ($_POST as $key=>$val)
        {
            if (($_POST[$key] == '') && ($error == false))
            {
                drupal_set_message("All fields must be completed.", 'error');
                $error = true;
            }
        }
        
        // check valid username
        if ($error == false)
        {
        //  $query = "SELECT * FROM users WHERE `name`=\"".AddSlashes($_POST['name'])."\";";
            $result = db_query('SELECT * FROM {users} WHERE name=:a',
                array(':a'=>$_POST['name']));
            
            foreach($result as $row)
            {
                $row = (array)$row;         
                if(count($row) > 0)
                {
                    drupal_set_message("That username is taken.", 'error');
                    $error = true;
                }           
            }
        }
        if ($error == false) {
            if (!valid_email_address($_POST['mail'])) {
                drupal_set_message('Email address is invalid, Please retry to input email address.', 'error');
                $error = true;
            }
        }
        
        // check passwords match        
        if ($error == false)
        {
            if ($_POST['pass'] != $_POST['pass2'])
            {
                drupal_set_message("Passwords do not match.", 'error');
                $error = true;
            }
        }
        if ($error == false)
        {
            if ($_POST['reportpass'] != $_POST['reportpass2'])
            {
                drupal_set_message("Report Passwords do not match.", 'error');
                $error = true;
            }
        }
        
        // check valid email
        /*if ($error == false)
        {
            $query = "SELECT * FROM users WHERE `mail`=\"".AddSlashes($_POST['mail'])."\";";
            $result = db_query($query);
            foreach($result as $row)
            {
                $row = (array)$row;         
                if(count($row) > 0)
                {
                    drupal_set_message("Warining: That email address is already in use.", 'error');
                    $error = true;
                }   
            }           
        }*/
        
        // no errors, so try the card
        if ($error == false)
        {
            $error = attempt_add_distributor_card();
        }
        
        // add good, so add the distributor
        if ($error == false)
        {
            $section1 = $_POST;
            
            unset($section1['pass2']);
            unset($section1['tfunction']);
            $section1['status'] = 1;
            $section1['roles'] = array(5 => 5, 2 => 1, 6 => 0, 7 => 0, 3 => 0, 4 => 0); 

            $section2 = array(
                'pass' => $_POST['pass'],
                'init' => $_POST['mail'],
                'roles' => array(5 => 5, 2 => 1)
            );
        
        
            $account = user_save('', array_merge($section1, $section2));
                          
            // Terminate if an error occured during user_save().
            if (!$account) {
                drupal_set_message(t("Error saving user account."), 'error');
                $form_state['redirect'] = '';
                $error = true;
            }
            
            // send welcome email (account manager) HERE
            $params = array(
                '!username' => $_POST['name'],
                '!password' => $_POST['pass'],
                '!firstname' => $_POST['profile_firstname'],
                '!lastname' => $_POST['profile_lastname'],
            );
            add_report_password($_POST['name'], $_POST['reportpass']);
            
            drupal_mail('ncn_admin', 'distributor', $_POST['mail'], language_default(), $params);
            
        }
        
        // everything worked - show success
        if ($error == false)
        {
            // save the ownersship relationship
        //  $query = "INSERT INTO users_parent (uid, parent) VALUES(".$account->uid.", ".$_POST['account_manager'].");";
            $result = db_query('INSERT INTO {users_parent} (uid, parent) VALUES(:a,:b)',
                array(':a'=>$account->uid,':b'=>$_POST['account_manager']));
            
            unset($_POST);
            drupal_set_message("Distributor '".$_POST['name']."' added successfully", 'status');
        }
        
         
    }

    // ---- draw the form ----

    ?>
    <form method="POST" autocomplete="off">
    <input type="hidden" name="tfunction" value="add_distributor">

    <fieldset>
    <legend>Create new distributor</legend>
    
        
        <table style="width: 600px; border:0;">
            <tr>
                <td>Username</td>
                <td><input type="text" name="name" value="<?= $_POST['name']; ?>"></td>
            </tr>
            <tr>
                <td>Assign Account Manager</td>
                <td><?php account_manager_dropdown(); ?></td>
            </tr>
            <tr>
                <td>E-mail</td>
                <td><input type="text" name="mail" value="<?= $_POST['mail']; ?>" AUTOCOMPLETE="off"></td>
            </tr>
            <tr>
                <td>Password</td>
                <td><input type="password" name="pass" value="<?= $_POST['pass']; ?>" AUTOCOMPLETE="off"></td>
            </tr>
            <tr>
                <td>Confirm Password</td>
                <td><input type="password" name="pass2" value="<?= $_POST['pass2']; ?>" AUTOCOMPLETE="off"></td>
            </tr>
            <tr>
                <td>First Name</td>
                <td><input type="text" name="profile_firstname" value="<?= $_POST['profile_firstname']; ?>"></td>
            </tr>
            <tr>
                <td>Last Name</td>
                <td><input type="text" name="profile_lastname" value="<?= $_POST['profile_lastname']; ?>"></td>
            </tr>
            <tr>
                <td>Company's Name</td>
                <td><input type="text" name="profile_legalname" value="<?= $_POST['profile_legalname']; ?>"></td>
            </tr>
            <tr>
                <td>Country</td>
                <td><?php draw_countryform_part('profile_country', false, false); ?></td>
            </tr>
            <tr>
                <td>Address</td>
                <td><input type="text" name="profile_address" value="<?= $_POST['profile_address']; ?>"></td>
            </tr>
            <tr>
                <td>City</td>
                <td><input type="text" name="profile_city" value="<?= $_POST['profile_city']; ?>"></td>
            </tr>
            <tr>
                <td>Province/State</td>
                <td><?php draw_stateform_part('profile_state', false, false); ?></td>
            </tr>
            <tr>
                <td>Zip</td>
                <td><input type="text" name="profile_zip" value="<?= $_POST['profile_zip']; ?>"></td>
            </tr>

            <tr>
                <td>Credit Card Number</td>
                <td><input type="text" name="profile_credit_card_number" value="<?= $_POST['profile_credit_card_number']; ?>"></td>
            </tr>
            <tr>
                <td>Expiration Date (mm/yy)</td>
                <td><input type="text" name="profile_credit_card_expiration" value="<?= $_POST['profile_credit_card_expiration']; ?>"></td>
            </tr>
            <tr>
                <td>Security Code</td>
                <td><input type="text" name="profile_credit_card_security" value="<?= $_POST['profile_credit_card_security']; ?>"></td>
            </tr>
            <tr>
                <td>Name as it appears on card</td>
                <td><input type="text" name="profile_credit_card_name" value="<?= $_POST['profile_credit_card_name']; ?>"></td>
            </tr>
            <tr>
                <td>Report Password</td>
                <td><input type="password" name="reportpass" value="<?= $_POST['reportpass']; ?>" AUTOCOMPLETE="off"></td>
            </tr>
            <tr>
                <td>Confirm Password</td>
                <td><input type="password" name="reportpass2" value="<?= $_POST['reportpass2']; ?>" AUTOCOMPLETE="off"></td>
            </tr>
            <tr>
                <td colspan="2"><input type="submit" value="Add Distributor"></td>
            </tr>
        </table>
    </fieldset>
    
    </form> 
    <?php

}
//------------------------------------------------------------------------------
//----------------lead_generation_user--------------------------
function lead_generation_user()
{

    // user tried to add a lead generation user
    if (isset($_POST['tfunction']))
    {
        // error checking
        $error = false;
        $flage= true;
        
        foreach ($_POST as $key=>$val)
        {
            if (($_POST[$key] == '') && ($error == false))
            {
                drupal_set_message("All fields must be completed.", 'error');
                $error = true;
                $flage= false;
            }
        }
        
/*      if ($error == false) {
        if ($_POST['parent_mid'] == '') {
            drupal_set_message("Please select member.", 'error');
            $error = true;
        }
    }*/
        
        // check valid username
        if ($error == false)
        {
    //      $query = "SELECT * FROM users WHERE `name`=\"".AddSlashes($_POST['name'])."\";";
            $result = db_query('SELECT * FROM {users} WHERE name=:a',array(':a'=>$_POST['name']));
            foreach($result as $row)
            {
                $row = (array)$row;         
                if(count($row) > 0)
                {
                    drupal_set_message("That username is taken.", 'error');
                    $error = true;
                }   
            }           
        }
        if ($error == false) {
            if (!valid_email_address($_POST['mail'])) {
                drupal_set_message('Email address is invalid, Please retry to input email address.', 'error');
                $error = true;
            }
        }
        
        // check passwords match        
        if ($error == false)
        {
            if ($_POST['pass'] != $_POST['pass2'])
            {
                drupal_set_message("Passwords do not match.", 'error');
                $error = true;
            }
        }
        if ($error == false)
        {
            if ($_POST['reportpass'] != $_POST['reportpass2'])
            {
                drupal_set_message("Report Passwords do not match.", 'error');
                $error = true;
            }
        } 
        
        // check valid email
        if ($error == false)
        {
    //      $query = "SELECT * FROM users WHERE `mail`=\"".AddSlashes($_POST['mail'])."\";";
            $result = db_query('SELECT * FROM {users} WHERE mail=:a',array(':a'=>$_POST['mail']));
            foreach($result as $row)
            {
                $row = (array)$row;         
                if(count($row) > 0)
                {
                    drupal_set_message("Warining: That email address is already in use.", 'error');
                    $error = true;
                }   
            }           
        }
        
    if (!$error) {
            
            require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');
            
            $name="'".$_POST['name']."'";
            $pass="'". user_hash_password(trim($_POST['pass']))."'";
            $mail="'".$_POST['mail']."'";
            $firstname = "'".$_POST['firstname']."'";
            $lastname =  "'".$_POST['lastname']."'";
            $company_name = "'".$_POST['company_name']."'";
            $dist_id = $_POST['parent_mid'];
            
            $date = strtotime(date('Y-m-d H:i:s'));
            $user_id = db_next_id("{users}");
            $success = db_query("INSERT INTO {users} (`uid`,`name`,`mail`,`pass`,`created`,`status`,`init`) VALUES ($user_id,$name,$mail,$pass,$date,'1',$mail)");
           
            if ($success) {
               // $last_id = db_query("SELECT lead_id FROM users_lead ORDER BY lead_id DESC LIMIT 1");
               $last_id = db_query("SELECT Max( Substr( lead_id, 4 ) ) as max_id FROM users_lead ");
               $last_id = (array)$last_id;
                //print_r($last_id);exit;
            if($last_id['max_id'] != '')
            {
                //$temp_id = substr($last_id,3,strlen($last_id));
                $last_id_str=$last_id['max_id']+1;
                 $lead_id = "'LVC".$last_id_str."'";
            }
            else
            {
                 $lead_id = "'LVC101'";
            }
            
           $success1 = db_query("INSERT INTO {users_lead} (`lead_id`,`user_id`,`distributor_id`,`company_name`,`firstname`,`lastname`) VALUES ($lead_id,$user_id,'NULL',$company_name,$firstname,$lastname)");
           $success2 = db_query("INSERT INTO {users_roles} (`uid`,`rid`) VALUES ($user_id,'23')");
            }
            else
            {
                    drupal_set_message("lead generation user not added");
            }
           
           if ($success1) {
                unset($_POST);
                drupal_set_message("lead generation user added successfully");
            }
            else
            {
                    drupal_set_message("lead generation user not added");
            }
            
        }
}
    ?>
    <form method="POST" autocomplete="off">
    <input type="hidden" name="tfunction" value="add_lead_generation_user">

    <fieldset>
    <legend>Create new lead generation user</legend>
    
        
        <table style="width: 600px; border:0;">
            <tr>
                <td>Username</td>
                <td><input type="text" name="name" value="<?= $_POST['name']; ?>"></td>
            </tr>
            <tr>
                <td>E-mail</td>
                <td><input type="text" name="mail" value="<?= $_POST['mail']; ?>" AUTOCOMPLETE="off"></td>
            </tr>
            <tr>
                <td>Password</td>
                <td><input type="password" name="pass" value="<?= $_POST['pass']; ?>" AUTOCOMPLETE="off"></td>
            </tr>
            <tr>
                <td>Confirm Password</td>
                <td><input type="password" name="pass2" value="<?= $_POST['pass2']; ?>" AUTOCOMPLETE="off"></td>
            </tr>
            <tr>
                <td>First Name</td>
                <td><input type="text" name="firstname" value="<?= $_POST['firstname']; ?>"></td>
            </tr>
            <tr>
                <td>Last Name</td>
                <td><input type="text" name="lastname" value="<?= $_POST['lastname']; ?>"></td>
            </tr>
            <tr>
                <td>Company's Name</td>
                <td><input type="text" name="company_name" value="<?= $_POST['company_name']; ?>"></td>
            </tr>
            <?php /*<tr>
                <td>Assign Member</td>
                <td><?php print ncn_subuser_member_dropdown('parent_mid', $_POST['parent_mid']); ?></td>
            </tr> */ ?>
            <tr>
                <td colspan="2"><input type="submit" value="Add Lead Generator User"></td>
            </tr>
        </table>
    </fieldset>
    
    </form> 
    <?php
}
//------------------------------------------------------------------------------
// see user.admin.inc
function user_add_associate()
{
// user tried to add a associate
    if (isset($_POST['tfunction']))
    {
        // error checking
        $error = false;
        
        foreach ($_POST as $key=>$val)
        {
            if (($_POST[$key] == '') && ($error == false))
            {
                drupal_set_message("All fields must be completed.", 'error');
                $error = true;
            }
        }
        
        // check valid username
        if ($error == false)
        {
            $query = "SELECT * FROM users WHERE `name`=\"".AddSlashes($_POST['name'])."\";";
            $result = db_query($query);
            foreach($result as $row)
            {
                $row = (array)$row;         
                if(count($row) > 0)
                {
                    drupal_set_message("That username is taken.", 'error');
                    $error = true;
                }   
            }           
        }
        
        if ($error == false) {
            if (!valid_email_address($_POST['mail'])) {
                drupal_set_message('Email address is invalid, Please retry to input email address.', 'error');
                $error = true;
            }
        }

        // check passwords match        
        if ($error == false)
        {
            if ($_POST['pass'] != $_POST['pass2'])
            {
                drupal_set_message("Passwords do not match.", 'error');
                $error = true;
            }
        }
        
        // check valid email
        if ($error == false)
        {
            $query = 'SELECT * FROM users WHERE mail = :mail';
            $result = db_query($query,array(':mail'=>addslashes($_POST['mail'])));
            foreach($result as $row)
            {
                $row = (array)$row;         
                if(count($row) > 0)
                {
                    drupal_set_message("Warining: That email address is already in use.", 'error');
                    // $error = true;
                }   
            }           
        }
        
        // no errors, so try the card // associate doesn't need credit card
        /*if ($error == false)
        {
            $error = attempt_add_distributor_card();
        }*/
        
        // add good, so add the associate
        if ($error == false)
        {
            $section1 = $_POST;
            
            unset($section1['pass2']);
            unset($section1['tfunction']);
            $section1['status'] = 1;
            $section1['roles'] = array(7 => 7, 2 => 1, 5 => 0, 6 => 0, 3 => 0, 4 => 0); 

            $section2 = array(
                'pass' => $_POST['pass'],
                'init' => $_POST['mail'],
                'roles' => array(7 => 7, 2 => 1)
            );
        
        
            $account = user_save('', array_merge($section1, $section2));
                          
            // Terminate if an error occured during user_save().
            if (!$account) {
                drupal_set_message(t("Error saving user account."), 'error');
                $form_state['redirect'] = '';
                $error = true;
            }
            
            // send welcome email (account manager) HERE
            $params = array(
                '!username' => $_POST['name'],
                '!password' => $_POST['pass'],
                '!firstname' => $_POST['profile_firstname'],
                '!lastname' => $_POST['profile_lastname'],
            );
                        
            drupal_mail('ncn_admin', 'associate', $_POST['mail'], language_default(), $params);
            
        }
        
        // everything worked - show success
        if ($error == false)
        {
            // save the ownersship relationship
            $query = "INSERT INTO users_parent (uid, parent) VALUES(".$account->uid.", ".$_POST['account_manager'].");";
            $result = db_query($query);
        
            unset($_POST);
            drupal_set_message("Associate '".$_POST['name']."' added successfully", 'status');
        }
        
         
    }

    // ---- draw the form ----

    ?>
    <form method="POST">
    <input type="hidden" name="tfunction" value="add_associate">

    <fieldset>
    <legend>Create new Assoicate</legend>
    
        
        <table style="width:400px;border:0;">
            <tr>
                <td>Username</td>
                <td><input type="text" name="name" value="<?= $_POST['name']; ?>"></td>
            </tr>
            <tr>
                <td>Assign Account Manager</td>
                <td><?php account_manager_dropdown(); ?></td>
            </tr>
            <tr>
                <td>E-mail</td>
                <td><input type="text" name="mail" value="<?= $_POST['mail']; ?>" AUTOCOMPLETE="off"></td>
            </tr>
            <tr>
                <td>Password</td>
                <td><input type="password" name="pass" value="<?= $_POST['pass']; ?>" AUTOCOMPLETE="off"></td>
            </tr>
            <tr>
                <td>Confirm Password</td>
                <td><input type="password" name="pass2" value="<?= $_POST['pass']; ?>" AUTOCOMPLETE="off"></td>
            </tr>
            <tr>
                <td>First Name</td>
                <td><input type="text" name="profile_firstname" value="<?= $_POST['profile_firstname']; ?>"></td>
            </tr>
            <tr>
                <td>Last Name</td>
                <td><input type="text" name="profile_lastname" value="<?= $_POST['profile_lastname']; ?>"></td>
            </tr>
            <tr>
                <td>Company's Name</td>
                <td><input type="text" name="profile_legalname" value="<?= $_POST['profile_legalname']; ?>"></td>
            </tr>
            <tr>
                <td>Country</td>
                <td><?php draw_countryform_part('profile_country', false, false); ?></td>
            </tr>
            <tr>
                <td>Address</td>
                <td><input type="text" name="profile_address" value="<?= $_POST['profile_address']; ?>"></td>
            </tr>
            <tr>
                <td>City</td>
                <td><input type="text" name="profile_city" value="<?= $_POST['profile_city']; ?>"></td>
            </tr>
            <tr>
                <td>Province/State</td>
                <td><?php draw_stateform_part('profile_state', false, false); ?></td>
            </tr>
            <tr>
                <td>Zip</td>
                <td><input type="text" name="profile_zip" value="<?= $_POST['profile_zip']; ?>"></td>
            </tr>

            <!-- <tr>
                <td>Credit Card Number</td>
                <td><input type="text" name="profile_credit_card_number" value="<?= $_POST['profile_credit_card_number']; ?>"></td>
            </tr>
            <tr>
                <td>Expiration Date (mm/yy)</td>
                <td><input type="text" name="profile_credit_card_expiration" value="<?= $_POST['profile_credit_card_expiration']; ?>"></td>
            </tr>
            <tr>
                <td>Security Code</td>
                <td><input type="text" name="profile_credit_card_security" value="<?= $_POST['profile_credit_card_security']; ?>"></td>
            </tr>
            <tr>
                <td>Name as it appears on card</td>
                <td><input type="text" name="profile_credit_card_name" value="<?= $_POST['profile_credit_card_name']; ?>"></td>
            </tr> -->
            
            <tr>
                <td colspan="2"><input type="submit" value="Add Associate"></td>
            </tr>
        </table>
    </fieldset>
    
    </form> 
    <?php
}

//------------------------------------------------------------------------------
// see user.admin.inc
function user_add_sub_user()
{
// user tried to add a associate
    if (isset($_POST['tfunction']))
    {
        $parent_mid = $_POST['parent_mid'];
        if ( module_exists('ncn_subuser') ) {
            if (ncn_subuser_create_subuser($parent_mid, $_POST)) {
                unset($_POST);
            }
        }
    }

    // ---- draw the form ----

    ?>
    <form method="POST">
    <input type="hidden" name="tfunction" value="create-subuser">

    <fieldset>
    <legend>Create new Sub User</legend>
    
        
        <table style="width:400px;border:0;">
            <tr>
                <td>Username</td>
                <td><input type="text" name="name" value="<?= $_POST['name']; ?>"></td>
            </tr>
            <tr>
                <td>Assign Member</td>
                <td><?php print ncn_subuser_member_dropdown('parent_mid', $_POST['parent_mid']); ?></td>
            </tr>
            <tr>
                <td>E-mail</td>
                <td><input type="text" name="mail" value="<?= $_POST['mail']; ?>" AUTOCOMPLETE="off"></td>
            </tr>
            <tr>
                <td>Password</td>
                <td><input type="password" name="pass" value="<?= $_POST['pass']; ?>" AUTOCOMPLETE="off"></td>
            </tr>
            <tr>
                <td>Confirm Password</td>
                <td><input type="password" name="pass2" value="<?= $_POST['pass']; ?>" AUTOCOMPLETE="off"></td>
            </tr>
            <tr>
                <td>First Name</td>
                <td><input type="text" name="profile_firstname" value="<?= $_POST['profile_firstname']; ?>"></td>
            </tr>
            <tr>
                <td>Last Name</td>
                <td><input type="text" name="profile_lastname" value="<?= $_POST['profile_lastname']; ?>"></td>
            </tr>
            <tr>
                <td>Company's Name</td>
                <td><input type="text" name="profile_legalname" value="<?= $_POST['profile_legalname']; ?>"></td>
            </tr>
            <tr>
                <td>Country</td>
                <td><?php draw_countryform_part('profile_country', false, false); ?></td>
            </tr>
            <tr>
                <td>Address</td>
                <td><input type="text" name="profile_address" value="<?= $_POST['profile_address']; ?>"></td>
            </tr>
            <tr>
                <td>City</td>
                <td><input type="text" name="profile_city" value="<?= $_POST['profile_city']; ?>"></td>
            </tr>
            <tr>
                <td>Province/State</td>
                <td><?php draw_stateform_part('profile_state', false, false); ?></td>
            </tr>
            <tr>
                <td>Zip</td>
                <td><input type="text" name="profile_zip" value="<?= $_POST['profile_zip']; ?>"></td>
            </tr>
            
            <tr>
                <td colspan="2"><input type="submit" value="Add Sub User"></td>
            </tr>
        </table>
    </fieldset>
    
    </form> 
    <?php
}

//------------------------------------------------------------------------------
// delete claims from users that no longer exist
function ncn_admin_cleanup_claims()
{
    // delete claims from dead users
//  $query = "SELECT DISTINCT user_id FROM claims;";
    $result = db_query('SELECT DISTINCT user_id FROM claims');
    foreach($result as $row)
    {
        $row = (array)$row;
                
        // check to see if this user exists
    //  $query2 = "SELECT * FROM users WHERE uid=".$row['user_id'];
        $result2 = db_query('SELECT * FROM users WHERE uid=:a',array(':a'=>$row['user_id']));
        $row_count2 = $result2->rowCount();
        
        // user no longer exists...
        if ($row_count2 == 0)
        {
            // delete claims from this dead user
        //  $query2 = "DELETE FROM claims WHERE user_id=".$row['user_id'];
            $result2 = db_query('DELETE FROM {claims} WHERE user_id=:a',array(':a'=>$row['user_id']));
            
        }
    }
    
    
}

//------------------------------------------------------------------------------
function update_username($uid, $new_username) {
    if (trim($new_username) == '') {
        drupal_set_message("UserName shouldn't be empty.", "error");
        return FALSE;
    }
    
    // validation
    $res = db_query('SELECT COUNT(*) FROM {users} WHERE uid != :d AND LOWER(name) = LOWER(:s)',array(':d'=>$uid,':s'=>$new_username))->fetchField();
//    var_dump($res);
//    exit;
    if (!$uid || user_access('administer users')) {
        if ($error = user_validate_name($new_username)) {
            drupal_set_message('User Name is invalid', 'error');
            return FALSE;
        }

        else if($res>0)
        {
            drupal_set_message( t('The name :name is already taken.', array(':name' => $new_username)), 'error' );
            return FALSE;
        }
    }
    
    // submit
    $account = user_load($uid);
    $name =  strtolower($new_username);

    $success = db_query('UPDATE {users} SET name=:a WHERE uid = :d', array(':a'=>$name,':d'=>$account->uid));
    if (!$success) {
        drupal_set_message("Failed to change username", "error");
        // The query failed - better to abort the save than risk further data loss.
        return FALSE;
    }
    
    // Refresh user object.
    $user = user_load(array('uid' => $account->uid));
    
    $category = 'account';
    user_module_invoke('after_update', $array, $user, $category);
    return TRUE;
}

function ncn_admin_edit_user_extra_profile($uid) {
    
    ob_start();
    user_edit_extra_profile($uid);
    $output = ob_get_contents();
    ob_end_clean();
    return $output;
}
// edit extra profile fields
function user_edit_extra_profile($uid, $in_admin=true)
{
    $title = "";
    $user_profile_url = 'account/my-account.html';  
    if ($in_admin) {
        $user_profile_url = 'admin/config/ncn_create_user/all_user_list/edit_user/'.$uid;
        $title = "Edit Extra Profile";
    }
    $user_profile_url = base_path().$user_profile_url;
    echo "<div style='width: 100%;' class='clearfix'>
                <h2>$title<div style='float: right; font-size: 14px; font-weight: normal;'><a href='$user_profile_url'>Back</a></div></h2>
                </div>";
    echo "<div id='edit_extra_profile_wrapper' style='margin-top: 10px;'>";
    echo display_user_extra_profiles($uid);
    echo "</div>";
}

function display_user_extra_profiles($uid) {
    ob_start();
    $user = user_load($uid);
    ?>
    <style>
        #edit-profile-taxnumber-wrapper, .form-item-profile-taxnumber{display:<?php echo ($user->profile_taxstatus=='1' ? 'block':'none'); ?>;}
        .form-item-profile-question-service {display:none;}
    </style>
    <script type="text/javascript">
        jQuery(document).ready(function(){
            jQuery("#edit-profile-taxstatus").click(function(){jQuery('.form-item-profile-taxnumber').slideToggle('slow');});
        });
    </script>
    <?php
    $content = ob_get_contents();
    ob_end_clean();
    
    $form = drupal_get_form('user_extra_profile_form'); 
    
    /*echo "<pre>";
    print_r($form);
    echo "</pre>";*/
    
    $content .= drupal_render($form);
    
    /*$form_errors = form_get_errors();
    if ( $form_errors ) {
        if (isset($form_errors['next-confirm'])) {
            //watchdog('trace-1', 'Here is Confirm Page'.$form_erros['next-confirm'], array());
            $content = "<div id=\"user_register_form\" style=\"display: none;\">$content</div>";
            $javascript = 
                "\r\t<script type='text/javascript'> 
                $().ready(function() {
                    $('#edit-user-confirm-page').val('1');
                });
                </script>";
            //$content .=$javascript;
            $confirm_page = get_user_confirm_page();
            $content .= $confirm_page;
        }
    }*/
    
    return $content;
}

function user_extra_profile_form($form, &$form_state) {
    //global $user;
    if (arg(0) == 'admin') {
        $uid = arg(4);
    } else {
        $uid = $GLOBALS['user']->uid;
    }
    $c_user = user_load($uid);

    module_load_include('pages.inc', 'user', 'user');
    
    //$form = user_edit_form($form_state, NULL, NULL, TRUE);    
    //$extra = _user_forms($null, NULL, NULL, 'register');
    
    $form = array();
    $extra = array();
    $form = drupal_get_form('user_profile_form',$c_user);
    
    $extraval = $c_user;
    if(isset($_POST['op'])){
        foreach($_POST as $key=>$val) {
            if (strpos($key, 'profile_') === 0) {
                $extraval->$key = $val;
            }
        }
    }

    $extraA = drupal_get_form('user_profile_form',$extraval,'Company Information');
    $extraB = drupal_get_form('user_profile_form',$extraval,'Operations Information');
    $extraC = drupal_get_form('user_profile_form',$extraval,'Principal Owners');
    $extra = array_merge($extraC,$extraB,$extraA);

    // patch in the firstname/lastname
    if (isset($_GET['id']))
    {
        $result = db_query('SELECT * FROM member_id_pool WHERE member_id=:mid',array(':mid'=>addslashes(base64_decode($_GET['id']))));
        if ($result->rowCount() > 0)
        {
            $row = $result->fetchAssoc();
            
            $groups['Company Information']['profile_firstname']['#default_value'] = $row['first_name'];
            $groups['Company Information']['profile_firstname']['#attributes'] = array('readonly' => 'readonly', 'style' => 'background-color:#EBEBE4;');;

            $groups['Company Information']['profile_lastname']['#default_value'] = $row['last_name'];
            $groups['Company Information']['profile_lastname']['#attributes'] = array('readonly' => 'readonly', 'style' => 'background-color:#EBEBE4;');;

            $groups['Company Information']['profile_legalname']['#default_value'] = $row['legalname'];
            $groups['Company Information']['profile_legalname']['#attributes'] = array('readonly' => 'readonly', 'style' => 'background-color:#EBEBE4;');;

            $groups['Company Information']['profile_country']['#default_value'] = $row['country'];
            $groups['Company Information']['profile_country']['#attributes'] = array('readonly' => 'readonly', 'style' => 'background-color:#EBEBE4;');;
            
            $groups['Company Information']['profile_address']['#default_value'] = $row['address'];
            $groups['Company Information']['profile_address']['#attributes'] = array('readonly' => 'readonly', 'style' => 'background-color:#EBEBE4;');;

            $groups['Company Information']['profile_city']['#default_value'] = $row['city'];
            $groups['Company Information']['profile_city']['#attributes'] = array('readonly' => 'readonly', 'style' => 'background-color:#EBEBE4;');;

            $groups['Company Information']['profile_state']['#default_value'] = $row['state'];
            $groups['Company Information']['profile_state']['#attributes'] = array('readonly' => 'readonly', 'style' => 'background-color:#EBEBE4;');;

            $groups['Company Information']['profile_zip']['#default_value'] = $row['zip'];
            $groups['Company Information']['profile_zip']['#attributes'] = array('readonly' => 'readonly', 'style' => 'background-color:#EBEBE4;');;

            $groups['Company Information']['profile_officephone']['#default_value'] = $row['officephone'];
            $groups['Company Information']['profile_officephone']['#attributes'] = array('readonly' => 'readonly', 'style' => 'background-color:#EBEBE4;');;

            $groups['Company Information']['profile_contactemail']['#default_value'] = $row['contactemail'];
            $groups['Company Information']['profile_contactemail']['#attributes'] = array('readonly' => 'readonly', 'style' => 'background-color:#EBEBE4;');;
            
            // make others readonly
            if (trim($row['sales_rep']) != '')
            {
                $groups['Distributor']['profile_sales_rep']['#default_value'] = $row['sales_rep'];
                $groups['Distributor']['profile_sales_rep']['#attributes'] = array('readonly' => 'readonly', 'style' => 'background-color:#EBEBE4;');;
            }

            $groups['Distributor']['profile_distributor']['#default_value'] = $row['distributor'];
            $groups['Distributor']['profile_distributor']['#attributes'] = array('readonly' => 'readonly', 'style' => 'background-color:#EBEBE4;');;
            
            // has the administrator already set the credit card details?
            $result2 = db_query('SELECT * FROM member_cim WHERE member_id=:mid',array(':mid'=>addslashes(base64_decode($_GET['id']))));
            if ($result2->rowCount()!= 0)
            {
                $row2 = $result2->fetchAssoc();

                // check for free
                if ($row2['customerProfileId'] == "FREE")   
                {
                    // add hidden credit card details for free account
                    unset($groups['Credit Card Information']['profile_credit_card_type']);                  
                    unset($groups['Credit Card Information']['profile_credit_card_expiration']);                    
                    unset($groups['Credit Card Information']['profile_credit_card_security']);                  
                    unset($groups['Credit Card Information']['profile_credit_card_name']);

                    unset($groups['Credit Card Information']['#type']);
                    
                    $groups['Credit Card Information']['profile_credit_card_number']['#type'] = "hidden";                   
                    $groups['Credit Card Information']['profile_credit_card_number']['#default_value'] = "5424000000000015";                    
                }
                else
                {
                    unset($groups['Credit Card Information']);
                }
            }   // END cc profile already set
        }
    }
    
    // insert the default email address
    $form['account']['mail']['#default_value'] = $extra['Company Information']['profile_contactemail']['#default_value'];
    
    // Remove form_group around default fields if there are no other groups.
    if (!$extra) {
        foreach (array('name', 'mail', 'pass', 'status', 'roles', 'notify') as $key) {
            if (isset($form['account'][$key])) {
                $form[$key] = $form['account'][$key];
            }
        }
        unset($form['account']);
    }
    else {
        $form = array_merge($form, $extra);
    }
    
    $_user = user_load($uid);
    // update form
    $form['huser_id'] = array(
        '#type' => 'hidden', 
        '#default_value' => $uid,
    );
    
    unset($form['account']);
    unset($form['picture']);
    unset($form['timezone']);
    unset($form['Distributor']);
    unset($form['Credit Card Information']);
    unset($form['Company Information']['profile_firstname']);
    unset($form['Company Information']['profile_lastname']);
    unset($form['Company Information']['profile_legalname']);
    unset($form['Company Information']['profile_country']);
    unset($form['Company Information']['profile_address']);
    unset($form['Company Information']['profile_city']);
    unset($form['Company Information']['profile_state']);
    unset($form['Company Information']['profile_zip']); 
    unset($form['Company Information']['profile_contactemail']);
    unset($form['Company Information']['profile_memberid']);
    unset($form['Company Information']['profile_fblocked']);
    unset($form['Company Information']['profile_blocked_time']);
    unset($form['Principal Owners']['profile_po_zip']);
    
    foreach ($form as $fieldset => $fs_part) {
        if (is_array($fs_part)) {
            foreach ($fs_part as $key => $profile_data) {
                if (strpos($key, 'profile_') === 0) {
                    $form[$fieldset][$key]['#default_value'] = (isset($_user->$key) ? $_user->$key : '');
                }
            }
        }
    }   
    
  $form['actions']['submit']['#value'] = t('Update');
  $form['#submit'] = array();
  $form['#submit'][] = 'user_extra_profile_form_submit';
  $form['#validate'] = array();
  $form['#validate'][] = 'user_extra_profile_form_validate';
  return $form;
}


function getListOfProfileFields($fieldsArray){
    
    $query = db_select('profile_field');
    $query->condition('name',$fieldsArray, 'IN');
    if (!user_access('administer users')) {
        $query->condition('visibility', PROFILE_HIDDEN, '<>');
    }
    return $query
    ->fields('profile_field')
    ->orderBy('category', 'ASC')
    ->orderBy('weight', 'ASC')
    ->execute();
}

function user_extra_profile_form_validate($form, &$form_state) {

    if($form['#form_id'] == 'user_register')
    {
        $account = $form['#user'];

        // Trim whitespace from mail, to prevent confusing 'e-mail not valid'
        // warnings often caused by cutting and pasting.
        $mail = trim($form_state['values']['mail']);
        form_set_value($form['account']['mail'], $mail, $form_state);

        // Validate the e-mail address, and check if it is taken by an existing user.
        if ($error = user_validate_mail($form_state['values']['mail'])) {
            form_set_error('mail', $error);
        }
        elseif ((bool) db_select('users')->fields('users', array('uid'))->condition('mail', db_like($form_state['values']['mail']), 'LIKE')->range(0, 1)->execute()->fetchField()) {
            // Format error message dependent on whether the user is logged in or not.
            if ($GLOBALS['user']->uid) {
                form_set_error('mail', t('The e-mail address %email is already taken.', array('%email' => $form_state['values']['mail'])));
            }
            else {
                form_set_error('mail', t('The e-mail address %email is already registered. <a href="@password">Have you forgotten your password?</a>', array('%email' => $form_state['values']['mail'], '@password' => url('user/password'))));
            }
        }

    }

    $form_state['values'] = $form_state['input'];
    $values = $form_state['values'];
    $keys = array_keys($values);
    $result = getListOfProfileFields($keys);

    
    foreach ($result as $field) {
        if (!empty($form_state['values'][$field->name])) {
          if ($field->type == 'url' && !valid_url($form_state['values'][$field->name], TRUE)) {
            form_set_error($field->name, t('The value provided for %field is not a valid URL.', array('%field' => $field->title)));
          }
        }
        elseif ($field->required && !user_access('administer users')) {
          form_set_error($field->name, t('The field %field is required.', array('%field' => $field->title)));
        }
    }
} 


function user_extra_profile_form_submit($form, $form_state) {
    //global $user;
    $data = $form_state['values'];
    $uid = $data['huser_id'];
    
    $newinfo = user_load($uid);
    
    $account = new stdClass();
    $account->uid = $uid;
    
    foreach($data as $key=>$val) {
        if (strpos($key, 'profile_') === 0) {
            $newinfo->$key = $val;
        }
    }
    if(!isset($data['profile_taxstatus']))
    {
        $newinfo->profile_taxstatus = 0;
    }
    //print_r($newinfo); exit;

    $edit = (array)$newinfo;
    profile_save_profile($edit, $account, 'Company Information');
    profile_save_profile($edit, $account, 'Operations Information');
    profile_save_profile($edit, $account, 'Principal Owners');
    
    drupal_set_message(t('Update extra profiles, successfully.'));
}

// used here: http://www.netclaimsnow.com/admin/user/user/list
function user_edit_new($in_admin = true, $uid = false)
{
    drupal_add_js(drupal_get_path('module', 'ncn_admin') . '/ncn_admin.js');
    // we are running this frunction from admin 
    if ($in_admin == true)
    {
        $user_id = arg(4);

        // check url supplied user id is valid
        if (!is_numeric($user_id))
        {   Header("Location:admin/user/user/list");exit;       }
                
        // load the user
        $user = user_load($user_id);
        
        if (!$user)     // check user is valid
        {   Header("Location:admin/user/user/list");exit;       }

        // set default page title
        $title = "Edit User: ".$user->profile_firstname." ".$user->profile_lastname;
        
    }
    // we are running this function from users account
    else
    {   
        $user_id = $uid;    
        $user = user_load($user_id);    // this will always work in users account

        // set default page title
        $title = "Edit My Profile";
    }

    // ---- function ----
    $tfunction = (isset($_POST['tfunction']) ? $_POST['tfunction'] : '');
    switch ($tfunction)
    {
        case "update_profile":
            
            $username_changed = false;
            $email_changed = false;
            $pass_changed = false;
            
            // has user updated their email address?
            if ($user->name != $_POST['username'])
            {
                if (update_username($user->uid, $_POST['username'])) {
                    drupal_set_message('username has been updated');
                    $username_changed = true;
                }
            }
            
            if ($user->mail != $_POST['mail'])
            {
                // check new email address is valid
                if ($error = user_validate_mail($_POST['mail']))
                {
                    drupal_set_message($error, 'error');    // email failed verfication 
                }
                // email was valid, so update in the database and flag to send new welcome email 
                else
                {
                    // save new email in database
                    $query = 'UPDATE `users` SET `mail` = :mail WHERE uid = :uid';
                    $result = db_query($query,array(':mail'=>addslashes($_POST['mail']),':uid'=>$user_id));
                    
                    // flag for confirmation email
                    $email_changed = true;
                    
                    // success message
                    drupal_set_message(t("Email address has been updated."), 'status');
                }
            }
            
            // has user updated the password?
            if (($_POST['pass'] != '') || ($_POST['pass2'] != ''))
            {
                // check match
                if ($_POST['pass'] != $_POST['pass2'])
                {
                    drupal_set_message(t("Passwords do not match."), 'error');
                }
                else
                if (strlen($_POST['pass']) < 5)
                {
                    drupal_set_message(t("Password must be at least 5 characters."), 'error');
                }
                // all good, so update it 
                else
                {
                    // update database with new password 
                    require_once DRUPAL_ROOT . '/' . variable_get('password_inc', 'includes/password.inc');
                    $encrypted_pass = user_hash_password(trim($_POST['pass']));
                    
                //  $query = "UPDATE `users` SET `pass`=\"".AddSlashes($encrypted_pass)."\" WHERE uid=".$user_id;
                    $result = db_query('UPDATE {users} SET pass=:a WHERE uid=:b',
                        array(':a'=>$encrypted_pass,':b'=>$user_id));
                    
                    // flag for confirmation email
                    $pass_changed = true;

                    // success message
                    drupal_set_message(t("Password has been updated."), 'status');
                }
                
            }
            
            // update all other details
            /*update_profile_var($user->uid, 'profile_firstname', $_POST['profile_firstname']);
            update_profile_var($user->uid, 'profile_lastname', $_POST['profile_lastname']);
            update_profile_var($user->uid, 'profile_legalname', $_POST['profile_legalname']);
            update_profile_var($user->uid, 'profile_country', $_POST['profile_country']);
            update_profile_var($user->uid, 'profile_address', $_POST['profile_address']);
            update_profile_var($user->uid, 'profile_city', $_POST['profile_city']);
            update_profile_var($user->uid, 'profile_state', $_POST['profile_state']);
            update_profile_var($user->uid, 'profile_zip', $_POST['profile_zip']);*/
            
            $user->profile_firstname = $_POST['profile_firstname'];
            $user->profile_lastname = $_POST['profile_lastname'];
            $user->profile_legalname = $_POST['profile_legalname'];
            $user->profile_country = $_POST['profile_country'];
            $user->profile_address = $_POST['profile_address'];
            $user->profile_city = $_POST['profile_city'];
            $user->profile_state = $_POST['profile_state'];
            $user->profile_zip = $_POST['profile_zip'];
            
            $account = new stdClass;
            $account->uid = $user->uid;
            
            $edit = (array)$user;
            /*echo "<pre>";             
            print_r($edit);
            exit;*/
            
            profile_save_profile($edit, $account, 'Company Information');
            
            // check for no changes
            //if ($email_changed || $pass_changed || $username_changed)
            //{
                drupal_set_message(t("Profile has been updated."), 'status');
            //}

            if (isset($user->profile_memberid)&&is_member($user->profile_memberid)) {
                $result = db_query("UPDATE {member_id_pool} SET 
                                   first_name=:fn, last_name=:ln, legalname=:lgn, country=:cn, address=:ad, city=:ct, state=:st, zip=:zp WHERE member_id=:mid", 
                                   array(':fn'=>$_POST['profile_firstname'],':ln'=>$_POST['profile_lastname'],':lgn'=>$_POST['profile_legalname'],
                                         ':cn'=>$_POST['profile_country'],':ad'=>$_POST['profile_address'],':ct'=>$_POST['profile_city'], 
                                         ':st'=>$_POST['profile_state'],':zp'=>$_POST['profile_zip'],':mid'=>$user->profile_memberid)
                                  );
            }
            // we need to reload user
            $user = user_load($user_id);
        break;
        case "upload_member_logo":
            ncn_admin_upload_member_logo($_REQUEST['member_id']);
            break;
        case "remove_member_logo":
            ncn_admin_remove_member_logo($_REQUEST['member_id']);
            break;
        case "update_user_role":
            if (ncn_admin_update_user_role($user, $_POST['user_role'])) {
                drupal_set_message(t("User role has been updated."), 'status');
                $user = user_load($user_id);
            } else {
                drupal_set_message(t("Failed to update user role."), 'error');
            }
            break;
        case "update_dist_asso":
            $owner_id = 0; 
            if (isset($user->profile_memberid)) {
                $owner_id = get_owner($user->profile_memberid);
                $new_type = $_POST['dist_asso'];
                $new_ownerid = $_POST[$new_type];
                if ($owner_id != $new_ownerid) {
                    ///////////////////////////////////////////////////////
                //  $query = "UPDATE member_id_pool SET owner=$new_ownerid WHERE member_id ='".$user->profile_memberid."'";
                    $result = db_query('UPDATE {member_id_pool} SET owner=:a WHERE member_id =:b',
                        array(':a'=>$new_ownerid,':b'=>$user->profile_memberid));
                    if ($result) {
                        drupal_set_message("Updated associated $new_type successfully.");
                        ncn_report_change_owner($user->profile_memberid, $owner_id, $new_ownerid);
                    } else {
                        drupal_set_message("Failed to update associated $new_type", "error");
                        break;
                    }
                }
            }
            break;
        case "update_account_manager":
            $am_uid = $_POST['am_uid'];
            if (!ncn_admin_assign_member_to_am($user->profile_memberid, $am_uid)) {
                drupal_set_message(t('Failed to reassign. Please report to web master.'), 'error');
            } else {
                drupal_set_message(t('Reassigned to account manager, successfully.'));
            }
            
            break;
        case "change_report_pass":
            if ( ncn_dist_change_report_pass() ) {  
            
            }
            break;
      //  $res = db_query('SELECT COUNT(*) FROM {member_cim} WHERE member_id=:a',array(':a'=>$user->profile_memberid))->fetchField();
        case "update_practicepay_profile":
            if (is_distributor($user))  // for distributors
            {
                $query = db_query('UPDATE {member_distributor_cim} SET customerProfileId=:a, customerPaymentProfileId=:b
                WHERE username=:c',array(':a'=>$_POST['customerProfileId'],':b'=>$_POST['customerPaymentProfileId'],
                    ':c'=>$user->name));
            }
            else    // for normal users
            {
                if ((db_query('SELECT COUNT(*) FROM {member_cim} WHERE member_id=:a',array(':a'=>$user->profile_memberid))->fetchField())==0) {
                    $query = db_query('INSERT INTO {member_cim} (member_id, customerProfileId, customerPaymentProfileId)
                    VALUES(:a,:b,:c)',array(':a'=>$user->profile_memberid,':b'=>$_POST['customerProfileId'],
                        ':c'=>$_POST['customerPaymentProfileId']));
                } else {
                    $query = db_query('UPDATE {member_cim} SET customerProfileId=:a, customerPaymentProfileId=:b
                    WHERE member_id=:c',array(':a'=>$_POST['customerProfileId'],':b'=>$_POST['customerPaymentProfileId'],
                        ':c'=>$user->profile_memberid));
                }
            }
            
            $result = $query;   // do the sql update
            drupal_set_message(t("PracticePay Profile ID's have been updated in the database."), 'status');
            
        break;
        case "update_member_type":
      $p_member_type = $_POST['member_type'];
      $member = get_member_from_id($user->profile_memberid);
      if ($member['member_type'] == $p_member_type) { 
        break; 
      } else {
        ncn_user_insert_log_old_member_type($user->profile_memberid, $member['member_type'], $p_member_type, date('U'));
      }
            
            $query = db_query('UPDATE {member_id_pool} SET member_type =:a WHERE member_id=:b',
                array(':a'=>$p_member_type,':b'=>$user->profile_memberid));
            
            if ($p_member_type==5) {
                $member_type_name = 'CSI Member';
            } else if ($p_member_type==4) {
                $member_type_name = 'NCN Gold Coach Member';    
            } else if ($p_member_type==3) {
                $member_type_name = 'NCN Coach on Call Member';
            } else if ($p_member_type==2) {
                $member_type_name = 'NCN Gold Lite Member';
            } else if ($p_member_type==1) {
                $member_type_name = 'NCN Silver Member';
            } else {
                $member_type_name = 'NCN Gold Member';
            }
            
            $result = $query;
            if ($result) {
                drupal_set_message(t('Member Type updated to !member_type_name successfully', array('!member_type_name'=>$member_type_name)) );
            } else {
                drupal_set_message(t('Failed to update member type.'), 'error');
            }
        break;
    case "cancel_pause_member":
      $result = ncn_admin_cancel_pause_member($user->uid);
      $user = user_load($user->uid);
      break;
    case "unblock_member":
      $result = ncn_admin_unblock_member($user->uid);
      $user = user_load($user->uid);
      break;
    case "change_member_renewal_date":
      $result = ncn_user_change_member_renewal_day($user->profile_memberid, (int)($_POST['ncn_admin_member_renewal_date']));
      if ($result) {
        drupal_set_message("Success to change member renewal day");        
      }
      $user = user_load($user->uid);
      break;
        case "send_claim_reminder_mail": 
            $result = ncn_admin_send_reminder_mail($user->uid);
        break;
        case "grant_subuser" :
            $grant_subuser = $_POST['grant_subuser'];
            ncn_subuser_grant_creating_subuser($user->profile_memberid, $grant_subuser);
        break;
        case "convert_demo_to_regular":
            $result = db_query('UPDATE {member_gold_demo} SET status=0 WHERE member_id=:a AND expired=0 AND status=1 ORDER BY to_expired_time DESC',
                array(':a'=>$user->profile_memberid));
            if ($result) {
                drupal_set_message(t('Convert demo to regular, successfully.'));
            } else {
                drupal_set_message(t('Failed to convert demo to regular.'), 'error');
            }
        case "update_cc":
            
            /*
            // check for free
            if ($_POST['credit_card_number'] != '5424000000000015')
            {
            
                // add the user to cim
                $content =
                    "<?xml version=\"1.0\" encoding=\"utf-8\"?>" .
                    "<createCustomerProfileRequest xmlns=\"AnetApi/xml/v1/schema/AnetApiSchema.xsd\">" .
                    MerchantAuthenticationBlock().
                    "<profile>".
                    "<merchantCustomerId>" . get_unique_auth_profile_id() . "</merchantCustomerId>". // Your own identifier for the customer.
                    "<description>".$user->profile_firstname." ".$user->profile_lastname."</description>".
                    "<email>" . $user->mail . "</email>".
                    "</profile>".
                    "</createCustomerProfileRequest>";  // <?php
                
                $response = send_xml_request($content);
                $parsedresponse = parse_api_response($response);
                    
                $customerProfileId = $parsedresponse->customerProfileId;
            
            
                // try and add the payment profile
                $date = explode("/", $_POST['credit_card_expiration']);
                
                if (sizeof($date) == 2)
                {       $date = "20".$date[1]."-".$date[0];   }
                else
                {       $date = '';     }
                
                $content =
                "<?xml version=\"1.0\" encoding=\"utf-8\"?>" .
                "<createCustomerPaymentProfileRequest xmlns=\"AnetApi/xml/v1/schema/AnetApiSchema.xsd\">" .
                MerchantAuthenticationBlock().
                "<customerProfileId>" . $customerProfileId . "</customerProfileId>".
                "<paymentProfile>".
                "<billTo>".
                 "<firstName>".$user->profile_firstname."</firstName>".
                 "<lastName>".$user->profile_lastname."</lastName>".
//               "<country>".$user->profile_country."</country>".
                 "<address>".$user->profile_address."</address>".
                 "<city>".$user->profile_city."</city>".
                 "<state>".$user->profile_state."</state>".
                 "<zip>".$user->profile_zip."</zip>".
                 "<phoneNumber>000-000-0000</phoneNumber>".
                "</billTo>".
                "<payment>".
                 "<creditCard>".
                  "<cardNumber>".$_POST['credit_card_number']."</cardNumber>".
                  "<expirationDate>".$date."</expirationDate>". // required format for API is YYYY-MM
                  "<cardCode>".$_POST['credit_card_security']."</cardCode>".
                 "</creditCard>".
                "</payment>".
                "</paymentProfile>".
                "<validationMode>liveMode</validationMode>". // or liveMode
                "</createCustomerPaymentProfileRequest>";   // <?php
            
                $response = send_xml_request($content);
                $parsedresponse = parse_api_response($response);
                $customerPaymentProfileId = $parsedresponse->customerPaymentProfileId;

                // error check
                if ($parsedresponse->messages->resultCode == 'Error')
                {
                    $error = "Credit/debit card details are invalid/expired.";
                    drupal_set_message($error, 'error');
                }
                else
                {
                    // success 
                    drupal_set_message(t("Payment profile updated with new credit card."), 'status');
                }

            }   // END check free
            else
            {
                // save this profile as free!
                $customerProfileId = "FREE";
                $customerPaymentProfileId = "FREE";
                
                drupal_set_message(t("Credit card updated to FREE."), "status");
            }       
            
        
            // update the payment profile id# in the database
            if (!isset($error))
            {
                // now update the actual card details in the profile
                //update_profile_var($user->uid, 'profile_credit_card_number', $_POST['credit_card_number']);
                //update_profile_var($user->uid, 'profile_credit_card_expiration', $_POST['credit_card_expiration']);
                update_profile_var($user->uid, 'profile_credit_card_security', $_POST['credit_card_security']);

                // switch for distributor/user
                if (is_distributor($user))
                {
                    $query = "UPDATE member_distributor_cim SET customerProfileId=\"".AddSlashes($customerProfileId)."\",customerPaymentProfileId=\"".AddSlashes($customerPaymentProfileId)."\" WHERE username=\"".AddSlashes($user->name)."\";";
                    $result = db_query($query);
                }
                else    // normal users
                {
                    $query = "UPDATE member_cim SET customerProfileId=\"".AddSlashes($customerProfileId)."\",customerPaymentProfileId=\"".AddSlashes($customerPaymentProfileId)."\" WHERE member_id=\"".AddSlashes($user->profile_memberid)."\";";
                    $result = db_query($query);
                }
                
            }   // END there were no errors
            */  
        if ($_POST['credit_card_security']!="") {
            update_profile_var($user->uid, 'profile_credit_card_security', $_POST['credit_card_security']);
        //  $query = "UPDATE member_id_pool SET security_code='".$_POST['credit_card_security']."' WHERE member_id='".$user->profile_memberid."'";
            $result = db_query('UPDATE {member_id_pool} SET security_code=:a  WHERE member_id=:b',
            array(':a'=>$_POST['credit_card_security'],':b'=>$user->profile_memberid));
            $user = user_load($user->uid);
        }
        break;
        case "update_org_party_id":
            $org_id = intval($_POST['org_id']);
            $person_id = intval($_POST['person_id']);
            if (ncn_capsulecrm_save_map_info($user->profile_memberid, $org_id, $person_id) ) {
        ncn_capsulecrm_set_user_detail_link($user->uid);
                drupal_set_message("Success to update capsulecrm party id");
            } else {
                drupal_set_message("Failed to update capsulecrm party id", 'error');
            }
        break;
    case "update_capsulecrm_user_token":
      $casulecrm_user_token = $_POST['casulecrm_user_token'];
      if (ncn_capsulecrm_token_save_user_token($user->uid, $casulecrm_user_token)) {
        drupal_set_message("Success to set capsulecrm user token");
      } else {
        drupal_set_message("Failed to set capsulecrm user token", 'error');
      }
    break;
    
    case "update_capsulecrm_account":
      $capsulecrm_account = $_POST['casulecrm_account'];
      if (ncn_capsulecrm_account_save_account($user->uid, $capsulecrm_account)) {
        drupal_set_message("Success to set capsulecrm account");
      } else {
        drupal_set_message("Failed to set capsulecrm account", 'error');
      }
    break;
    }
    
    // ---- show the form ----
    ?>
    <!-- <h2><?= $title; ?></h2> -->
    
    <fieldset class="edit_user_group">
    <?php if(isset($user->profile_memberid)&&is_member($user->profile_memberid)): ?>
    <?php 
        $extra_field_url = 'account/my-extra-profile.html';
        if (arg(0) == 'admin') {
            $extra_field_url = 'admin/config/ncn_create_user/edit_user_extra_profile/'.$user->uid;
        }
    ?>
        <div style="float: right; margin-top: 5px;"><a href="<?php echo base_path().$extra_field_url; ?>">Edit extra profiles</a></div>
    <?php endif;?>
    <h2 class="sub-title">Profile</h2>

    <p style="font-style: italic; font-size: 11px;">Password is optional.</p>
    <p>For example, if you only wish to update users email address, leave all other fields blank.</p>
    
    <form method="POST" id="update_profile_form">
    <input type="hidden" name="tfunction" value="update_profile">
    <table style="width:100%;">
        <tr>
            <td class="td-label">Username:</td>
            <td><input type="text" name="username" id="username" value="<?= $user->name; ?>" style="width:200px;" <?php if ($GLOBALS['user']->uid!=1 && !user_access('ncn_admin edit username')) {echo "readonly";} ?>></td>
        </tr>
        <!-- <tr>
            <td class="td-label">Name:</td>
            <td><input type="text" disabled="disabled" value="<?= $user->profile_firstname; ?> <?= $user->profile_firstname; ?>"  style="width:200px;"></td>
        </tr>
        <tr>
            <td class="td-label">Company:</td>
            <td><input type="text" disabled="disabled" value="<?= $user->profile_legalname; ?>"  style="width:200px;"></td>
        </tr> -->
        <tr>
            <td class="td-label">Email:</td>
            <td><input type="text" name="mail" value="<?= $user->mail; ?>"  style="width:200px;"></td>
        </tr>
        <tr>
            <td class="td-label">Password:</td>
            <td><input type="password" name="pass" value=""  style="width:200px;"></td>
        </tr>
        <tr>
            <td class="td-label">Confirm Password:</td>
            <td><input type="password" name="pass2" value=""  style="width:200px;"></td>
        </tr>
        
        <tr>
            <td class="td-label">First Name:</td>
            <td><input type="text" name="profile_firstname" value="<?= $user->profile_firstname; ?>">
        </tr>
        <tr>
            <td class="td-label">Last Name:</td>
            <td><input type="text" name="profile_lastname" value="<?= $user->profile_lastname; ?>">
        </tr>
        <tr>
            <td class="td-label">Company's Name:</td>
            <td><input type="text" name="profile_legalname" value="<?= $user->profile_legalname; ?>">
        </tr>
        <tr>
            <td class="td-label">Country:</td>
            <td><?php draw_countryform_part_sel('profile_country', false, false, $user->profile_country);?></td>
        </tr>
        <tr>
            <td class="td-label">Address:</td>
            <td><input type="text" name="profile_address" value="<?= $user->profile_address; ?>">
        </tr>
        <tr>
            <td class="td-label">City:</td>
            <td><input type="text" name="profile_city" value="<?= $user->profile_city; ?>">
        </tr>
        <tr>
            <td class="td-label">Province/State:</td>
            <td><?php draw_stateform_part_sel('profile_state', false, false, $user->profile_country, $user->profile_state);?></td>
        </tr>
        <tr>
            <td class="td-label">Zip:</td>
            <td><input type="text" name="profile_zip" value="<?= $user->profile_zip; ?>">
        </tr>
        
        <tr>
            <td class="td-label"></td>
            <td><a class="update-profile-btn" href="javascript:void(0)" onclick="update_profile_submit();">Update Profile</a></td>
        </tr>
    </table>
    </form>
    
    <?php if(isset($user->profile_memberid)&&is_member($user->profile_memberid)) : ?>
    <!-- Upload Member Logo-->
    <form id="upload_member_logo_form" method="POST" enctype="multipart/form-data">
        <input type="hidden" id="member_logo_tfunction" name="tfunction" value="upload_member_logo" />
        <input type="hidden" name="member_id" value="<?php echo $user->profile_memberid; ?>" />
        <table style="width:100%; margin-top: 30px;">
        <tr>
            <td class="td-label">Member's logo:</td>
            <td>
                    <?php if ($member_logo_path = ncn_admin_get_member_logo($user->profile_memberid)): ?>
                        <img src="<?php echo base_path().$member_logo_path; ?>" style="width: 300px"/> <br/>
                    <?php endif; ?>
                    <input type="file" size="25" accept="image/jpg, image/jpeg, image/gif, image/png" id="member_logo" name="files[member_logo]" /></td>
        </tr>
        <tr>
            <td class="td-label"></td>
            <td><a class="upload-logo-btn" href="javascript:void(0)" onclick="upload_member_logo();">Upload Member Logo</a>
                <?php if ($member_logo_path = ncn_admin_get_member_logo($user->profile_memberid)): ?>
                    <a class="remove-logo-btn" href="javascript:void(0)" onclick="remove_member_logo();" style="margin-left: 15px;">Remove Member Logo</a>
                <?php endif; ?>
            </td>
        </tr>
        </table>
    </form>
    <?php endif; ?>
    </fieldset>
    
    <?php if(isset($user->profile_memberid) && ncn_admin_is_gold_member_demo($user->profile_memberid)): ?>
    <?php
        $result = db_query('SELECT to_expired_time, num_claims FROM {member_gold_demo} WHERE member_id=:a AND expired=0 AND status=1 ORDER BY to_expired_time DESC',
            array(':a'=>$user->profile_memberid));
        if ($result) {
//          if ($row=db_fetch_array($result))
            foreach($result as $row)
            {
                $row = (array)$row;
                if($row)
                {
                    $expired_time = date('m/d/Y H:i', $row['to_expired_time']);
                    $num_claims = $row['num_claims'];
                }
            }
        }
    ?>
    <fieldset class="edit_user_group">
        <h2 class="sub-title">Gold Member Demo</h2>
        <form method="POST" id="convert_demo_to_regular">
        <input type="hidden" name="tfunction" value="convert_demo_to_regular">
        <table style="width:100%;">
            <tr>
                <td class="td-label">Expired Time:</td>
                <td>
                    <?php echo $expired_time; ?>
                </td>
            </tr>
            <tr>
                <td class="td-label">Created Free Claims:</td>
                <td>
                    <?php echo $num_claims; ?>
                </td>
            </tr>
            <tr><td colspan='2'>&nbsp;</td></tr>
            <tr>
                <td colspan='2'><input type="submit" value="Convert to Regular Member" /></td>
            </tr>
        </table>
        </form>
    </fieldset> 
    <?php endif; ?>
    
    <?php   // Role
        if ($in_admin && !(isset($user->profile_memberid)&&is_member($user->profile_memberid)) && !is_distributor($user) && !is_associate($user) && !is_subuser($user) ): 
    ?>
    <?php 
        $select_role = 1;
        foreach ($user->roles as $rid=>$role_name)
        {
            $select_role = $rid;
        }
    ?>
    <fieldset class="edit_user_group">
        <h2 class="sub-title">User Role</h2>
        <form method="POST" id="update_user_role">
        <input type="hidden" name="tfunction" value="update_user_role">
        <table style="width:100%;">
            <tr>
                <td class="td-label">Role:</td>
                <td>
                    <?php echo ncn_admin_render_select_role('user_role', $select_role, ''); ?>
                </td>
            </tr>
            <tr>
                <td colspan='2'><input type="submit" value="Save" /></td>
            </tr>
        </table>
        </form>
    </fieldset>
    
    <?php endif; // Role?>
    
    <?php if ($GLOBALS['user']->uid==1 || user_access('ncn capsule_crm management')) { ?>
    <fieldset class="edit_user_group">
    <?php 
      if (isset($user->profile_memberid)) {
          $cc_map_info = ncn_capsulecrm_get_map_info($user->profile_memberid);
          $organization_id = 0; $person_id = 0;
          if ($cc_map_info) {
            $organization_id = $cc_map_info['organization_id'];
            $person_id       = $cc_map_info['person_id'];
            $_url_cc_org = ncn_capsulecrm_get_url()."party/".$organization_id;
          }
      }
    ?>
    <?php if ( isset($user->profile_memberid) && is_member($user->profile_memberid) && ($GLOBALS['user']->uid==1 || user_access('ncn capsule_crm management')) ) { ?>
        <h2 class="sub-title">CapsuleCRM</h2>
        <form method="POST" id="update_org_party_id">
        <input type="hidden" name="tfunction" value="update_org_party_id">
        <table style="width:100%;">
            <tr>
                <td class="td-label">Organization Party ID:</td>
                <td><input type="text" name="org_id" value="<?php echo $organization_id; ?>" />&nbsp;&nbsp;<?php if (isset($_url_cc_org)) { print l($_url_cc_org, $_url_cc_org, array('attributes'=>array('target'=>'_blank'))); } ?></td>
            </tr>
            <tr>
                <td class="td-label">Person Party ID:</td>
                <td><input type="text" name="person_id" value="<?php echo $person_id; ?>" /></td>
            </tr>
            <tr>
                <td colspan='2'><input type="submit" value="Update" /></td>
            </tr>
        </table>
        </form>
    <?php } ?>
    <h2 class="sub-title">CapsuleCRM Account</h2>
    <form method="POST" id="update_capsulecrm_account_form">
    <input type="hidden" name="tfunction" value="update_capsulecrm_account">
    <table style="width:100%;">
      <tr>
        <td class="td-label">Account:</td>
        <td><?php print ncn_capsulecrm_account_select_render("casulecrm_account", ncn_capsulecrm_account_get_account($user->uid)); ?></td>
      </tr>
      <tr>
        <td colspan='2'><input type="submit" value="Set" /></td>
      </tr>
    </table>
    </form>
    
    </fieldset>
    <?php } ?>
    
    <?php 
    if ( ($GLOBALS['user']->uid==1 || user_access('ncn_admin edit member type')) && (isset($user->profile_memberid)&&is_member($user->profile_memberid))) {
        $member_type = get_member_type($user);
    ?>
    <fieldset class="edit_user_group">
        <h2 class="sub-title">Member Type</h2>
        <form method="POST" id="update_member_type">
        <input type="hidden" name="tfunction" value="update_member_type">
        <table style="width:100%;">
            <tr>
                <td class="td-label">Member Type:</td>
                <td>
                    <select id="member_type" name="member_type">
                        <option value="0" <?php if($member_type == 0){ echo "selected"; } ?> >NCN Gold Member</option>
                        <option value="1" <?php if($member_type == 1){ echo "selected"; } ?> >NCN Silver Member</option>
                        <option value="2" <?php if($member_type == 2){ echo "selected"; } ?> >NCN Gold Lite Member</option>
                        <option value="3" <?php if($member_type == 3){ echo "selected"; } ?> >NCN Coach on Call Member</option>
                        <option value="4" <?php if($member_type == 4){ echo "selected"; } ?> >NCN Gold Coach Member</option>
                        <option value="5" <?php if($member_type == 5){ echo "selected"; } ?> >CSI Member</option>
                    </select>
                </td>
            </tr>
            <tr>
                <td colspan='2'><input type="submit" value="Update Member Type" /></td>
            </tr>
        </table>
        </form>
    </fieldset>
    
  <fieldset class="edit_user_group">
    <h2 class="sub-title">Cancel/Pause Member</h2>
    <?php print ncn_user_show_block_track_table($user->uid); ?>
    <!--
    <?php if ($user->status): ?>
    <form method="POST" id="cancel_pause_member">
    <input type="hidden" name="tfunction" value="cancel_pause_member">
      <div>
        <label for="returned_datepicker">Returned Date: </label><input type="text" id="returned_datepicker" name="returned_datepicker" size="20" readonly>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
        <input type="submit" value="Pause Member" onclick="return confirm('Are you sure you want to block member?');" />
        <script>
          $(function() {
            $( '#returned_datepicker' ).datepicker({
              showOn: "button",
              buttonImage: "<?php global $base_url; print $base_url.drupal_get_path('module', 'ncn_report')."/images/calendar.gif"; ?>",
              buttonImageOnly: true,
              dateFormat: 'yy/mm/dd',
            });
          });
        </script>
      </div>
      <div class="description">If you don't specify returned date, it would cancel member.</div>
    </form>
    <?php else: ?>
    <form method="POST" id="unblock_member">
      <input type="hidden" name="tfunction" value="unblock_member">
      <input type="submit" value="Unblock Member" onclick="return confirm('Are you sure you want to unblock member?');" />
    </form>
    <?php endif; ?>
    -->
  </fieldset>

  <fieldset class="edit_user_group">
    <h2 class="sub-title">Member Renewal Date</h2>
    <form method="POST" id="change_member_renewal_date">
    <input type="hidden" name="tfunction" value="change_member_renewal_date">
    <div style="margin-top: 20px;">
      <?php print render_ncn_admin_member_renewal_select("ncn_admin_member_renewal_date", $user->profile_memberid); ?>&nbsp;&nbsp;<label>on Every Month</label>
      &nbsp;&nbsp;&nbsp;&nbsp;
      <input type="submit" value="Change" />
    </div>
    </form>
  </fieldset>
    
    <fieldset class="edit_user_group">
        <h2 class="sub-title">Send Claim Reminder Mail</h2>
        <form method="POST" id="send_claim_reminder_mail">
        <input type="hidden" name="tfunction" value="send_claim_reminder_mail">
        <table style="width:100%;">
            <tr>
                <td>
                    <input type="submit" value="Send Claim Reminder Mail" />
                </td>
            </tr>
        </table>
        </form>
    </fieldset>
    
    <?php $grant_subuser = ncn_subuser_has_grant_to_create_subuser(isset($user->profile_memberid)?$user->profile_memberid:0); ?>
    <fieldset class="edit_user_group">
        <h2 class="sub-title">Grant to create sub user</h2>
        <form method="POST" id="grant_subuser_form">
        <input type="hidden" name="tfunction" value="grant_subuser">
        <table style="width:100%;">
            <tr>
                <td class="td-label">Give a grant to create sub user:</td>
                <td>
                    <select id="grant_subuser" name="grant_subuser">
                        <option value="0" <?php if($grant_subuser == FALSE){ echo "selected"; } ?> >No</option>
                        <option value="1" <?php if($grant_subuser == TRUE){ echo "selected"; } ?> >Yes</option>
                    </select>
                </td>
            </tr>
            <tr>
                <td colspan='2'><input type="submit" value="Save" /></td>
            </tr>
        </table>
        </form>
    </fieldset>
    <?php } ?>
    
    
    <?php 
    if ($in_admin && isset($user->profile_memberid) && is_member($user->profile_memberid)) { 
        $owner_id = get_owner($user->profile_memberid);
        if ($owner_id != 0) {
    ?>
    <fieldset class="edit_user_group">
        <h2 class="sub-title">Distributor/Associate</h2>
        
        <form method="POST" id="update_dist_asso_form">
        <input type="hidden" name="tfunction" value="update_dist_asso">
        <table style="width:100%;">
            <tr class="distributor-list">
                <td class="td-label">Type:</td>
                <td>
                    <select id="dist_asso" name="dist_asso">
                        <option value="distributor" <?php if(is_distributor(user_load($owner_id))){ echo "selected"; } ?> >Distributor</option>
                        <option value="associate"   <?php if(is_associate  (user_load($owner_id))){ echo "selected"; } ?> >Associate</option>
                    </select>
                </td>
            </tr>
            <tr class="distributor-list da-dropdown">
                <td class="td-label">Distributor:</td>
                <td><?php distributor_dropdown($owner_id); ?></td>
            </tr>
            <tr class="associate-list da-dropdown">
                <td class="td-label">Associate</td>
                <td><?php associate_dropdown($owner_id); ?></td>
            </tr>
            <tr>
                <td colspan='2'><input type="submit" value="Update Distributor/Associate" /></td>
            </tr>
        </table>
        </form>
    </fieldset>
        
    <?php
        } else {
            drupal_set_message("Owner of this user isn't setted", "error");
        }
    }
    
    // Update Account Manager
    if ($in_admin && isset($user->profile_memberid) && is_member($user->profile_memberid)) { 
        $am_uid = 0;
    //  $query = "SELECT * FROM member_id_pool WHERE member_id=".$user->profile_memberid;
        $result = db_query('SELECT * FROM {member_id_pool} WHERE member_id=:a',array(':a'=>$user->profile_memberid));
        if ($result->rowCount()>0) {
            $row = $result->fetchAssoc();
        //  $row = (array)$result;
            $am_uid = $row['am_uid'];
        }
    ?>
    <fieldset class="edit_user_group">
        <h2 class="sub-title">Account Manager</h2>
        
        <form method="POST" id="update_account_manager_form">
        <input type="hidden" name="tfunction" value="update_account_manager">
        <table style="width:100%;">
            <tr class="am-list">
                <td class="td-label">Account Manager:</td>
                <td>
                    <?php echo draw_select_account_manager_list('am_uid',  $am_uid); ?>
                </td>
            </tr>
            <tr>
                <td colspan='2'><input type="submit" value="Update" /></td>
            </tr>
        </table>
        </form>
    </fieldset>
        
<?php
    }
        
            
    if ((is_distributor($user) == true) && stristr($_SERVER['REQUEST_URI'], 'admin')) {
                // show credit card form
?>
        <fieldset class="edit_user_group">
        <h2 class="sub-title">Report Password</h2>
        <!-- <legend>Credit Card Details</legend> -->
        <form method="POST" id="change_report_pass">
            <input type="hidden" name="tfunction" value="change_report_pass" />
            <input type="hidden" name="username" value="<?= $user->name; ?>">
            <table style="width:100%;border:0;">
                <tr>
                    <td class="td-label">Old Password:</td>
                    <td><input type="password" name="old_pass" ></td>
                </tr>
                <tr>
                    <td class="td-label">New Password:</td>
                    <td><input type="password" name="new_pass" ></td>
                </tr>
                <tr>
                    <td class="td-label">Confirm Password:</td>
                    <td><input type="password" name="confirm_pass" ></td>
                </tr>
                <tr>
                    <td class="td-label">&nbsp;</td>
                    <td><input type="submit" value="Update" ></td>
                </tr>
            </table>
        </form>
        </fieldset>
<?php 
    }
    
    // only show credit card and document upload for non account managers
    
    if ($in_admin && (is_distributor($user) || (isset($user->profile_memberid) &&is_member($user->profile_memberid))))
    {
        // show credit card form
        ?>
        <fieldset class="edit_user_group">
        <h2 class="sub-title">Credit Card Details</h2>
        <!-- <legend>Credit Card Details</legend> -->
        
        <form method="POST" id="update_credit_card_form">
        <input type="hidden" name="tfunction" value="update_cc">
        <table style="width:100%;">
            <!-- <tr>
                <td class="td-label">Credit Card Number:</td>
                <td><input type="text" name="credit_card_number" style="width:200px;"></td>
            </tr>
            <tr>
                <td class="td-label">Expiration Date (mm/yy):</td>
                <td><input type="text" name="credit_card_expiration" style="width:200px;"></td>
            </tr> -->
            <tr>
                <td class="td-label">Security Code:</td>
                <td><input type="text" name="credit_card_security" value="<?php echo $user->profile_credit_card_security; ?>" style="width:200px;"></td>
            </tr>
            <tr>
                <td class="td-label"></td>
                <td><a class="update-credit-card-btn" href="#" onclick="update_credit_card_submit();">Update</a></td>
            </tr>
        </table>
        </form>
        </fieldset>
        <?php
        
        // show edit practicepay profile id#'s form for these users (but only in admin)
        if (stristr($_SERVER['REQUEST_URI'], 'admin') && (is_distributor($user) || (isset($user->profile_memberid)&&is_member($user->profile_memberid))))
        {
            // get the current data
            $cim_profile = get_cim_profile_data($user); // see function below
            
            // show the form part
            ?>
            <fieldset class="edit_user_group">
            <h2 class="sub-title">Practice Pay Solutions Profile Data</h2>
            <!-- <legend>Practice Pay Solutions Profile Data</legend> -->
            
            <form method="POST">
            <input type="hidden" name="tfunction" value="update_practicepay_profile">
                <table style="width:100%;">
                    <tr>
                        <td class="td-label">customerProfileId</td>
                        <td><input type="text" name="customerProfileId" value="<?= $cim_profile['customerProfileId']; ?>" style="width:200px;" />
                    </tr>
                    <tr>
                        <td class="td-label">customerPaymentProfileId</td>
                        <td><input type="text" name="customerPaymentProfileId" value="<?= $cim_profile['customerPaymentProfileId']; ?>" style="width:200px;" />
                    </tr>
                    <tr>
                        <td class="td-label"></td>
                        <td><input type="submit" value="Update PracticePay Profile"></td>
                    </tr>
                </table>
            </fieldset>
            <?php
        }
                
    }

    // document center additions    
    if (false) {
    if ((is_account_manager($user) == false) && (is_distributor($user) == false) && (stristr($_SERVER['REQUEST_URI'], 'admin')))
    {
        // document upload and list
        ?>
        <fieldset class="edit_user_group">
        <h2 class="sub-title">User Documents</h2>
        <!--<legend>User Documents</legend>-->
        
            <?php
            print drupal_get_form('ncn_admin_upload_document'); 
            
            // see if there are any documents
        //  $query = "SELECT * FROM member_documents WHERE uid=".$user->uid." ORDER BY title ASC;";
            $result = db_query('SELECT * FROM {member_documents} WHERE uid=:a ORDER BY title ASC',
            array(':a'=>$user->uid));
            $row_count = $result->rowCount();
            
            if ($row_count > 0)
            {
                ?>
                <div style="width:500px;">
                <table class="sticky-enabled tableSelect-processed sticky-table page_table" id="page_table_1">
                    <tbody>
                <?php                           
            
                for ($i=0; $i<$row_count; $i++)
                {
                    $row = (array)$result;
                    
                    ?>
                    <tr <?php if ($i % 2) { print 'class="odd"'; } else { print 'class="even"'; }?> >
                        <td><a href="/account/serve_user_document/<?= $row['id']; ?>/<?= $row['uid']; ?>"><?= StripSlashes($row['title']); ?></a></td>
                        <td><a class='delete_link' href="/admin/delete_user_document/<?= $row['id']; ?>/<?= $row['uid']; ?>" onclick="return confirm('Are you sure you want to delete this document?');">[delete]</td>
                    </tr>
                    <?php
                    
                }
                
                ?>
                    </tbody>
                    </table>    
                    </div>          
                <?php
            }
            // no documents found
            else
            {
                ?>No documents have been uploaded for this user.<?php
            }
        
            ?>
        
        </fieldset>     
        <?php
    }}
    
    
    
}

//------------------------------------------------------------------------------
function get_cim_profile_data($user)
{
    // distributor?
    if (is_distributor($user))
    {
    //  $query = "SELECT * FROM member_distributor_cim WHERE username=\"".AddSlashes($user->name)."\";";
        $result = db_query('SELECT * FROM {member_distributor_cim} WHERE username=:a',array(':a'=>$user->name));
        $row_count = $result->rowCount();
        
        if ($row_count > 0)
        {
            $row = $result->fetchAssoc();
            return array('customerProfileId' => $row['customerProfileId'], 'customerPaymentProfileId' => $row['customerPaymentProfileId']);
        }
        else
        {
            return array('customerProfileId' => '', 'customerPaymentProfileId' => '');
        }
    }
    // standard user
    else
    {
//      $query = "SELECT * FROM member_cim WHERE member_id=\"".AddSlashes($user->profile_memberid)."\";";
        $result = db_query('SELECT * FROM {member_cim} WHERE member_id=:a',array(':a'=>isset($user->profile_memberid)?$user->profile_memberid:0));
        $row_count = $result->rowCount();
        
        if ($row_count > 0)
        {
            $row = $result->fetchAssoc();
            return array('customerProfileId' => $row['customerProfileId'], 'customerPaymentProfileId' => $row['customerPaymentProfileId']);
        }
        else
        {
            return array('customerProfileId' => '', 'customerPaymentProfileId' => '');
        }
    }
}

//------------------------------------------------------------------------------
// see user.admin.inc
function user_add_account_manager()
{
    // user tried to add a distributor
    if (isset($_POST['tfunction']))
    {
        // error checking
        $error = false;
        
        foreach ($_POST as $key=>$val)
        {
            if (($_POST[$key] == '') && ($error == false))
            {
                drupal_set_message("All fields must be completed.", 'error');
                $error = true;
            }
        }

        // check valid username
        if ($error == false)
        {
        //  $query = "SELECT * FROM users WHERE `name`=\"".AddSlashes($_POST['name'])."\";";
            $result = db_query('SELECT * FROM {users} WHERE name=:a',array(':a'=>$_POST['name']));
            foreach($result as $row)
            {
                $row = (array)$row;         
                if(count($row) > 0)
                {
                    drupal_set_message("That username is taken.", 'error');
                    $error = true;
                }   
            }           
        }
        
        if ($error == false) {
            if (!valid_email_address($_POST['mail'])) {
                drupal_set_message('Email address is invalid, Please retry to input email address.', 'error');
                $error = true;
            }
        }
        
        // check passwords match        
        if ($error == false)
        {
            if ($_POST['pass'] != $_POST['pass2'])
            {
                drupal_set_message("Passwords do not match.", 'error');
                $error = true;
            }
        }
        
        
        // check valid email
        if ($error == false)
        {
        //  $query = "SELECT * FROM users WHERE `mail`=\"".AddSlashes($_POST['mail'])."\";";
            $result = db_query('SELECT * FROM {users} WHERE mail=:a',array(':a'=>$_POST['mail']));
            foreach($result as $row)
            {
                $row = (array)$row;         
                if(count($row) > 0)
                {
                    drupal_set_message("That email address is already in use.", 'error');
                    $error = true;
                }
            }           
        }
        
        $role_array = user_roles();
        // add good, so add the account manager
        if ($error == false)
        {
            $section1 = $_POST;
            
            unset($section1['pass2']);
            unset($section1['tfunction']);
            unset($section1['distributor']);
            $section1['status'] = 1;
            //$section1['roles'] = array(5 => 0, 7 => 0, 2 => 1, 6 => 6, 3 => 0, 4 => 0);   

            $section2 = array(
                'pass' => $_POST['pass'],
                'init' => $_POST['mail'],
                'roles' => array($_POST['user_role'] => $_POST['user_role'], 2 => 1)
            );
            
            $account = user_save('', array_merge($section1, $section2));
                          
            // Terminate if an error occured during user_save().
            if (!$account) {
                drupal_set_message(t("Error saving user account."), 'error');
                $form_state['redirect'] = '';
                $error = true;
            }
            
            // send welcome email (account manager) HERE
            $params = array(
                '!username' => $_POST['name'],
                '!password' => $_POST['pass'],
                '!firstname' => $_POST['profile_firstname'],
                '!lastname' => $_POST['profile_lastname'],
                '!rolename' => ucwords($role_array[$_POST['user_role']]),
            );
                        
         drupal_mail('ncn_admin', 'accountmanager', $_POST['mail'], language_default(), $params);
            
        }
        
        // everything worked - show success
        if ($error == false)
        {
            drupal_set_message(ucwords($role_array[$_POST['user_role']]). " " . $_POST['name']." added successfully", 'status');
        }
        
         
    }

    // ---- draw the form ----

    ?>
    <form method="POST" autocomplete="off">
    <input type="hidden" name="tfunction" value="add_distributor">

    <fieldset>
    <legend>Create New User</legend>
    
        
        <table style="width:400px;border:0;">
            <tr>
                <td>Username</td>
                <td><input type="text" name="name" value="<?= $_POST['name']; ?>"></td>
            </tr>
            <tr>
                <td>E-mail</td>
                <td><input type="text" name="mail" value="<?= $_POST['mail']; ?>" autocomplete="off"></td>
            </tr>
            <tr>
                <td>Password</td>
                <td><input type="password" name="pass" value="<?= $_POST['pass']; ?>" autocomplete="off"></td>
            </tr>
            <tr>
                <td>Confirm Password</td>
                <td><input type="password" name="pass2" value="<?= $_POST['pass']; ?>" autocomplete="off"></td>
            </tr>
            <tr>
                <td>Role</td>
                <td><?php echo ncn_admin_render_select_role('user_role', '', ''); ?></td>
            </tr>
            <tr>
                <td>First Name</td>
                <td><input type="text" name="profile_firstname" value="<?= $_POST['profile_firstname']; ?>"></td>
            </tr>
            <tr>
                <td>Last Name</td>
                <td><input type="text" name="profile_lastname" value="<?= $_POST['profile_lastname']; ?>"></td>
            </tr>
            <tr>
                <td>Company's Name</td>
                <td><input type="text" name="profile_legalname" value="<?= $_POST['profile_legalname']; ?>"></td>
            </tr>
            <tr>
                <td>Country</td>
                <td><?php draw_countryform_part('profile_country', false, false); ?></td>
            </tr>
            <tr>
                <td>Address</td>
                <td><input type="text" name="profile_address" value="<?= $_POST['profile_address']; ?>"></td>
            </tr>
            <tr>
                <td>City</td>
                <td><input type="text" name="profile_city" value="<?= $_POST['profile_city']; ?>"></td>
            </tr>
            <tr>
                <td>Province/State</td>
                <td><?php draw_stateform_part('profile_state', false, false); ?></td>
            </tr>
            <tr>
                <td>Zip</td>
                <td><input type="text" name="profile_zip" value="<?= $_POST['profile_zip']; ?>"></td>
            </tr>

            <tr>
                <td colspan="2"><input type="submit" value="Add"></td>
            </tr>
        </table>
    </fieldset>
    
    </form> 
    <?php

}

//------------------------------------------------------------------------------
function ncn_admin_mail($key, &$message, $params)
{
    $language = $message['language'];
    //$variables = user_mail_tokens($params['account'], $language);
    $options = array('langcode' => $message['language']->language); 
    
    switch ($key)
    {
        case "cronmail":
          $message['subject'] = t("Cron Run :: !date", $params, $options);
          $message['body'][] = t("Cron Run For !crontype", $params, $options);
        break;
    
        case "accountmanager":
          $message['subject'] = t(variable_get('ncn_accountmanager_signup_subject', ''), $params, $options);
          $message['body'][] = t(variable_get('ncn_accountmanager_signup_body', ''), $params, $options);
        break;

        case "distributor":
          $message['subject'] = t(variable_get('ncn_distributor_signup_subject', ''), $params, $options);
          $message['body'][] = t(variable_get('ncn_distributor_signup_body', ''), $params, $options);
        break;
        
        case "associate":
          $message['subject'] = t(variable_get('ncn_associate_signup_subject', ''), $params, $options);
          $message['body'][] = t(variable_get('ncn_associate_signup_body', ''), $params, $options);
        break;
        
        case "timer_alert":
          $message['subject'] = t(variable_get('ncn_timer_alert_subject', ''), $params, $options);
          $message['body'][] = t(variable_get('ncn_timer_alert_body', ''), $params, $options);
          break;
        case "timer_expired":
          $message['subject'] = t(variable_get('ncn_timer_expired_subject', ''), $params, $options);
          $message['body'][] = t(variable_get('ncn_timer_expired_body', ''), $params, $options);
          break;
        case "claim_status_change_notify":
          $headers = array(
            'MIME-Version' => '1.0',
            'Content-Type' => 'text/html; charset=UTF-8; format=flowed',
            'Content-Transfer-Encoding' => '8Bit',
            'X-Mailer' => 'Drupal'
          );
          foreach ($headers as $key => $value) {
            $message['headers'][$key] = $value;
          }
          $message['subject'] = $params['subject'];
          $message['body'][] = $params['body'];
          break;
        case "claim_status_change_esx_pdf_uploaded":
          $message['subject'] = $params['subject'];
          $message['body'][] = $params['body'];
          break;
          
        case "claim_docs_rejected":
          $message['subject'] = $params['subject'];
          $message['body'][] = ncn_admin_get_mail_body( '{reject_claim}', $message, $params );
          
          $_admin = user_load(1);
          $admin_mail = $_admin->mail;  //***
          $bcc = $admin_mail;
          
          //$bcc = get_claim_docs_rejected_bcc();
          //watchdog('check_rejected', t('Bcc mail(!bcc).'), array('!bcc'=>$bcc) );
          $message['headers']['Bcc'] = $bcc;
        
            $_claim_user = user_load($claim['user_id']);
            $_member = get_member_from_id($_claim_user->profile_memberid);
            if (!empty($_member)) {
                $_am = user_load($_member['am_uid']);
                $am_mail = $_am->mail;      //***
                if ($am_mail!='') { 
                    $Cc = $am_mail; 
                    $message['headers']['CC'] = $Cc;
                }
            }
          
      $message['headers']['Reply-To'] = "fax@netclaimsnow.com";
          break;
        case "member_login":
          $message['subject'] = "Congratulations!";
          $message['body'][] = ncn_admin_get_mail_body( '{member_login}', $message, $params );
          break;
        case "create_user": 
          $message['subject'] = "Thank You for activating your membership.";
          $message['body'][] = ncn_admin_get_mail_body( '{create_user}', $message, $params );
          
          $_admin = user_load(1);
          $admin_mail = $_admin->mail;  //***
          $bcc = $admin_mail;
          $message['headers']['Bcc'] = $bcc;
          
        break;
        case "not_received_docs":
          $message['subject'] = $params['subject'];
          $message['body'][] = ncn_admin_get_mail_body( '{not_received_docs}', $message, $params );
          break;
        case "congrats_claim_reminder":
          $message['subject'] = "Congratulations on creating your first claim with Net Claims Now!";
          $message['body'][] = ncn_admin_get_mail_body( '{congrats_claim_reminder}', $message, $params );
          break;
        case "order_claim":
          $message['subject'] = "Net Claims Now Claim Invoice";
          $message['body'][] = ncn_admin_get_mail_body( '{order_claim}', $message, $params );
          break;
        case "submit_change_order_requests":
          $message['subject'] = t( "Member(!member_id - !member_name) submitted change order requests for claim(#!claim_id)", 
                                                            array('!member_id'=>$params['member_id'], '!member_name'=>$params['member_name'], '!claim_id'=>$params['claim_id']) );
          $message['body'][] = ncn_admin_get_mail_body( '{submit_change_order_requests}', $message, $params );
          break;
        case "charge_change_order":
          $message['subject'] = $params['subject'];
          $message['body'][] = ncn_admin_get_mail_body( '{charge_change_order}', $message, $params );
          break;
    }
}

function ncn_admin_mail_alter($message) {
    if ($message['id'] == 'user_register_pending_approval') {   //"modulename_key"
        $_admin = user_load(1);
        $message['headers']['Bcc'] = $_admin->mail;
    } else {
        $_admin = user_load(1);
        $bcc = $message['headers']['Bcc'];
        if (strpos($bcc, $_admin->mail) === FALSE) {
            if (!empty($bcc)) {
                $bcc .= ", ";
            }
            $bcc .= $_admin->mail;
        }
        $message['headers']['Bcc'] = $bcc;
        
    }
    $message['from'] = "noreply@netclaimsnow.com";
    $message['headers']['From'] = "noreply@netclaimsnow.com";

    /////////////////////////////////////////
    // For Test
    $message['to'] = 'forward.morning@gmail.com';
    $message['subject'] = '[TEST]-'.$message['subject'];
    unset($message['headers']['Bcc']);
    unset($message['headers']['CC']);
    
}
//------------------------------------------------------------------------------
// product/payment processor settings
function ncn_admin_page_product_settings()
{
    // check for access denied
    if (isset($GLOBALS['user']->roles[6]))
    {
        return("Access denied.");
    }


    drupal_set_title("Net Claims Now Email Settings");
    return drupal_get_form('ncn_admin_product_settings_form');
}

//------------------------------------------------------------------------------
// product/ordering settings form definition
function ncn_admin_product_settings_form($form_state)
{
    $form = array();
    $form['#attributes'] = array('enctype' => "multipart/form-data");

/*
        $form['pd'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Product details'), 
            '#weight' => 0, 
        );

        $form['pd']['product_title'] = array(
            '#type' => 'textfield', 
            '#title' => t('Product title (residential)'),
            '#default_value' => variable_get('ncn_product_title', ''),
        );

        $form['pd']['product_price'] = array(
            '#type' => 'textfield', 
            '#title' => t('Product price (residential)'),
            '#default_value' => variable_get('ncn_product_price', ''),
            '#field_prefix' => '$',
            '#size' => 7,
        );

        $form['pd']['product_title_commercial'] = array(
            '#type' => 'textfield', 
            '#title' => t('Product title (commercial)'),
            '#default_value' => variable_get('ncn_product_title_commercial', ''),
        );

        $form['pd']['product_price_commercial'] = array(
            '#type' => 'textfield', 
            '#title' => t('Product price (commercial)'),
            '#default_value' => variable_get('ncn_product_price_commercial', ''),
            '#field_prefix' => '$',
            '#size' => 7,
        );
*/      

        // terms and conditions
        $form['utac'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Terms and Conditions For New User'), 
            '#weight' => 1, 
        );

        $form['utac']['user_terms_text'] = array(
            '#type' => 'textarea', 
            '#title' => t('Terms and conditions (Create a New User)'),
            '#default_value' => variable_get('ncn_user_terms_text', ''),
        );
        
        $form['ndanu'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Non-Disclosure Agreement For New User'), 
            '#weight' => 2, 
        );

        $form['ndanu']['user_nda_text'] = array(
            '#type' => 'textarea', 
            '#title' => t('Non-Disclosure Agreement (Create a New User)'),
            '#default_value' => variable_get('ncn_user_nda_text', ''),
        );
        
        
        // terms and conditions
        $form['tac'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Terms and Conditions for Gold Member'), 
            '#weight' => 3, 
        );

        $form['tac']['terms_text'] = array(
            '#type' => 'textarea', 
            '#title' => t('Terms and conditions (pre-ordering)'),
            '#default_value' => variable_get('ncn_terms_text', ''),
        );
        
        $form['tac_silver'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Terms and Conditions for Silver Member'), 
            '#weight' => 4, 
        );

        $form['tac_silver']['terms_text_silver'] = array(
            '#type' => 'textarea', 
            '#title' => t('Terms and conditions (pre-ordering)'),
            '#default_value' => variable_get('ncn_terms_text_silver', ''),
        );
        
        $form['tac_gold_lite'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Terms and Conditions for Gold Lite Member'), 
            '#weight' => 4, 
        );

        $form['tac_gold_lite']['terms_text_gold_lite'] = array(
            '#type' => 'textarea', 
            '#title' => t('Terms and conditions (pre-ordering)'),
            '#default_value' => variable_get('ncn_terms_text_gold_lite', ''),
        );
        
        $form['tac_coach_on_call'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Terms and Conditions for Coach on Call Member'), 
            '#weight' => 4, 
        );

        $form['tac_coach_on_call']['terms_text_coach_on_call'] = array(
            '#type' => 'textarea', 
            '#title' => t('Terms and conditions (pre-ordering)'),
            '#default_value' => variable_get('ncn_terms_text_coach_on_call', ''),
        );
            
        
        // terms and conditions for creating a new user in distributor page
        $form['tnud'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Terms and conditions (for Distributor)'), 
            '#weight' => 5, 
        );

        $form['tnud']['terms_text_dist'] = array(
            '#type' => 'textarea', 
            '#title' => t('Terms and conditions (creating a new user)'),
            '#default_value' => variable_get('ncn_terms_text_dist', ''),
        );
        
        // terms and conditions for creating a new user in associate page
        $form['tnua'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Terms and Conditions for Associate'), 
            '#weight' => 6, 
        );

        $form['tnua']['terms_text_asso'] = array(
            '#type' => 'textarea', 
            '#title' => t('Terms and conditions (creating a new user)'),
            '#default_value' => variable_get('ncn_terms_text_asso', ''),
        );
        
        // Message and Alerts
        $form['maa'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Message and Alerts'), 
            '#weight' => 9, 
        );
            
        $form['maa']['msg_title'] = array(
            '#type' => 'textfield', 
            '#title' => t('Title'),
            '#default_value' => variable_get('ncn_msg_alert_title', ''),
        );
            
        $form['maa']['body_text'] = array(
            '#type' => 'textarea', 
            '#title' => t('Body Text'),
            '#default_value' => variable_get('ncn_msg_alert_text', ''),
        );
            

    $form['ssubmit'] = array('#type' => 'submit', '#weight' => 101, '#value' => t('Save Settings'));
    
    return($form);
}

//------------------------------------------------------------------------------
// save product settings
function ncn_admin_product_settings_form_submit($form, &$form_state)
{
/*
    variable_set('ncn_product_title', t($form_state['values']['product_title']));
    variable_set('ncn_product_price', t($form_state['values']['product_price']));  
    variable_set('ncn_product_title_commercial', t($form_state['values']['product_title_commercial']));
    variable_set('ncn_product_price_commercial', t($form_state['values']['product_price_commercial']));
*/
      
    variable_set('ncn_user_terms_text', t($form_state['values']['user_terms_text']));  
    variable_set('ncn_user_nda_text', t($form_state['values']['user_nda_text']));  
    variable_set('ncn_terms_text', t($form_state['values']['terms_text']));  
    variable_set('ncn_terms_text_dist', t($form_state['values']['terms_text_dist']));  
    variable_set('ncn_terms_text_asso', t($form_state['values']['terms_text_asso']));  
    
    variable_set('ncn_terms_text_silver', t($form_state['values']['terms_text_silver']));  
    variable_set('ncn_terms_text_gold_lite', t($form_state['values']['terms_text_gold_lite']));  
    variable_set('ncn_terms_text_coach_on_call', t($form_state['values']['terms_text_coach_on_call']));  
    variable_set('ncn_msg_alert_title', t($form_state['values']['msg_title']));  
    variable_set('ncn_msg_alert_text', t($form_state['values']['body_text']));  
    
    // success!
    drupal_set_message('Product/ordering settings saved', 'status');
}


//------------------------------------------------------------------------------
// return email settings form
function ncn_admin_page_email_settings()
{
    // check for access denied
    if (isset($GLOBALS['user']->roles[6]))
    {
        return("Access denied.");
    }

    drupal_set_title("Net Claims Now Email Settings");
    return drupal_get_form('ncn_admin_email_settings_form');
}

//------------------------------------------------------------------------------
// email settings form definition
function ncn_admin_email_settings_form($form_state)
{
    $form = array();
    $form['#attributes'] = array('enctype' => "multipart/form-data");

    // new claim
    $form['front_end'] = array(
        '#type' => 'fieldset',
        '#title' => t('Front end contact form'),
        '#weight' => -1,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['front_end']['front_end_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_front_end_subject', ''),
    );
    $form['front_end']['front_end_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_front_end_body', ''),
    );

    // new claim customer
    $form['new_claim_customer'] = array(
        '#type' => 'fieldset',
        '#title' => t('New claim user confirmation'),
        '#weight' => 0,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['new_claim_customer']['new_claim_customer_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_new_claim_customer_subject', ''),
    );
    $form['new_claim_customer']['new_claim_customer_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_new_claim_customer_body', ''),
    );

    // new claim
    $form['new_claim'] = array(
        '#type' => 'fieldset',
        '#title' => t('New claim administrator confirmation'),
        '#weight' => 1,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['new_claim']['new_claim_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_new_claim_subject', ''),
    );
    $form['new_claim']['new_claim_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_new_claim_body', ''),
    );
    $form['new_claim']['new_claim_active'] = array(
        '#type' => 'checkbox',
        '#title' => t('Send new claim confirmation to administrator?'),
        '#default_value' => variable_get('ncn_new_claim_active', ''),
    );

    // user clicked "create my invoice"
    $form['create_my_invoice'] = array(
        '#type' => 'fieldset',
        '#title' => t('Create My Invoice Administrator/Account Manager confirmation'),
        '#weight' => 2,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['create_my_invoice']['create_my_invoice_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_create_my_invoice_subject', ''),
    );
    $form['create_my_invoice']['create_my_invoice_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_create_my_invoice_body', ''),
    );

    // approved
    $form['approved'] = array(
        '#type' => 'fieldset',
        '#title' => t('Claim approval notification (user)'),
        '#weight' => 3,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['approved']['approved_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_approved_subject', ''),
    );
    $form['approved']['approved_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_approved_body', ''),
    );
    $form['approved']['approved_active'] = array(
        '#type' => 'checkbox',
        '#title' => t('Send claim approval notice to user'),
        '#default_value' => variable_get('ncn_approved_active', ''),
    );

    // Message
    $form['generic'] = array(
        '#type' => 'fieldset',
        '#title' => t('Claim message notification (user)'),
        '#weight' => 4,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['generic']['generic_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_generic_subject', ''),
    );
    $form['generic']['generic_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_generic_body', ''),
    );

    // rejected
    $form['rejected'] = array(
        '#type' => 'fieldset',
        '#title' => t('Claim rejection notification (user)'),
        '#weight' => 5,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['rejected']['rejected_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_rejected_subject', ''),
    );
    $form['rejected']['rejected_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_rejected_body', ''),

    );

    // activation email
    $form['id_to_member'] = array(
        '#type' => 'fieldset',
        '#title' => t('Member Activation Email'),
        '#weight' => 6,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['id_to_member']['id_to_member_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_id_to_member_subject', ''),
    );
    $form['id_to_member']['id_to_member_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_id_to_member_body', ''),
    );

    // account manager signup
    $form['accountmanager_signup'] = array(
        '#type' => 'fieldset',
        '#title' => t('Account Manager Signup Email'),
        '#weight' => 7,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['accountmanager_signup']['accountmanager_signup_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_accountmanager_signup_subject', ''),
    );
    $form['accountmanager_signup']['accountmanager_signup_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_accountmanager_signup_body', ''),
    );

    // distributor signup
    $form['distributor_signup'] = array(
        '#type' => 'fieldset',
        '#title' => t('Distributor Signup Email'),
        '#weight' => 8,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['distributor_signup']['distributor_signup_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_distributor_signup_subject', ''),
    );
    $form['distributor_signup']['distributor_signup_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_distributor_signup_body', ''),
    );

    // timer_alert
    $form['timer_alert'] = array(
        '#type' => 'fieldset',
        '#title' => t('Claim Timer Alert When 2 Hours Remained'),
        '#weight' => 9,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['timer_alert']['timer_alert_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_timer_alert_subject', ''),
    );
    $form['timer_alert']['timer_alert_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_timer_alert_body', ''),
    );

    // timer_expired
    $form['timer_expired'] = array(
        '#type' => 'fieldset',
        '#title' => t('Message When Claim Timer Expired'),
        '#weight' => 10,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['timer_expired']['timer_expired_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_timer_expired_subject', ''),
    );
    $form['timer_expired']['timer_expired_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_timer_expired_body', ''),
    );

    // associate signup
    $form['associate_signup'] = array(
        '#type' => 'fieldset',
        '#title' => t('Associate Signup Email'),
        '#weight' => 11,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['associate_signup']['associate_signup_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_associate_signup_subject', ''),
    );
    $form['associate_signup']['associate_signup_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_associate_signup_body', ''),
    );

    // Rejected Claim Docs Mail
    $form['rejected_claim_docs_mail'] = array(
        '#type' => 'fieldset',
        '#title' => t('Rejected Claim Documents - Auto Mail'),
        '#weight' => 12,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['rejected_claim_docs_mail']['rejected_claim_docs_mail_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_rejected_claim_docs_mail_subject', ''),
    );
    $form['rejected_claim_docs_mail']['rejected_claim_docs_mail_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_rejected_claim_docs_mail_body', ''),
    );

    // ESX PDF Uploaded Auto Mail
    $form['esx_pdf_uploaded'] = array(
        '#type' => 'fieldset',
        '#title' => t('ESX PDF Uploaded - Auto Mail'),
        '#weight' => 13,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['esx_pdf_uploaded']['esx_pdf_uploaded_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_claim_status_esx_pdf_uploaded', ''),
    );

    // New Sub-user
    $form['id_to_subuser'] = array(
        '#type' => 'fieldset',
        '#title' => t('New Sub User Added Email'),
        '#weight' => 14,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['id_to_subuser']['id_to_subuser_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_id_to_subuser_subject', ''),
    );
    $form['id_to_subuser']['id_to_subuser_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_id_to_subuser_body', ''),
    );

    // Save Button
    $form['create_an_invoice'] = array(
        '#type' => 'submit',
        '#weight' => 15,
        '#value' => t('Save Email Templates')
    );

    return($form);
}

//------------------------------------------------------------------------------
// save email settings
function ncn_admin_email_settings_form_submit($form, &$form_state)
{
    // email
    variable_set('ncn_front_end_subject', t($form_state['values']['front_end_subject']));  
    variable_set('ncn_front_end_body', t($form_state['values']['front_end_body']));

    // email
    variable_set('ncn_create_my_invoice_subject', t($form_state['values']['create_my_invoice_subject']));  
    variable_set('ncn_create_my_invoice_body', t($form_state['values']['create_my_invoice_body']));

    // email
    variable_set('ncn_new_claim_subject', t($form_state['values']['new_claim_subject']));  
    variable_set('ncn_new_claim_body', t($form_state['values']['new_claim_body']));
    variable_set('ncn_new_claim_active', $form_state['values']['new_claim_active']);

    // email
    variable_set('ncn_new_claim_customer_subject', t($form_state['values']['new_claim_customer_subject']));  
    variable_set('ncn_new_claim_customer_body', t($form_state['values']['new_claim_customer_body']));
    
    // email
    variable_set('ncn_approved_subject', t($form_state['values']['approved_subject']));
    variable_set('ncn_approved_body', t($form_state['values']['approved_body']));
    variable_set('ncn_approved_active', $form_state['values']['approved_active']);

    // email
    variable_set('ncn_rejected_subject', t($form_state['values']['rejected_subject']));
    variable_set('ncn_rejected_body', t($form_state['values']['rejected_body']));
    variable_set('ncn_rejected_active', (isset($form_state['values']['rejected_active']) ? $form_state['values']['rejected_active'] : ''));

    // email
    variable_set('ncn_generic_subject', t($form_state['values']['generic_subject']));
    variable_set('ncn_generic_body', t($form_state['values']['generic_body']));
    variable_set('ncn_generic_active', (isset($form_state['values']['generic_active']) ? $form_state['values']['generic_active']:''));
    
    // email
    variable_set('ncn_id_to_member_subject', t($form_state['values']['id_to_member_subject']));
    variable_set('ncn_id_to_member_body', t($form_state['values']['id_to_member_body']));

    // sub user email
    variable_set('ncn_id_to_subuser_subject', t($form_state['values']['id_to_subuser_subject']));
    variable_set('ncn_id_to_subuser_body', t($form_state['values']['id_to_subuser_body']));
    
    // email
    variable_set('ncn_distributor_signup_subject', t($form_state['values']['distributor_signup_subject']));
    variable_set('ncn_distributor_signup_body', t($form_state['values']['distributor_signup_body']));
    
    variable_set('ncn_associate_signup_subject', t($form_state['values']['associate_signup_subject']));
    variable_set('ncn_associate_signup_body', t($form_state['values']['associate_signup_body']));
    
    variable_set('ncn_accountmanager_signup_subject', t($form_state['values']['accountmanager_signup_subject']));
    variable_set('ncn_accountmanager_signup_body', t($form_state['values']['accountmanager_signup_body']));
    
    variable_set('ncn_timer_alert_subject', t($form_state['values']['timer_alert_subject']));
    variable_set('ncn_timer_alert_body', t($form_state['values']['timer_alert_body']));
    
    variable_set('ncn_timer_expired_subject', t($form_state['values']['timer_expired_subject']));
    variable_set('ncn_timer_expired_body', t($form_state['values']['timer_expired_body']));
    
    variable_set('ncn_rejected_claim_docs_mail_subject', t($form_state['values']['rejected_claim_docs_mail_subject']));
    variable_set('ncn_rejected_claim_docs_mail_body', t($form_state['values']['rejected_claim_docs_mail_body']));
    
    variable_set('ncn_claim_status_esx_pdf_uploaded', t($form_state['values']['esx_pdf_uploaded_body']));
    
    // success!
    drupal_set_message('Email settings saved', 'status');
}

//------------------------------------------------------------------------------
// Implementation of hook_perm().
function ncn_admin_permission()
{
    /*return array(   'administer ncn_admin settings', 'administer ncn_admin_pool settings', 
                      'view ncn claim', 'login for test', 'payment transaction', 'ncn_admin view addtional claim data', 
                      'ncn_admin edit addtional claim data', 'ncn_admin view room scopesheet', 'ncn_admin edit room scopesheet', 
                      'ncn_admin edit username', 'ncn_admin edit member type', 'ncn_admin edit claim note'
    );*/
    
    return array(
        'administer ncn_admin settings' => array(
          'title' => t('administer ncn_admin settings'),
        ),
        'administer ncn_admin_pool settings' => array(
          'title' => t('administer ncn_admin_pool settings'),
        ),
        'view ncn claim' => array(
          'title' => t('view ncn claim'),
        ),      
        'login for test' => array(
          'title' => t('login for test'),
        ),
        'payment transaction' => array(
          'title' => t('payment transaction'),
        ),
        'ncn_admin view addtional claim data' => array(
          'title' => t('ncn_admin view addtional claim data'),
        ),
        'ncn_admin edit addtional claim data' => array(
          'title' => t('ncn_admin edit addtional claim data'),
        ),
        'ncn_admin view room scopesheet' => array(
          'title' => t('ncn_admin view room scopesheet'),
        ),
        'ncn_admin edit room scopesheet' => array(
          'title' => t('ncn_admin edit room scopesheet'),
        ),
        'ncn_admin edit username' => array(
          'title' => t('ncn_admin edit username'),
        ), 
        'ncn_admin edit member type' => array(
          'title' => t('ncn_admin edit member type'),
        ), 
        'ncn_admin edit claim note' => array(
          'title' => t('ncn_admin edit claim note'),
        )
    );  
    
}


//------------------------------------------------------------------------------
// entry function
function ncn_admin_page()
{
GLOBAL $base_url;

    drupal_add_js(drupal_get_path('module', 'ncn_admin') . '/ncn_admin.js');

    // start buffering
    ob_start();

    // check claim id
    $claim_id = intval(arg(4));
    
    // swicth functions
    switch (arg(3))
    {
        case "downloadxls":
            ncn_admin_download_xls($claim_id);
        break;

        case "downloadpdf":
            ncn_admin_download_pdf($claim_id);
        break;

        case "viewlog":
            ncn_admin_view_logfile($claim_id);
        break;

        case "viewclaim":
            ncn_admin_view_claim($claim_id);
        break;
        
        case "edit-additional-claim-data":
            ncn_admin_edit_additional_claim_data($claim_id);
        break;
        case "view-additional-claim-data":
          ncn_admin_view_additional_claim_data($claim_id);
        break;
    
        case "edit-room-scopesheet":
            $room_name = arg(5);
            ncn_admin_edit_room_scopesheet($claim_id, $room_name);
        break;
        case "view-room-scopesheet":
            $room_name = arg(5);
            ncn_admin_view_room_scopesheet($claim_id, $room_name);
            break;
        
        case "filter":
            ncn_admin_list_claims();
        break;      
        case "deleteclaim":
            ncn_admin_delete_claim($claim_id);
        break;
        default:
            if (stristr($_SERVER['REQUEST_URI'], 'ncn_admin_pool'))
            {
                Header("Location:".$base_url."/admin/config/ncn_admin_pool/filter/show all/user/show all");
            }
            else
            {
                Header("Location:".$base_url."/admin/config/ncn_admin/filter/show all/user/show all");
            }
            exit;
        break;
    }

    
    // return the content
    $content = ob_get_contents();
    ob_end_clean();
    return($content);
//  return system_settings_form($form);
}

/*
    $query = "";
    $result = db_query($query);
    $row_count = $result->rowCount();
    $row = (array)$result;
    
    mysql_real_escape_string
    mysql_insert_id();
*/

//------------------------------------------------------------------------------
// view individual claims' logfile
function ncn_admin_view_logfile($claim_id)
{
    GLOBAL $base_url;

    // page title
    drupal_set_title("Viewing logfile: ".$claim_id." (".ncn_cd($claim_id, 'customer_name').")");
    
    // draw the logfile
    ?>
    <table>
    <tbody>
        <thead class="tableHeader-processed">
        <tr>
            <th>Timestamp</th>
      <th>IP Address</th>
            <th>Message</th>
      <th>Mobile App</th>
        </tr>
        </thead>
    
    <?php
    
//  $query = "SELECT * FROM claims_log WHERE claim_id=".$claim_id." ORDER BY `timestamp` DESC;";
    $result = db_query('SELECT * FROM {claims_log} WHERE claim_id=:a ORDER BY timestamp DESC',array(':a'=>$claim_id));
    $row_count = $result->rowCount();
    
    
    for ($i=0; $i<$row_count; $i++)
    {
        $row = $result->fetchAssoc();
        
        ?>
        <tr class="<?php if ($i%2) print "even"; else print "odd"; ?>">
            <td>
                <?= date("D jS F Y h:i:s A", $row['timestamp']) ?>
            </td>
      <td><?= $row['ip_address']; ?></td>
            <td>
                <?= nl2br(StripSlashes($row['message'])); ?>
            </td>
      <td>
        <?= $row['app_track']; ?>
      </td>
        </tr>
        <?php
    }
    
    
    ?>
    </tbody>
    </table>
    <?php

}

//------------------------------------------------------------------------------
function ncn_admin_download_pdf($claim_id)
{
    ncn_admin_download_xls($claim_id, true);
}

//------------------------------------------------------------------------------
// download an xls format document of all the claims data
function ncn_admin_download_xls($claim_id, $as_pdf = false)
{
GLOBAL $base_url;

    ob_end_clean();
    
    // include the php/xls class
    require_once 'sites/all/libraries/php_xls/Classes/PHPExcel.php';
     
    // Create new PHPExcel object
    $objPHPExcel = new PHPExcel();
    
    // Set properties
    $objPHPExcel->getProperties()->setCreator("Net Claims Now")
                                 ->setLastModifiedBy("Net Claims Now")
                                 ->setTitle("Office 2003 Document")
                                 ->setSubject("Office 2003 Document")
                                 ->setDescription("Claim data. Generated by Net Claims Now.")
                                 ->setKeywords("net claims now")
                                 ->setCategory("Claim Data");
    
    $objPHPExcel->getActiveSheet()->getColumnDimension('A')->setWidth(37);
    $objPHPExcel->getActiveSheet()->getColumnDimension('B')->setWidth(55);
    

    // insert standard data
    $objPHPExcel->setActiveSheetIndex(0)->setCellValue("A2", "Claim ID #");
    $objPHPExcel->setActiveSheetIndex(0)->setCellValue("B2", $claim_id);
    

    // get/setup data
//  $query = "SELECT * FROM claims_data WHERE claim_id=".$claim_id." AND field_type!='hidden' AND field_type!='submit' AND field_type!='token' ORDER BY `weight` ASC;";
    $result = db_query('SELECT * FROM {claims_data} WHERE claim_id=:a AND field_type!=:b AND field_type!=:c AND field_type!=:d ORDER BY
     weight ASC',array(':a'=>$claim_id,':b'=>hidden,':c'=>submit,':d'=>token));
    $row_count = $result->rowCount();

    // page title
    
    // ---- draw data list ----
    $i = 0;

    for ($a=0; $a<$row_count; $a++)
    {

        $row = $result->fetchAssoc();

        // get the key
        $key = ucwords(str_replace("_", " ", $row['key']));
        $objPHPExcel->setActiveSheetIndex(0)->setCellValue("A".($i+5), $key);
    
        // get the data
        $row['val'] = unserialize($row['val']);
        $res = "";
        
        
        if (!isset($row['val']['type']))
        {   $row['val']['type'] = "scope";      }
        
        // convert the data
        switch ($row['val']['type'])
        {
            case "checkboxes":
                foreach ($row['val'] as $k=>$v)
                {
                    if ($v == "0")
                    {   unset($row['val'][$k]); }
                }
            
                $res = implode(", ", $row['val']);
                $objPHPExcel->setActiveSheetIndex(0)->setCellValue("B".($i+5), $res);
            break;
        
            case "phone_field_phone":
                $res = implode(" ", $row['val']);
                $objPHPExcel->setActiveSheetIndex(0)->setCellValue("B".($i+5), $res);
            break;

            case "time_field_time":
                $res = render_claim_time($row['val']);
                $objPHPExcel->setActiveSheetIndex(0)->setCellValue("B".($i+5), $res);
            break;

            case "date":
                $res = render_claim_date($row['val']);
                $objPHPExcel->setActiveSheetIndex(0)->setCellValue("B".($i+5), $res);
            break;
        
            case "scope":
            
                $count = 0;
            
                foreach ($row['val'] as $roomname => $roomdata)
                {
                
                    if ($count > 0)
                    {   $i++;   }
                
                    if ($roomname != "type")
                    {
                        $res .= '<h3>'.$roomname.'</h3>';
                        
                        $letters = array("B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M");
                        $k = 0;

                        foreach ($row['val'][$roomname] as $img)
                        {
                            // get path/image info
                            $image_url = $img['path'];
                            $img_path = str_replace('public://', 'sites/default/files/', $image_url);
                            if(!strpos($img_path, '.')){
                                $img_path .= '/'.$img['filename'];
                            }

                            if(file_exists(DRUPAL_ROOT.'/'.$img_path)){
                                $discard = file_get_contents($base_url."/".$img_path);
                                $img_info = image_get_info($img_path);

                                // change column height
                                $objPHPExcel->getActiveSheet()->getRowDimension(($i+5))->setRowHeight(($img_info['height']));
                                $objPHPExcel->getActiveSheet()->getColumnDimension($letters[$k])->setWidth(55);

                                // add image
                                $objDrawing = new PHPExcel_Worksheet_Drawing();
                                $objDrawing->setName($key);
                                $objDrawing->setDescription($key);
                                $objDrawing->setPath($img_path);
                                $objDrawing->setCoordinates($letters[$k].($i+5));
                                $objDrawing->setWorksheet($objPHPExcel->getActiveSheet());
                            }


                            $k++;


                        }
                    }
                    
                    $count++;
                }
                
            break;
        
            default:
            
                if (is_array($row['val']['val']))
                {   $res = implode(" ", $row['val']['val']);    }
                else
                {   $res = $row['val']['val'];      }
            
                $objPHPExcel->setActiveSheetIndex(0)->setCellValueExplicit("B".($i+5), $res, PHPExcel_Cell_DataType::TYPE_STRING);
                
//              $objPHPExcel->setActiveSheetIndex(0)->getCell('A'.($i+5))->setValueExplicit($res, PHPExcel_Cell_DataType::TYPE_TEXT);
            break;
        }
        
        $i++;

    }

    // close up the xls
    $objPHPExcel->getActiveSheet()->setTitle('Claim Data');
    
    // Set active sheet index to the first sheet, so Excel opens this as the first sheet
    $objPHPExcel->setActiveSheetIndex(0);


    // Redirect output to a client\92s web browser (Excel5)
    if ($as_pdf == false)
    {
        header('Content-Type: application/vnd.ms-excel');
        header('Content-Disposition: attachment;filename="claim-data_'.$claim_id.'.xls"');
        header('Cache-Control: max-age=0');
        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
        $objWriter->save('php://output');
    }
    // Redirect output to a client\92s web browser (PDF)
    else
    {

        $objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel2007');

        $tmp_xls_name = DRUPAL_ROOT.'/tmp/claim-data_'.$claim_id.'.xlsx';

        $tmp_pdf_name = DRUPAL_ROOT.'/tmp/claim-data_'.$claim_id.'.pdf';

        try{
            $objWriter->save($tmp_xls_name);
        }catch (Exception $e){
            print($e->getMessage());
            exit;
        }

        $command = "java -jar ../jod/lib/jodconverter-core-3.0-beta-3.jar ".$tmp_xls_name." ".$tmp_pdf_name;
        $output = shell_exec($command);

        echo $output;

        header('Content-type: application/pdf');
        header('Content-Disposition: attachment;filename="claim-data_'.$claim_id.'.pdf"');

        @ readfile($tmp_pdf_name);
        unlink($tmp_xls_name);
        unlink($tmp_pdf_name);
    }
        
    

    exit;
}


function get_claim_workflow_array() {
    return array(
        'none'                          => 'None', 
        'fax_doc_recieved'  => 'Fax Documents Received',
        'all_doc_recieved'  => 'All Documents Received',
        'doc_clarification' => 'Document Clarification',
        'rejected_invoices' => 'Rejected Invoices',
        'rejected_claim_docs'=>'Rejected Claim Documents',
        'completed_status'  => 'Completed Claim Status'
    );
}
//------------------------------------------------------------------------------
// view individual claim
function ncn_admin_view_claim($claim_id)
{
    GLOBAL $base_url;
  
    ncn_admin_view_claim_action($claim_id);

    if (isset($_POST['current_scroll_position']) && $_POST['current_scroll_position'] != "")
    {
        echo "<script language='javascript'> window.onload = function(){window.scrollTo(0, ". $_POST['current_scroll_position'] .");} </script>";
    }
    else if (isset($_GET['current_scroll_position']) &&  $_GET['current_scroll_position'] != "")
    {
        echo "<script language='javascript'> window.onload = function(){window.scrollTo(0, ". $_GET['current_scroll_position'] .");}</script>";
    }
    else if (isset($_SESSION['current_scroll_position']))
    {
        echo "<script language='javascript'> window.onload = function(){window.scrollTo(0, ". $_SESSION['current_scroll_position'] .");}</script>";
        $_SESSION['current_scroll_position'] = 0;
    }

        
    if (isset($_POST['tfunction_workflow']) && $_POST['tfunction_workflow'] == 'tfunction_workflow') {
        ncn_admin_claim_workflow_change($claim_id);
        // mark 1st claim mail reminder
        ncn_admin_mark_to_send_1st_mail($claim_id);     
    } else if (isset($_POST['tfunction_file_note']) && $_POST['tfunction_file_note'] == 'tfunction_file_note') {
        ncn_admin_claim_file_note_change($claim_id);
    } else if (isset($_POST['tfunction_claim_type']) && $_POST['tfunction_claim_type'] == 'claim_type_change') {
        ncn_admin_claim_type_change($claim_id);
    } else if (isset($_POST['tfunction_claim_note_action']) && $_POST['tfunction_claim_note_action'] == 'tfunction_claim_note_add') {
        $_claim_note = trim($_REQUEST['claim_note']);
        if ($_claim_note) {
          ncn_admin_note_add_note_from_original($claim_id);
          if (ncn_admin_note_add_note($claim_id, $GLOBALS['user']->uid, $_claim_note)) {
            drupal_set_message("You added note to claim, successfully.");
            $log_message = t("!user_name added Claim Note. !note", array('!user_name'=>ncn_amin_get_user_role_and_name(), '!note'=>strip_tags($_claim_note)));
            ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);
          }
          /*if (ncn_admin_add_claim_note($claim_id, $_claim_note)) {
            drupal_set_message("You added note to claim, successfully.");
            $log_message = t("!user_name added Claim Note. !note", array('!user_name'=>ncn_amin_get_user_role_and_name(), '!note'=>strip_tags($_claim_note)));
            ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);
          }*/
        } 
    } else if (isset($_POST['tfunction_claim_note_action']) && $_POST['tfunction_claim_note_action'] == 'tfunction_claim_note_update') {
    $note_id = $_REQUEST['claim_note_id'];
    $_claim_note = trim($_REQUEST['claim_note']);
    if ($_claim_note) {
      if (ncn_admin_note_update_note($note_id, $_claim_note)) {
        drupal_set_message("You updated note to claim, successfully.");
        $log_message = t("!user_name update Claim Note. !note", array('!user_name'=>ncn_amin_get_user_role_and_name(), '!note'=>strip_tags($_claim_note)));
        ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);
      }
    }
  }
  
    if (isset($_POST['tfunction_send_cdr']) && $_POST['tfunction_send_cdr'] == 'tfunction_send_cdr') {
        ncn_admin_send_cdr($claim_id);
    }
    
    // --- handle of uploading scope file ---
    if (isset($_POST['scope_upload_function']) && $_POST['scope_upload_function'] == 'scope') {
        $roomname = $_POST['roomname'];
        ncn_admin_scopeform_submit($roomname);
    } else if (isset($_POST['scope_upload_function']) && $_POST['scope_upload_function'] == 'scope_auto_full_pdf') {
        $roomname = $_POST['roomname'];
        ncn_admin_auto_scopeform_full_pdf_submit(arg(4), $roomname);
    } else if (isset($_POST['scope_upload_function']) && $_POST['scope_upload_function'] == 'scope_ss_data') {
        $roomname = $_POST['roomname'];
        ncn_admin_ss_make_scopesheet_image(arg(4), $roomname);
    }
    
    if (isset($_POST['scope_upload_function']) && $_POST['claims_data_update'] == 'claims_data_update') {
        ncn_admin_claimsdata_update($claim_id);
    }
    
    if (isset($_POST['create_invoice_function']) && $_POST['create_invoice_function'] == 'create_invoice') {
        generate_final_invoice($claim_id);
    }
    
    if (isset($_POST['extend_data_function']) && $_POST['extend_data_function'] == 'extend_data') {
        save_extended_data($claim_id);
    }
    $invoice_data = get_extended_data($claim_id);
    
    if (isset($_POST['photo_add_room']) && $_POST['photo_add_room']  == 'photo_add_room') {
        ncn_admin_photo_add_room($claim_id, $_POST['room_name']);
    }
    else if (isset($_POST['update_captions']) && $_POST['update_captions'] == 'update_captions') {
        save_image_captions($claim_id);
    }
    else if (isset($_POST['photo_delete_room']) && $_POST['photo_delete_room']  == 'photo_delete_room') {
        ncn_admin_photo_delete_room($claim_id, $_POST['room_name']);
    } 
    else if (isset($_POST['photo_delete_first_room']) && $_POST['photo_delete_first_room']  == 'photo_delete_first_room') {
        ncn_admin_photo_delete_first_room($claim_id, $_POST['room_name']);
    } 
    
    if (stristr($_SERVER['REQUEST_URI'], 'ncn_admin_pool'))
    {   $url_part = "ncn_admin_pool";       }
    else
    {   $url_part = "ncn_admin";        }

    
    // --- handle status update ----
    if ( isset($_POST['claim_status_change']) && $_POST['claim_status_change']=='claim_status_change' && isset($_POST['claim_status']) )
    {
        // update claim amount
        if ((is_numeric(trim($_POST['claim_amount']))) && (trim($_POST['claim_amount'])>= 0))
        {
        //  $query = "UPDATE claims SET claim_amount=".$_POST['claim_amount']." WHERE claim_id=".$claim_id;
            $result = db_query('UPDATE {claims} SET claim_amount=:a  WHERE claim_id=:b',
            array(':a'=>$_POST['claim_amount'],':b'=>$claim_id));
        }
        else    // invalid (non numeric) value entered for "claim amount"
        {
            drupal_set_message('Claim amount must be a positive number.' , 'error');
        }
    
        // update payment received amount
        if ((is_numeric(trim($_POST['payment_received']))) && (trim($_POST['payment_received'])>= 0))
        {
        //  $query = "UPDATE claims SET payment_received=".trim($_POST['payment_received'])." WHERE claim_id=".$claim_id;
            $result = db_query('UPDATE {claims} SET payment_received=:a WHERE claim_id=:b',
            array(':a'=>trim($_POST['payment_received']),':b'=>$claim_id));
        }
        else    // invalid (non numeric) value entered for "payment_received"
        {
            drupal_set_message('Payment received amount must be a positive number.' , 'error');
        }
    
        // carry on
        
        
        $updated_user = $GLOBALS['user']->name;
        $log_message = "Status updated by " . ncn_amin_get_user_role_and_name() . " to '".$_POST['claim_status']."' ";
        
        if (trim($_POST['claim_status_message']) != '') // only add status message to log if it's not blank
        {
            $log_message .= "(with message: ".$_POST['claim_status_message'].")";
        }
        
        $log_message .= " Claim amount updated to: $".trim($_POST['claim_amount']);
        drupal_set_message($log_message, 'status');
        
        ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);
        
        // --- email approved ---
        if ((isset($_POST['claim_status']) && $_POST['claim_status'] == 'approved') && (variable_get('ncn_approved_active', '') == 1))
        {
        //  $query = "SELECT user_id FROM claims WHERE claim_id=".$claim_id;
            $result = db_query('SELECT user_id FROM {claims} WHERE claim_id=:a',array(':a'=>$claim_id));
            $row = $result->fetchAssoc();
        
            $subject = variable_get('ncn_approved_subject', '');
            $body = variable_get('ncn_approved_body', '');
        
            $user_details = user_load($row['user_id']); 
            $v['claim_id'] = $claim_id;
            $v['customer_name'] = ncn_cd($claim_id, 'customer_name');
        
            $subject = pm_message_tags($v, $subject);
            $body = pm_message_tags($v, $body);
            $params = array(
                '!owner_name' => ncn_cd($claim_id, 'customer_name'),
                '!claim_id' => $claim_id
            );
            
            pm_send(0, $user_details->uid, $subject, $body, $claim_id, 0, 'approve_claim', $params);
        }
        else
        // --- email rejected ---
        if ((isset($_POST['claim_status']) && $_POST['claim_status'] == 'returned') && (variable_get('ncn_approved_active', '') == 1))
        {
        //  $query = "SELECT user_id FROM claims WHERE claim_id=".$claim_id;
            $result = db_query('SELECT user_id FROM {claims} WHERE claim_id=:a',array(':a'=>$claim_id));
            $row = $result->fetchAssoc();
        
            $subject = variable_get('ncn_rejected_subject', '');
            $body = variable_get('ncn_rejected_body', '');
        
            $user_details = user_load($row['user_id']); 
            $v['claim_id'] = $claim_id;
            $v['customer_name'] = ncn_cd($claim_id, 'customer_name');
            $v['reason'] = $_POST['claim_status_message'];
        
            $subject = pm_message_tags($v, $subject);
            $body = pm_message_tags($v, $body);
            
            pm_send(0, $user_details->uid, $subject, $body, $claim_id);
        }
        // --- claim message changed? ----
        else
        if (isset($_POST['claim_status_message']) && trim($_POST['claim_status_message']) != '')
        {
            // check to see if claims message has changed
        //  $query = "SELECT * FROM claims WHERE claim_id=".$claim_id;
            $result = db_query('SELECT * FROM {claims} WHERE claim_id=:a',array(':a'=>$claim_id));
            $row = $result->fetchAssoc();
            
            if (AddSlashes($_POST['claim_status_message']) != $row['claim_status_message'])
            {
                $subject = variable_get('ncn_generic_subject', '');
                $body = variable_get('ncn_generic_body', '');
            
                $user_details = user_load($row['user_id']); 

                $v['claim_id'] = $claim_id;
                $v['customer_name'] = ncn_cd($claim_id, 'customer_name');
                $v['status'] = $_POST['claim_status_message'];
            
                $subject = pm_message_tags($v, $subject);   
                $body = pm_message_tags($v, $body);
                
                pm_send(0, $user_details->uid, $subject, $body, $claim_id);
                
                
            } 
        }
        
        // update claim status
    //  $query = "UPDATE claims SET claim_status='".$_POST['claim_status']."',claim_status_message=\"".AddSlashes($_POST['claim_status_message'])."\",last_modified=".date('U')." WHERE claim_id=".$claim_id;
        $result = db_query('UPDATE {claims} SET claim_status=:a, claim_status_message=:b,
        last_modified=:c  WHERE claim_id=:d',array(':a'=>$_POST['claim_status'],
        ':b'=>$_POST['claim_status_message'],':c'=>date('U'),':d'=>$claim_id));
        
        // Claim Back End
        set_ncn_data_extra($claim_id, 'claim_backend', $_POST['claim_backend']);
    }
    
    // ---- display stuff start ----
    // get logfile count
//  $query2 = "SELECT * FROM claims_log WHERE claim_id=".$claim_id.";";
    $result2 = db_query('SELECT * FROM {claims_log} WHERE claim_id=:a',array(':a'=>$claim_id));
    $entries_in_log = $result2->rowCount();
    
    // get claim status'
    $query = "SHOW COLUMNS FROM `claims` LIKE 'claim_status'";
    $result = db_query($query);
    $row = $result->fetchAssoc();
    
    $statuses = str_replace("'", "", $row['Type']);
    $statuses = str_replace("enum(", "", $statuses);
    $statuses = str_replace(")", "", $statuses);
    $statuses = explode(',', $statuses);
    
        

    // ---- draw controls -----
//  $query = "SELECT * FROM claims WHERE claim_id=".$claim_id.";";
    $result = db_query('SELECT * FROM {claims} WHERE claim_id=:a',array(':a'=>$claim_id));
    $row_count = $result->rowCount();
    if ($row_count == 0) {
        drupal_set_message(t('Claim(#!claim_id) doesn\'t exist.', array('!claim_id'=>$claim_id)), 'error');
        drupal_goto('admin/config/ncn_admin');
    }
    $row = $result->fetchAssoc();
    
    ?>
    
    <?php 
        /*************** Permission of View Claim ***************/
        //* Claim Overview 
        $pvc_claim_status       = ncn_pvc_get_permission_from_user($GLOBALS['user']->uid, 'Claim Status');  
        $pvc_claim_type         = ncn_pvc_get_permission_from_user($GLOBALS['user']->uid, 'Claim Type');    
        
        $pvc_claim_workflow     = ncn_pvc_get_permission_from_user($GLOBALS['user']->uid, 'Claim Workflow'); 
        $pvc_claim_note         = ncn_pvc_get_permission_from_user($GLOBALS['user']->uid, 'Claim Note'); 
        $pvc_send_cdr   = ncn_pvc_get_permission_from_user($GLOBALS['user']->uid, 'Send Claim Documents Reminder'); 

        $pvc_claim_status_disabled = '';
        if (!($pvc_claim_status&2))     {$pvc_claim_status_disabled="disabled";}
        $pvc_claim_type_disabled = '';
        if (!($pvc_claim_type&2))       {$pvc_claim_type_disabled="disabled";}
        $pvc_claim_workflow_disabled = '';
        if (!($pvc_claim_workflow&2))       {$pvc_claim_workflow_disabled="disabled";}
        $pvc_claim_note_disabled = '';
        if (!($pvc_claim_note&2))           {$pvc_claim_note_disabled="disabled";}
        $pvc_send_cdr_disabled = '';
        if (!($pvc_send_cdr&2))             {$pvc_send_cdr_disabled="disabled";}
        
        
        //* Claim View - CE Portal Admin Panel
        $pvc_ce_management  = ncn_pvc_get_permission_from_user($GLOBALS['user']->uid, 'Claim Exaimners Management'); 
        $pvc_ce_management_disabled = '';
        if (!($pvc_ce_management&2))        {$pvc_ce_management_disabled="disabled";}
        
        //* Upload Claim Documents
        $pvc_upload_claim_doc   = ncn_pvc_get_permission_from_user($GLOBALS['user']->uid, 'Upload Claim Documents'); 
        $pvc_upload_claim_doc_disabled = '';
        if (!($pvc_upload_claim_doc&2))     {$pvc_upload_claim_doc_disabled="disabled";}
        //* Upload CE Documents
        $pvc_upload_ce_doc  = ncn_pvc_get_permission_from_user($GLOBALS['user']->uid, 'Upload CE Documents');
        $pvc_upload_ce_doc_disabled = '';
        if (!($pvc_upload_ce_doc&2))        {$pvc_upload_ce_doc_disabled="disabled";}
        //* Upload ESX Files
        $pvc_upload_esx_file    = ncn_pvc_get_permission_from_user($GLOBALS['user']->uid, 'Upload ESX Files'); 
        $pvc_upload_esx_file_disabled = '';
        if (!($pvc_upload_esx_file&2))      {$pvc_upload_esx_file_disabled="disabled";}
        //* Upload CE Invoice PDF Files
        $pvc_upload_ce_invoice_file     = ncn_pvc_get_permission_from_user($GLOBALS['user']->uid, 'Upload CE Invoice PDF Files'); 
        $pvc_upload_ce_invoice_file_disabled = '';
        if (!($pvc_upload_ce_invoice_file&2))       {$pvc_upload_ce_invoice_file_disabled="disabled";}
        
        //* Claim Data
        $pvc_claim_data         = ncn_pvc_get_permission_from_user($GLOBALS['user']->uid, 'Claim Data'); 
        $pvc_claim_invoice_data = ncn_pvc_get_permission_from_user($GLOBALS['user']->uid, 'Claim Invoice Data'); 
        $pvc_claim_invoice_doc  = ncn_pvc_get_permission_from_user($GLOBALS['user']->uid, 'Claim Invoice Documents'); 
        $pvc_claim_data_disabled = '';
        if (!($pvc_claim_data&2))           {$pvc_claim_data_disabled="disabled";}
        $pvc_claim_invoice_data_disabled = '';
        if (!($pvc_claim_invoice_data&2))   {$pvc_claim_invoice_data_disabled="disabled";}
        $pvc_claim_invoice_doc_disabled = '';
        if (!($pvc_claim_invoice_doc&2))    {$pvc_claim_invoice_doc_disabled="disabled";}
        
        //* Photo Album
        $pvc_photo_album        = ncn_pvc_get_permission_from_user($GLOBALS['user']->uid, 'Photo Album'); 
        $pvc_photo_album_disabled = '';
        if (!($pvc_photo_album&2))          {$pvc_photo_album_disabled="disabled";}
        
        //* Create Invoice
        $pvc_create_invoice     = ncn_pvc_get_permission_from_user($GLOBALS['user']->uid, 'Create Invoice');
        $pvc_create_invoice_disabled = ''; 
        if (!($pvc_create_invoice&2))       {$pvc_create_invoice_disabled="disabled";}
        
    ?>
    
    <div>
        <fieldset>
        <legend>Claim Overview</legend>
        <form method="POST">
        <input type="hidden" name="claim_status_change" id="claim_status_change" value="" />
        <input type="hidden" name="current_scroll_position" class="current_scroll_position" value="" />
        <table> 
            <thead></thead>
            <tbody style="border:0;">
            <tr valign="top">
            <td style="padding:0;">
                <div>
                <table>
                    <thead></thead>
                    <tbody style="border:0;">
                        <?php if ($pvc_claim_status&01): ?>
                        <tr valign="top">           
                            <td><strong>Claim Type</strong></td>
                            <td>
                                <?php if ($pvc_claim_type_disabled=='disabled'): ?>
                                    <?php echo ucwords($row['claim_type']); ?> &nbsp;&nbsp;
                                    <?php echo ucwords($row['claim_product']); ?>&nbsp;&nbsp;
                                <?php else: ?>
                                    <input type="hidden" name="tfunction_claim_type" id="tfunction_claim_type" value="" />
                                    <?php echo ncn_admin_draw_select_claim_type('claim_type', $row['claim_type']); ?>   <br />
                                    <?php echo ncn_admin_draw_select_claim_product('claim_product', $row['claim_product']); ?>&nbsp;&nbsp;
                                    <input type="submit" value="Change" onclick="return on_click_change_claim_type();" />
                                    
                                <?php endif; ?>
                            </td>
                        </tr>
                        <tr>            
                            <td><strong>Date Created</strong></td>
                            <td><?= date("m/d/Y", $row['created']); ?></td>
                        </tr>
                        <tr>            
                            <td><strong>Last Modified</strong></td>
                            <td><?= date("m/d/Y", $row['last_modified']); ?></td>
                        </tr>
            
                        <?php if (user_access('ncn_admin edit addtional claim data')): ?>
                        <tr>
                            <td><strong>Claims Processing</strong></td>
                            <td>
                <a href="<?= $base_url; ?>/admin/config/<?= $url_part; ?>/view-additional-claim-data/<?= $claim_id; ?>" target='_blank'>View</a> / 
                <a href="<?= $base_url; ?>/admin/config/<?= $url_part; ?>/edit-additional-claim-data/<?= $claim_id; ?>" target='_blank'>Edit<!--Additional Data--></a>
                Claims Processing
              </td>
                        </tr>
            <?php elseif (user_access('ncn_admin view addtional claim data')): ?>
            <tr>
              <td><strong>Claims Processing</strong></td>
              <td>
                <a href="<?= $base_url; ?>/admin/config/<?= $url_part; ?>/view-additional-claim-data/<?= $claim_id; ?>" target='_blank'>View</a> 
                Claims Processing
              </td>
            </tr>
                        <?php endif; ?>
            
                        <tr>
                            <td><strong>Log file</strong></td>
                            <td><a href="<?= $base_url; ?>/admin/config/<?= $url_part; ?>/viewlog/<?= $claim_id; ?>"><?= $entries_in_log;?> entries in log</a></td>
                        </tr>
                        <tr>
                            <td><strong>Claim Amount</strong></td>
                            <td>$<input type="text" name="claim_amount" value="<?= $row['claim_amount']; ?>" style="width:120px;" /></td>
                        </tr>
                        <tr>
                            <td><strong>Payment Received</strong></td>
                            <td>$<input type="text" name="payment_received" value="<?= $row['payment_received']; ?>" style="width:120px;" /></td>
                        </tr>
                        <tr valign="top">
                            <td><strong>File Notes</strong></td>
                            <td>
                                <input type="hidden" name="tfunction_file_note" id="tfunction_file_note" value="" />
                                <textarea name="claim_file_note" style="height:70px; min-width: 200px;" ></textarea>
                                <?php if ($pvc_claim_status_disabled!='disabled'): ?>
                                <div><input type="submit" value=" Set " onclick="return on_click_change_file_note();" /></div>
                                <?php endif; ?>
                            </td>
                        </tr>
                        <?php endif; ?>
                    </tbody>
                </table>
                </div>
            </td>
            <td style="padding:0;">
                <div>
                <table>
                    <thead></thead>
                    <tbody style="border:0;">
                        <?php if ($pvc_claim_status&01): ?>
                        <tr>
                            <td><strong>Download Excel file</strong></td>
                            <td><a href="<?= $base_url; ?>/admin/config/<?= $url_part; ?>/downloadxls/<?= $claim_id; ?>">claim-data_<?= $claim_id; ?>.xls</a></td>
                        </tr>
                        <tr>
                            <td><strong>Download PDF file</strong></td>
                            <td><a href="<?= $base_url; ?>/admin/config/<?= $url_part; ?>/downloadpdf/<?= $claim_id; ?>">claim-data_<?= $claim_id; ?>.pdf</a></td>
                        </tr>
                        <tr>            
                            <td><strong>Claim Status</strong></td>
                            <td>
                                <select name="claim_status" >
                                    <?php
                                    
                                    foreach ($statuses as $status)
                                    {
                                        if ($status == $row['claim_status'])
                                        {   $checked = " selected ";    }
                                        else
                                        {   $checked = '';  }
                                    
                                        ?>
                                        <option value="<?= $status; ?>" <?= $checked; ?> ><?= ucwords($status); ?></option>
                                        <?php
                                    }
                                    
                                    ?>
                                </select>
                            </td>
                        </tr>
                        <tr>            
                            <td valign="top"><strong>Claim Status Message</strong></td>
                            <td>
                                <textarea name="claim_status_message" style="height:70px;" ></textarea>
                            </td>
                        </tr>
                        <tr>
                            <td><strong>Claim Back End</strong></td>
                            <td><?php echo draw_select_claim_view_claim_backend('claim_backend', get_ncn_data_extra($claim_id, 'claim_backend') ); ?></td>
                        </tr>
                        
                        <tr>
                            <td></td>
                            <td>
                                <?php if ($pvc_claim_status_disabled!='disabled'): ?>
                                <input type="submit" value="Update Claim Status" onclick="return on_click_change_claim_status();" >
                                <?php endif; ?>
                            </td>
                        </tr>
                        <?php endif;    // Claim Status?>
                    </tbody>            
                </table>
                </div>
            </td>
            </tr>
            </tbody>
        </table>    
        </form>
        
        <?php if ($pvc_claim_note&01): ?>
        <form id="ncn_admin_claim_note_form" method="POST" class="claim-note-add-form">
        <input type="hidden" name="tfunction_claim_note_action" id="tfunction_claim_note_action" value="tfunction_claim_note_add" />
    <input type="hidden" name="claim_note_id" id="claim_note_id" value="0" />
        <input type="hidden" name="current_scroll_position" class="current_scroll_position" value="" />
        <table>
            <tr>
                <td valign="top" style="width:50px"><strong>Note</strong></td>
                <td>
                    <?php 
            if (ncn_admin_note_check_mode($claim_id) == 'new') { print ncn_admin_note_render_claim_notes_table($claim_id, $GLOBALS['user']->uid); }
            else { ?> 
            <textarea rows="5" cols="80" readonly><?php $_claim_note = str_replace("<br/>", "\n", base64_decode($row['file_note']));  echo $_claim_note; ?></textarea> 
          <?php } ?>
                </td>
            </tr>
            <?php if ($pvc_claim_note_disabled!='disabled'): ?>
            <tr>
                <td></td>
                <td><input id="ncn_admin_claim_note_content" type="text" name="claim_note" size="80" /></td>
            </tr>
            <tr>
                <td></td>
                <td><input id="ncn_admin_claim_note_submit_btn" type="submit"  onclick="return on_set_scroll_position();" value="Add" />&nbsp;&nbsp;&nbsp;
            <input id="ncn_admin_claim_note_cancel_btn" type="button"  onclick="on_click_claim_note_cancel_btn(); "   value="Cancel" />
        </td>
            </tr>
            <?php endif; ?>
        </table>
        </form>
        <?php endif; ?>
        
        <?php if ($pvc_claim_workflow&01): ?>
        <form id="ncn_admin_claim_workflow_form" method="POST">
        <input type="hidden" name="tfunction_workflow" id="tfunction_workflow" value="tfunction_workflow" />
        <input type="hidden" name="current_scroll_position" class="current_scroll_position" value="" />
        <table>
            <tr>
                <td valign="top" style="width:180px"><strong>Claim Workflow</strong></td>
                <td>                    
                    <select id="claim_workflow" name="claim_workflow">
                    <?php
                    $arr_timer = get_claim_workflow_array();
                    foreach ($arr_timer as $key=>$val)
                    {
                        if ($key == $row['workflow'])
                        {   $checked = " selected ";    }
                        else
                        {   $checked = '';  }
                    
                        ?>
                        <option value="<?= $key; ?>" <?= $checked; ?>><?= $val; ?></option>
                        <?php
                    }
                    
                    ?>
                    </select>
                    <?php if ($pvc_claim_workflow_disabled!='disabled'): ?>
                    <input type="submit" onclick="return on_set_scroll_position();" value="Change"/>
                    <?php endif; ?>
                    
                    <div id="claim_timer_div">
                        <?php echo render_claim_timer($claim_id); ?>
                    </div>
                    
                    <?php if ($pvc_claim_workflow_disabled!='disabled'): ?>
                    <?php 
                        //$claim_docs_rejected_msg = variable_get('ncn_rejected_claim_docs_mail_body', '');
                        //$claim_docs_rejected_msg = ncn_admin_get_claim_docs_rejected_message($claim_id);
                    ?>
                    <div id="ncn_admin_rejected_claim_docs_mail_body" <?php if ($row['workflow']!='rejected_claim_docs') {echo 'style="display: none;"';} ?>>
                        <textarea name="rejected_claim_docs_mail_body" style="height:120px; min-width: 500px;"><?php echo $claim_docs_rejected_msg; ?></textarea>
                    </div>
                    <script>
                        jQuery(document).ready(function() {
                            jQuery('#claim_workflow').bind('change', function() {
                                if( jQuery('#claim_workflow').val()=='rejected_claim_docs') {
                                    jQuery('#ncn_admin_rejected_claim_docs_mail_body').css('display', 'block');
                                } else {
                                    jQuery('#ncn_admin_rejected_claim_docs_mail_body').css('display', 'none');
                                }
                            });
                        });
                    </script>
                    <?php endif; ?>
                </td>
            </tr>
        </table>
        </form>
        <?php endif; // Claim Workflow?>
        
        
        <!--- Send Claim Documents Reminder -->
        <?php if ($pvc_send_cdr_disabled!='disabled'): ?>
        <form id="ncn_admin_send_claim_documents_reminder" method="POST">
            <input type="hidden" name="tfunction_send_cdr" value="tfunction_send_cdr" />
            <input type="hidden" name="current_scroll_position" class="current_scroll_position" value="" />
            <input type="submit" onclick="return on_set_scroll_position();" value="Send Claim Documents Reminder" />
            <p style="font-style: italic; font-size: 11px;">Send a notification mail to said that we have not received claim documents.</p>
        </form>
        <?php endif; ?>
        <!--- END of Send Claim Documents Reminder -->
        
        <?php echo ncn_admin_render_claim_status($claim_id); ?>
        </fieldset>
    
    </div>
    <script type="text/javascript">
        function on_click_change_file_note() {
            jQuery('#tfunction_file_note').val('tfunction_file_note');
            jQuery('.current_scroll_position').val(get_current_scroll_position());
            return true;
        }
        function on_click_change_claim_status() {
            jQuery('#claim_status_change').val('claim_status_change');
            jQuery('.current_scroll_position').val(get_current_scroll_position());
            return true;
        }
        function on_click_change_claim_type() {
            jQuery('#tfunction_claim_type').val('claim_type_change');
            jQuery('.current_scroll_position').val(get_current_scroll_position());
            return true;
        }
        function on_set_scroll_position() {
            jQuery('.current_scroll_position').val(get_current_scroll_position());
            return true;
        }
    
        
    </script>
    <div id="ce_manager_wrapper">
        <?php print ncn_ceportal_claimview_claim_exaimners($claim_id, $pvc_ce_management, $pvc_ce_management_disabled); ?>
    </div>
    <div>
    <?php
    
    if ($pvc_upload_claim_doc&01) {
        echo ncn_admin_draw_invoice_upload($claim_id, 2, $pvc_upload_claim_doc_disabled);
    }
    if ($pvc_upload_ce_doc&01) {
        echo ncn_admin_draw_invoice_upload($claim_id, 10, $pvc_upload_ce_doc_disabled);
    }
    if ($pvc_upload_esx_file&01) {
        echo ncn_admin_draw_invoice_upload($claim_id, 11, $pvc_upload_esx_file_disabled);
    }
    if ($pvc_upload_ce_invoice_file&01) {
        echo ncn_admin_draw_invoice_upload($claim_id, 12, $pvc_upload_ce_invoice_file_disabled);
    }
    
    // get/setup data
//  $query = "SELECT * FROM claims_data WHERE claim_id=".$claim_id." AND field_type!='hidden' AND field_type!='submit' AND field_type!='token' ORDER BY `weight` ASC;";
    $result = db_query('SELECT * FROM {claims_data} WHERE claim_id=:a AND field_type!=:b AND field_type!=:c AND field_type!=:d ORDER BY weight ASC',
    array(':a'=>$claim_id,':b'=>'hidden',':c'=>'submit',':d'=>'token'));
    $row_count = $result->rowCount();

    // page title
    drupal_set_title("Viewing claim: #".$claim_id." (".ncn_cd($claim_id, 'customer_name').")");

    
    // ---- draw data list ----
    ?>
    <?php if($pvc_claim_data&01): ?>
    <fieldset>
    <legend>Claim Data</legend>
    <form id="claims_data" method="post">
    <input type="hidden" name="current_scroll_position" class="current_scroll_position" value="" />
    <input id="claims_data_update" name="claims_data_update" type="hidden" value="claims_data_update" />
    
    <table class="sticky-enabled tableSelect-processed sticky-table">
    <thead class="tableHeader-processed">
    <tr>
        <th>Data Key</th>
        <th>Data Value</th>
    </tr>
    </thead>

    <tbody>
    <?php
    
    drupal_add_js(drupal_get_path('module', 'ncn_image') . '/ncn_image.js');
    $index=0;
    //for ($i=0; $i<$row_count; $i++)
    foreach($result as $row)
    {
        // get the data
        $row = (array)$row;
        $row['val'] = unserialize($row['val']);
        $res = "";

        if (!isset($row['val']['type']))
        {   $row['val']['type'] = "scope";  }
        
        // convert the data
        switch ($row['val']['type'])
        {
            case "checkboxes":
                $res = "";
                
                foreach ($row['val'] as $k=> $v)
                {
                    if (trim($v) != "0")
                    {   $res .= "<li> ".$v; }
                }
                
                if ($res != "")
                {   $res = "<ul>".$res."</ul>";     }
            break;
        
            case "phone_field_phone":
                $res = implode(" ", $row['val']);
            break;

            case "time_field_time":
                $res = render_claim_time($row['val']);
            break;

            case "date":
                $res = render_claim_date($row['val']);
            break;
        
            case "image_upload_element":
                $image_url = $base_url."/".$row['val']->filepath; 
                $img_info = image_get_info($row['val']->filepath);
                
                $res = "<a href='".$image_url."?width=".$img_info['width']."&height=".$img_info['height']."&iframe=false' class='colorbox-load'>"; 
                $res .= "<img src='".str_replace('default/files', 'default/files/imagecache/ncnadmin', $image_url)."' />";
                $res .= "</a>"; 
                $res .= "<br /><small style='margin:0;padding:0;'>(click to enlarge)</small>";
            break;
            
            case "scope":
            break;
            default:
                //echo $row['key']."<br/>";
                if ($row['key'] == 'date_of_loss') {
                    /* Hack for Mobile App Data */
                    if((int)$row['val']['val'][1]==0){
                        $xchng_ary = array($row['val']['val'][1],$row['val']['val'][0],$row['val']['val'][2]);
                        $row['val']['val'] = $xchng_ary;
                    }
                    /* Hack for Mobile App Data */
                    $res = ncn_admin_render_date_loss($row['key'], $row['val']['val']);
                } else if ($row['key'] == 'insured_state') {
                    /* Hack for Mobile App Data */
                    preg_match('/\(([^\)]*)\)/', $row['val']['val'], $ins_match);
                    if(isset($ins_match[1]) && trim($ins_match[1])!=''){
                        $row['val']['val'] = $ins_match[1];
                    }
                    /* Hack for Mobile App Data */
                    $res = ncn_loc_state($row['key'], 'claim_data_field_'.$row['key'], false, false, $row['val']['val'], 'US');
                } else {
                    if (is_array($row['val']['val']))
                    {
                            $res = '<input name="'.$row['key'].'" value="'.implode(" ", $row['val']['val']).'" />';
                    }
                    else
                    {
                        $res = '<input name="'.$row['key'].'" value="'. $row['val']['val'].'" size="50"  />';
                        
                    }
                }
            break;
        }
        
        // display the data
        if ($res != "" && $row['key']!='id') {
        ?>
        <tr class="<?php if ($index%2) print "even"; else print "odd"; ?>">
            <td><?= ucwords(str_replace("_", " ", $row['key'])); ?></td>
            <td><?= $res; ?></td>
        </tr>
        <?php
            $index+=1;
        }
    }
    ?>
    <?php if($pvc_claim_data_disabled!='disabled'): ?>
    <tr class="<?php if ($index%2) print "even"; else print "odd"; ?>">
        <td colspan="2">
            <input type="submit" onclick="return on_set_scroll_position();" value="Save Claims Data" />
        </td>
    </tr>
    <?php endif; ?>
    </tbody>
    </table>
    </form>
    </fieldset>
    <?php endif; //Claim Data ?>
    
    <?php
    if ($pvc_claim_invoice_data&01) {
        echo ncn_admin_invoice_data($claim_id, $invoice_data, $pvc_claim_invoice_data_disabled);
    }
    
    if ($pvc_claim_invoice_doc&01) {
        echo ncn_admin_draw_invoice_upload($claim_id, 3, $pvc_claim_invoice_doc_disabled);
        echo ncn_admin_draw_invoice_upload($claim_id, 4, $pvc_claim_invoice_doc_disabled);
        echo ncn_admin_draw_invoice_upload($claim_id, 5, $pvc_claim_invoice_doc_disabled);
        echo ncn_admin_draw_multi_file_upload($claim_id, $pvc_claim_invoice_doc_disabled);
    }
    ?>
    </div>
    <?php if($pvc_photo_album&01): ?>
    
    <form id="ncn_admin_add_room" method="post">
        <input type="hidden" name="photo_add_room" value="photo_add_room" />
        <input type="hidden" id="room_name" name="room_name" />
        <input type="hidden" name="current_scroll_position" class="current_scroll_position" value="" />
    </form>
    <form id="ncn_admin_delete_room" method="post">
        <input type="hidden" name="photo_delete_room" value="photo_delete_room" />
        <input type="hidden" id="room_name" name="room_name" />
        <input type="hidden" name="current_scroll_position" class="current_scroll_position" value="" />
    </form>
    <form id="ncn_admin_delete_first_room" method="post">
        <input type="hidden" name="photo_delete_first_room" value="photo_delete_first_room" />
        <input type="hidden" id="room_name" name="room_name" />
        <input type="hidden" name="current_scroll_position" class="current_scroll_position" value="" />
    </form>
    
    <table class="sticky-enabled tableSelect-processed sticky-table">
    <thead>
        <th>Photo Album<span style="margin-left:50px;"><a href="#ncn_admin_add_room" onclick="on_click_ncn_admin_add_room();">Add Room</a></span>
        </th>
    </thead>
    <tbody>
    <?php 
//      $query = "SELECT * FROM claims_data WHERE claim_id=".$claim_id." AND field_type!='hidden' AND field_type!='submit' AND field_type!='token' ORDER BY `weight` ASC;";
        $result = db_query('SELECT * FROM {claims_data} WHERE claim_id=:a AND field_type!=:b AND field_type!=:c AND field_type!=:d ORDER BY weight ASC',
        array(':a'=>$claim_id,':b'=>'hidden',':c'=>'submit',':d'=>'token'));
    //   $result = db_query($query);
        if ($result == false) {
            $row_count = 0;
        } else {
            $row_count = $result->rowCount();
        }
        //mysql_data_seek($result, 0);
        for ($i=0; $i<$row_count; $i++)
        {
            // get the data
            $row = $result->fetchAssoc();
            if ($row['key'] == '#data') { continue; }
            
            $row['val'] = unserialize($row['val']);
            $res = "";
            if (!isset($row['val']['type']))
            {   $row['val']['type'] = "scope";  }   
        
            switch ($row['val']['type'])
            {
                case "scope":
                    $start_num = 0;
                    foreach ($row['val'] as $roomname => $roomdata)
                    {
                        if ($roomname != "type")
                        {
                            $first_room = false;
                            $default_room_name = ncn_admin_claim_get_default_room_name($claim_id);
                                                        
                            if ($roomname == $default_room_name) {
                                $first_room = true;
                            }
                            if ($first_room && ncn_admin_is_photo_first_room_deleted($claim_id)) { continue; }
                            
                            $res .= '<fieldset class="claims-roomdata clearfix">';
                            $res .= '<legend><h3><b>'.$roomname.'</b></h3></legend>';
                            $image_count = 6;
                            if ($first_room) {
                                $image_count = 3;
                            }
                            
                            $res .= '<form class="update-captions" method="post" >';
                            $res .= '<input type="hidden" name="roomname" value="'.$roomname.'" />';
                            $res .= '<input type="hidden" name="update_captions" value="update_captions" />';
                            $res .= '<input type="hidden" name="image_count" value="'.$image_count.'" />';
                            $res .= '<input type="hidden" name="current_scroll_position" class="current_scroll_position" value="" />';
                            $res .= '<div class="claims-room-images clearfix">';
                            
                            
                            $captions = _get_image_captions($claim_id, $roomname, $image_count);
                            for ($i=0; $i<$image_count; $i++)
                            //foreach ($row['val'][$roomname] as $img)
                            {
                                $img_index = 'image'.$i;
                                
                                $res .= '<div class="scope-image">';
                                if (isset($row['val'][$roomname][$img_index])) {
                                    $img = $row['val'][$roomname][$img_index];
                                    $image_url = $GLOBALS['base_url']."/".$img['path']."?rid=". date('U');


                                    $win_width = "800";
                                    $win_height = "620";
                                    $in_url = $GLOBALS['base_url']."/admin/config/ncn_image_open/?";
                                    $in_url .= "img=".urlencode($img['path'])."&";
                                    $in_url .= "claim_id=".$claim_id."&room_name=".$roomname . "&position=".$img_index."&";
                                    $in_url .= "width=".$win_width."&height=".$win_height;

                                    if ($pvc_photo_album_disabled != 'disabled') {
//                                      $res .= "<a onclick=\"open_image_box('".$GLOBALS['base_url']."', $claim_id, '$roomname', '$img_index', '".urlencode($img['path'])."')\" >";
                                        $res .= "<a class='colorbox-node' href='{$in_url}'  >";
                                    }
                                    
                                    if(strpos($image_url,"public://")!==false){
                                        $timage_url = str_replace('public://', 'sites/default/files/styles/image_tab_upload/public/', $image_url);                                      
                                    } else {
                                        $timage_url = str_replace('default/files', 'default/files/imagecache/ncnadmin', $image_url);                                        
                                    }
                                    // Show with D7 way
                                    {
                                        $t_path = str_replace('sites/default/files/', 'public://', $img['path']);
                                        $timage_url = image_style_url('medium',$t_path);
                                    }
                                    $res .= "<img src='".$timage_url."' />";
                                    if ($pvc_photo_album_disabled != 'disabled') {
                                        $res .= "</a>"; 
                                    }
                                    
                                } else {
                                    $image_url = _get_blank_room_image_url($image_count, $i);
                                    //$res .= '<div class="blank-image">&nbsp;</div>';

                                    $win_width = "800";
                                    $win_height = "620";
                                    $in_url = $GLOBALS['base_url']."/admin/config/ncn_image_open/?";
                                    $in_url .= "claim_id=".$claim_id."&room_name=".$roomname . "&position=".$img_index."&";
                                    $in_url .= "width=".$win_width."&height=".$win_height;

                                    if ($pvc_photo_album_disabled != 'disabled') {
//                                      $res .= "<a onclick=\"open_image_box('".$GLOBALS['base_url']."', $claim_id, '$roomname', '$img_index', '')\" >";
                                        $res .= "<a class='colorbox-node' href='{$in_url}'  >";
                                    }
                                    $res .= '<img src="'.$image_url.'" width="200px"/>';
                                    if ($pvc_photo_album_disabled != 'disabled') {
                                        $res .= "</a>"; 
                                    }
                                }
                                $res .= '<div class="image-caption"><input type="text" name="'.$img_index.'" value="'.$captions[$i].'" /></div>';
                                $res .= "</div>";
                                
                                /*$res .= "<a href='".$image_url."?width=500&height=500&iframe=false' class='colorbox-load'>"; 
                                $res .= "<img src='".str_replace('default/files', 'default/files/imagecache/ncnadmin', $image_url)."' />";
                                $res .= "</a>"; */
                            }
                            
                            $res.= "</div>";
                            
                            if ($pvc_photo_album_disabled != 'disabled') {
                                $res.= "<div class='update-caption-action'>";
                                $res.= '<input type="submit" onclick="return on_set_scroll_position();" value="Update Captions" />';
                                if ($image_count==6) {
                                    $res.= ('&nbsp;&nbsp;&nbsp;<input type="button" value="Edit Roomname" onclick="on_click_edit_roomname('.$claim_id.', \''.$roomname.'\')"/>');
                                    $res.= ('&nbsp;&nbsp;&nbsp;<input type="button" value="Delete Room" onclick="on_click_ncn_admin_delete_room(\''.$roomname.'\')"/>');
                                } else {
                                    $res.= ('&nbsp;&nbsp;&nbsp;<input type="button" value="Delete Room" onclick="on_click_ncn_admin_delete_first_room(\''.$roomname.'\')"/>');
                                }
                                $res.= "</div>";
                            }
                            $res .= '</form>';
                            
                            $res.= "<div class=''>";
                            if ($image_count==6) {
                                $res.= ncn_admin_draw_scope_upload($claim_id, "$roomname", $pvc_photo_album_disabled, $start_num);
                            }
                            $res.= "</div>";
                            
                            //* Edit Room ScopeSheet Link
                            
                            if ($image_count==6) {
                                $res.="<div class='claim-view-scopesheet-links clearfix'>";
                                if (user_access('ncn_admin view room scopesheet')) {
                                    $_room_ss_view_url = base_path()."admin/config/ncn_admin/view-room-scopesheet/$claim_id/$roomname";
                                    $res.= "<div class='edit-room-scopesheet-link room-ss-link'><a href='$_room_ss_view_url' target='_blank'>View Room ScopeSheet</a></div>";
                                }
                                if (user_access('ncn_admin edit room scopesheet')) {
                                    $_room_ss_edit_url = base_path()."admin/config/ncn_admin/edit-room-scopesheet/$claim_id/$roomname";
                                    $res.= "<div class='view-room-scopesheet-link room-ss-link'><a href='$_room_ss_edit_url' target='_blank'>Edit Room ScopeSheet</a></div>";
                                }
                                $res.="</div>";
                            }
                            
                            $res.= "</fieldset>";   // claims-roomdata
                            
                            $start_num ++;
                        }
                    }
                break;
            }
            if ($res != "") {
            ?>
            <tr class="<?php if ($i%2) print "even"; else print "odd"; ?>">
                <td><?= $res; ?></td>
            </tr>
            <?php
            }
        }
    ?>
    </tbody>
    </table>
    <?php endif; // Photo Album ?>
    
    
    <?php if (user_access('ncn change order request review')): ?>
    <div>
        <fieldset>
        <legend>Change Order Requests</legend>
        <div class='cor-lists'>
            <?php print ncn_change_order_render_request_list_table_admin($claim_id); ?>
        </div>
        </fieldset>
    </div>
    <?php endif; ?>
    
    <?php if ($pvc_create_invoice&01): ?>
    <?php echo ncn_admin_draw_invoice_upload($claim_id, 1, $pvc_create_invoice_disabled); ?>
    <?php if ($pvc_create_invoice_disabled!='disabled'): ?>
    <div class="create-invoice">
    <form id="create_invoice" method="post">
        <input type="hidden" name="create_invoice_function" value="create_invoice" />
        <input type="hidden" name="current_scroll_position" class="current_scroll_position" value="" />
        <input type="submit" onclick="return on_set_scroll_position();" value="CREATE INVOICE" />
    </form>
    </div>
    <?php endif; ?>
    <?php endif;//Create Invoice; ?>
    
    <?php

    
}

function _get_image_captions($claim_id, $roomname, $img_count){
//  $query = "SELECT * FROM claim_img_captions WHERE claim_id=$claim_id AND roomname = '$roomname'";
    $result = db_query('SELECT * FROM {claim_img_captions} WHERE claim_id=:a AND roomname = :b',
        array(':a'=>$claim_id,':b'=>$roomname));
    if ($result->rowCount()>0) {
        $row = $result->fetchAssoc();
        $data = unserialize($row['data']);
        return $data;
    }
    
    // set default values
    $data = array();
    if ($img_count == 3) {
        $data[0] = 'Exterior of Dwelling';
        $data[1] = 'Cause & Origin';
        $data[2] = 'Driver\'s License';
    } else {
        $data[0] = 'Pre Mitigation';
        $data[1] = 'Mitigation';
        $data[2] = 'Post Mitigation';
        
        $data[3] = 'Before Reading';
        $data[4] = 'During Reading';
        $data[5] = 'After Reading';
    }
    
    return $data;
    
    
}

function _save_image_captions($claim_id, $roomname, $data){
//  $query = "SELECT * FROM claim_img_captions WHERE claim_id=$claim_id AND roomname = '$roomname'";
    $result = db_query('SELECT * FROM {claim_img_captions} WHERE claim_id=:a AND roomname = :b',
        array(':a'=>$claim_id,':b'=>$roomname));
    $data = serialize($data);
    if ($result->rowCount()>0) {
        $query1 = db_query('UPDATE {claim_img_captions} SET data=:a WHERE claim_id=:b AND roomname=:c',
            array(':a'=>$data,':b'=>$claim_id ,':c'=>$roomname));
    } else {
        $query1 = db_query('INSERT INTO {claim_img_captions} (claim_id, roomname, data) VALUES (:a,:b,:c)',
            array(':a'=>$claim_id,':b'=>$roomname,':c'=>$data));
    }
    $result1 = $query1;
    if (!$result1) {
        return FALSE;
    }
    return TRUE;
    
}
/**
 * type : 3 or 6
 */
function _get_blank_room_image_url($type, $index){
    global $base_url;
    $image_url = $base_url.'/'.drupal_get_path('module', 'ncn_create_claim').'/images/';
    if ($type == 3) {
        switch ($index) {
            case 0: $image_url .= 'fronhouse.png';  break;
            case 1: $image_url .= 'origin.png';     break;
            case 2: $image_url .= 'license.png';    break;
        }
    } else {
        $image_url .= ('blank'.($index+1).'.png');
    }
    
    return $image_url;
}
    
function convert_pdf_to_jpg($file, $dir_url) {
    
    $old_file_path = $file->filepath;
    
    $base_abs_path = $_SERVER['DOCUMENT_ROOT'];
    $pdf_full_path = $base_abs_path."/".$file->filepath;
    $folder_full_path = $base_abs_path."/".$dir_url;
    $jpg_prefix = $file->filename."-";
    
    
    //$command = "java -jar c:/AspriseJavaPDF-free.jar $pdf_full_path $folder_full_path $jpg_prefix";
    $command = "java -jar ../AspriseJavaPDF-free.jar $pdf_full_path $folder_full_path $jpg_prefix";
    
    //$command = "c:/pdf2image -o $folder_full_path $pdf_full_path --format jpg --prefix $jpg_prefix --verb 3 ";
    //$command = "./../pdf2image -o $folder_full_path $pdf_full_path --format jpg --prefix $jpg_prefix --verb 3 ";
                                         
    $output = shell_exec($command);
    //echo $output;
    //exit;
    file_delete($file);
    $error = false;
    $file->filepath .=".jpg";
    $file->filename .=".jpg";
    $file->filemime = "image/jpg";
    if (!is_file("$dir_url/$jpg_prefix"."1.jpg")){
    
    if (is_file("$dir_url/$jpg_prefix".".jpg")){
        $res = copy("$dir_url/$jpg_prefix".".jpg" , $file->filepath);
        if (!$res) { $error=true; }
        } else {
            return FALSE;       
        }
    } else {
        $res = copy("$dir_url/$jpg_prefix"."1.jpg" , $file->filepath);
        if (!$res) { $error=true; }
    }
    
    if (is_file("$dir_url/$jpg_prefix".".jpg")){
        file_delete("$dir_url/$jpg_prefix".".jpg");
    }
    
    for ($i=1; $i<300; $i++) {
        if (is_file("$dir_url/$jpg_prefix"."$i.jpg")){
            file_delete("$dir_url/$jpg_prefix"."$i.jpg");
        } else {
            break;
        }
    }   
    if ($error) {
        return FALSE;
    }   
    return $file;
}

function ncn_admin_invoiceform_3_submit($form, &$form_state)
{
    $live = $form_state['values']['live'];
    $claim_id = arg(4);

    // we know the file was good
    $invoice_dir = 'public://invoices/'.$claim_id;
    if (is_dir($invoice_dir)===false) {
        @drupal_mkdir($invoice_dir);
    }

    $file = file_load($form_state['values']['fid']);
    $newFilename = @strtr($file->filename,array("( "=>"", " )"=>"", "("=>"", ")"=>"", " "=>"_"));
    
    if(isset($form_state['clicked_button']['#post']['current_scroll_position']))
    {
        $_SESSION['current_scroll_position'] = $form_state['clicked_button']['#post']['current_scroll_position'];
    }
    $file->status = FILE_STATUS_PERMANENT;
    $res = file_move($file, "public://invoices/{$claim_id}/{$newFilename}");
    // add invoice to database
    if ($res)
    {
        if ($live == 3 || $live == 4) {
            $res_file = convert_pdf_to_jpg($file, $claim_dir);
            if ($res_file === FALSE) {
                drupal_set_message('Failed to convert uploaded PDF file to Image', 'error');
                return;
            }
            $file = $res_file;
        }else{
            $file = $res;
        }
        
        // get last revision
        //echo $query = "SELECT * FROM claims_invoices WHERE claim_id=".$claim_id." AND `live`=".$live." ORDER BY revision DESC";
        $result = db_query('SELECT * FROM {claims_invoices} WHERE claim_id=:a AND live=:b ORDER BY revision DESC',
        array(':a'=>$claim_id,':b'=>$live));
        $row_count = $result->rowCount();

        if($live == 11){
            $row_count = 0;
        }

        if ($row_count == 0)
        {
            $file->filepath = str_replace("public://","sites/default/files/",$file->uri);

            $revision = 0;  
        //  $query = "INSERT INTO claims_invoices VALUES(NULL, ".$claim_id.", ".$revision.", \"".AddSlashes($file->filename)."\", \"".AddSlashes($file->filepath)."\", \"".AddSlashes($file->filemime)."\", ".date('U').", ".$live.");";
            $query = db_query('INSERT INTO {claims_invoices} VALUES(NULL,:a,:b,:c,:d,:e,:f,:g)',
                array(':a'=>$claim_id,':b'=>$revision,':c'=>$file->filename,':d'=>$file->filepath,':e'=>$file->filemime,
                    ':f'=>date('U'),':g'=>$live));
        }
        else
        {
            //$row = (array)$result;
            //$revision = $row['revision']+1;
            $row = $result->fetchAssoc();
            $revision = 0;

            /*Create File Object from File path*/
            $uri = str_replace("sites/default/files/","public://",$row['filepath']);
            $fileObj = createFileObject($uri);

            file_delete($fileObj);
            $file->filepath = str_replace("public://","sites/default/files/",$file->uri);

            $query = db_query('UPDATE {claims_invoices} SET filename=:a, filepath=:b, filemime=:c,
                timestamp=:d WHERE claim_id=:e AND live=:f',array(':a'=>$file->filename,':b'=>$file->filepath,
                ':c'=>$file->filemime,':d'=>date('U'),':e'=>$claim_id,':f'=>$live));
        }
        
        $result = $query;
        
        // success!
        $claim_file_title = ncn_admin_get_claim_file_title($live);
        drupal_set_message( $claim_file_title.' "'.$file->filename.'" was uploaded.', 'status');    
        $log_message = t("!user_name uploaded !file_title  : !file_name", array('!user_name'=>ncn_amin_get_user_role_and_name(), '!file_title'=>$claim_file_title, '!file_name'=>$file->filename));
        ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);
    }
}
function ncn_admin_invoiceform_4_submit($form, &$form_state)
{
    ncn_admin_invoiceform_3_submit($form, $form_state);
}
function ncn_admin_invoiceform_5_submit($form, &$form_state)
{
    ncn_admin_invoiceform_3_submit($form, $form_state);
}


//------------------------------------------------------------------------------
function ncn_admin_invoiceform_2_submit($form, &$form_state)
{
    ncn_admin_invoiceform_1_submit($form, $form_state);
}
function ncn_admin_invoiceform_10_submit($form, &$form_state)
{
    ncn_admin_invoiceform_3_submit($form, $form_state);
}
function ncn_admin_invoiceform_11_submit($form, &$form_state)
{
    ncn_admin_invoiceform_3_submit($form, $form_state,'esx');
}
function ncn_admin_invoiceform_12_submit($form, &$form_state)
{
    ncn_admin_invoiceform_3_submit($form, $form_state);
}

// upload invoice form SUBMIT
function ncn_admin_invoiceform_1_submit($form, &$form_state)
{
    $live = $form_state['values']['live'];
    
    if(isset($form_state['clicked_button']['#post']['current_scroll_position']))
    {
        $_SESSION['current_scroll_position'] = $form_state['clicked_button']['#post']['current_scroll_position'];
    } 
    
    $claim_id = arg(4);
    
    // we know the file was good
    //$file = file_save_upload('invoice_upload'.$live);
    $file = file_load($form_state['values']['fid']);
    $newFilename = @strtr($file->filename,array("( "=>"", " )"=>"", "("=>"", ")"=>"", " "=>"_"));
    
    $filePath = "sites/default/files/invoices/$claim_id/";
    $claim_dir = DRUPAL_ROOT."/".$filePath;
    
    if (!is_dir($claim_dir)) {
        mkdir($claim_dir, 0755);
    }
    
    $file->status = FILE_STATUS_PERMANENT;
    $res = file_move($file, "public://invoices/{$claim_id}/{$newFilename}", FILE_EXISTS_RENAME);
    
    // add invoice to database
    if ($res)
    {
        // get last revision
    //  $query = "SELECT revision FROM claims_invoices WHERE claim_id=".$claim_id." AND `live`=".$live." ORDER BY revision DESC LIMIT 0,1";
        $result = db_query('SELECT revision FROM {claims_invoices} WHERE claim_id=:a AND live=:b ORDER BY revision DESC LIMIT 0,1',
        array(':a'=>$claim_id,':b'=>$live));

        $row_count = $result->rowCount();
        
        if ($row_count == 0)
        {   $revision = 0;  }
        else
        {
            $row = $result->fetchAssoc();
            $revision = $row['revision']+1;
        }

        // insert new data
    //  $query = "INSERT INTO claims_invoices VALUES(NULL, ".$claim_id.", ".$revision.", \"".AddSlashes($file->filename)."\", \"".AddSlashes($file->filepath)."\", \"".AddSlashes($file->filemime)."\", ".date('U').", ".$live.");";
        $result = db_query('INSERT INTO {claims_invoices} VALUES(NULL,:a,:b,:c,:d,:e,:f,:g)',
            array(':a'=>$claim_id,':b'=>$revision,':c'=>$res->filename,':d'=>str_replace("public://","sites/default/files/",$res->uri),
                ':e'=>$res->filemime,':f'=>date('U'),':g'=>$live));


        $claim_file_title = ncn_admin_get_claim_file_title($live);
        // add entry to logfile
        
        $log_message = ncn_amin_get_user_role_and_name()." uploaded new file: ".$file->filename." ( $claim_file_title - revision #".$revision. " )";
    ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);     
        
        // success!
        $log_message = "Uploaded new file: ".$file->filename." ( $claim_file_title - revision #".$revision. " )";
        drupal_set_message($log_message, 'status');
        
        if ($live == 1 && ncn_admin_is_claim_first_free($claim_id) ) {
            $base_abs_path = $_SERVER['DOCUMENT_ROOT'];
            $final_invoice_name = $file->filepath;
            //$command = "java -jar C:/pdfwatermark/ncn_pdf_watermark.jar $base_abs_path/$final_invoice_name";
            $command = "java -jar ../pdfwatermark/ncn_pdf_watermark.jar $base_abs_path/$final_invoice_name";

            $output = shell_exec($command);
            //$final_locked_invoice_name = ncn_admin_get_locked_invoice_filename($final_invoice_name);
        }
    }
}

//------------------------------------------------------------------------------
function ncn_admin_invoiceform_3_validate($form, &$form_state)
{
    $live = $form_state['values']['live'];

    // check file was uploaded
    $file = file_save_upload('invoice_upload'.$live);

    if (!$file)
    {
        // If you want to require it, you'll want to do it here... something like this:
        form_set_error('invoice_upload'.$live, 'File missing for upload.');
        $form_state['values']['fid'] = 0;
    } else {
        $form_state['values']['fid'] = $file->fid;
    }

    switch ($live)
    {
        case 3:
        case 4:
        case 5: if ($file->filemime != "application/pdf") {
                    form_set_error('invoice_upload'.$live, 'Only PDF file could be uploaded.');
                }
        break;
    }
}

function ncn_admin_invoiceform_4_validate($form, &$form_state)
{
    ncn_admin_invoiceform_3_validate($form, $form_state);
}
function ncn_admin_invoiceform_5_validate($form, &$form_state)
{
    ncn_admin_invoiceform_3_validate($form, $form_state);
}
function ncn_admin_invoiceform_10_validate($form, &$form_state)
{
    ncn_admin_invoiceform_3_validate($form, $form_state);
}
function ncn_admin_invoiceform_11_validate($form, &$form_state)
{
    ncn_admin_invoiceform_3_validate($form, $form_state);
}
function ncn_admin_invoiceform_12_validate($form, &$form_state)
{
    ncn_admin_invoiceform_3_validate($form, $form_state);
}

function ncn_admin_invoiceform_2_validate($form, &$form_state)
{
    ncn_admin_invoiceform_1_validate($form, $form_state);
}

// upload invoice form VALIDATE
function ncn_admin_invoiceform_1_validate($form, &$form_state)
{
    $live = $form_state['values']['live'];

    /*if(isset($form_state['#post']['current_scroll_position']))
    {
        $_SESSION['current_scroll_position'] = $form_state['#post']['current_scroll_position'];
    } */

    // check file was uploaded
    $file = file_save_upload('invoice_upload'.$live);

    if (!$file)
    {
        // If you want to require it, you'll want to do it here... something like this:
        form_set_error('invoice_upload'.$live, 'File missing for upload.');
        $form_state['values']['fid'] = 0;       
    } else {
        $form_state['values']['fid'] = $file->fid;
    }  
}


function ncn_admin_scopeform($claim_id, $roomname)
{
    ob_start();
?>

<p class="description" style="font-weight: bold;">
    If you don't upload scopesheet for final invoice, then we would generate this scopesheet using scopesheet data when creating a final invoice.
</p>

<form id="ncn_admin_scopeform_<?php echo $roomname; ?>" class="attach-description" enctype="multipart/form-data" method="post">
    <input type="file" size="60" id="ncn_scope_file_<?php echo $roomname; ?>" name="files[ncn_scope_file_<?php echo $roomname; ?>]" accept="image/jpg, image/jpeg, image/gif, image/png, image/bmp" />
    <input type="hidden" name="roomname" value="<?php echo $roomname; ?>" />
    <input type="hidden" name="scope_upload_function" value="scope" />
    <input type="hidden" name="current_scroll_position" class="current_scroll_position" value="" />
    <input type="submit" onclick="return on_set_scroll_position();" value="Upload Exact Scope Image File" />
</form>
<p class="description">
    Upload cropped scope image file using this form. When creating invoice, uploaded image file is used, directly.
</p>

<form id="ncn_admin_auto_scopeform_pdf_<?php echo $roomname; ?>" class="attach-description" enctype="multipart/form-data" method="post">
    <input type="file" size="60" id="ncn_scope_auto_pdf_file_<?php echo str_replace(' ', '_', $roomname); ?>" name="files[ncn_scope_auto_pdf_file_<?php echo $roomname; ?>]" accept="application/pdf" />
    <input type="hidden" name="roomname" value="<?php echo $roomname; ?>" />
    <input type="hidden" name="scope_upload_function" value="scope_auto_full_pdf" />
    <input type="hidden" name="current_scroll_position" class="current_scroll_position" value="" />
    <input type="submit" onclick="return on_set_scroll_position();" value="Upload Full Scope PDF File And Crop Automatically"  />
</form>
<p class="description">
    Upload full scope pdf file using this form. When uploading, scope image file would be cut from scope pdf, automatically.
</p>

<form id="ncn_admin_scopeform_pdf_<?php echo $roomname; ?>" class="attach-description" enctype="multipart/form-data" method="post">
    <input type="file" size="60" id="ncn_scope_pdf_file_<?php echo str_replace(' ', '_', $roomname); ?>" name="files[ncn_scope_pdf_file_<?php echo $roomname; ?>]" accept="application/pdf" />
    <!--<input type="hidden" name="roomname" value="<?php echo $roomname; ?>" />
    <input type="hidden" name="scope_upload_function" value="scope_full_pdf" /> -->
    <input type="hidden" name="current_scroll_position" class="current_scroll_position" value="" />
    <input type="button" value="Upload Full Scope PDF File And Crop Manually" onclick="return on_click_upload_scope_full_pdf('<?php echo $GLOBALS['base_url']; ?>', 'ncn_scope_pdf_file_<?php echo str_replace(' ', '_', $roomname); ?>', '<?php echo $claim_id; ?>', '<?php echo $roomname; ?>' ); " />
</form>
<p class="description">
    Upload full scope pdf file using this form. After uploading, you need to cut from scope file, manually.
</p>
<?php 
    $content = ob_get_contents();
    ob_end_clean();
    
    return $content;
}

function convert_bmp_to_jpg($file) {

    $filepath = drupal_realpath($file->uri);
    $mi = ImageCreateFromBMP($filepath);
    $file->uri .= ".jpg";
    $file->filename .= ".jpg";
    $file->filemime = "image/jpg";
    $result = imagejpeg($mi,$filepath);
    
    if ($result) {
        return $file;
    }
    return FALSE;
}

function ncn_admin_scopeform_submit($roomname) {
    //$roomname = $form_state['values']['roomname'];
    $claim_id = arg(4);
    
    // we know the file was good
    $source = 'ncn_scope_file_'.$roomname;
    
    if(isset($form_state['clicked_button']['#post']['current_scroll_position']))
    {
        $_SESSION['current_scroll_position'] = $form_state['clicked_button']['#post']['current_scroll_position'];
    } 
    
    $file = file_save_upload($source);
    
    if ($file == 0 ) {
        drupal_set_message("File of missing for upload (room name :$roomname)", "error");
        return;
    } else if ($file->filemime != 'image/jpeg' && $file->filemime != 'image/jpg' && $file->filemime != 'image/gif' && $file->filemime != 'image/png' && strtolower(substr($file->filename, -4)) != ".bmp") {
        drupal_set_message("Scope file should be only Image (room name: $roomname)", "error");
        return;
    }

    $filePath = "sites/default/files/invoices/$claim_id/";
    $claim_dir = DRUPAL_ROOT."/".$filePath;
    
    if (!is_dir($claim_dir)) {
        mkdir($claim_dir, 0755);
    }

    $res = file_copy($file, "public://invoices/{$claim_id}", FILE_EXISTS_RENAME);

    // add invoice to database
    if ($res)
    {
        if ( strtolower(substr($file->filename, -4)) == ".bmp" ) {
            
//          $old_filepath = drupal_realpath($file->uri);
            $result_convert = convert_bmp_to_jpg($file);
            file_delete($file);
            if ($result_convert === FALSE) {
                drupal_set_message("Failed to convert uploaded bmp file to png file. ($roomname)", 'error');
                return;
            }
            $file = $result_convert;
        }else{
            $file = $res;
        }
    
        // get last revision
    //  $query = "SELECT * FROM claims_scope WHERE claim_id=".$claim_id." AND roomname=\"".$roomname."\"";
        $result = db_query('SELECT * FROM {claims_scope} WHERE claim_id=:a AND roomname=:b',
            array(':a'=>$claim_id,':b'=>$roomname));
        $row_count = $result->rowCount();
        
        
        if ($row_count == 0)
        {   
            $revision = 0;  
            $query = db_query('INSERT INTO {claims_scope} VALUES(NULL,:a,:b,:c,:d,:e,:f)',
                array(':a'=>$claim_id,':b'=>$roomname,':c'=>$file->filename,':d'=>$filePath.$file->filename,
                ':e'=>$file->filemime,':f'=>date('U')));
        }
        else
        {
            $row = (array)$result->fetchAssoc();
//          $revision = $row['revision']+1;

            $revision = 0;  
//          file_delete($row['filepath']);

            @unlink(drupal_realpath($row['filepath']));

            $query = db_query('UPDATE {claims_scope} SET filename=:a, filepath=:b, filemime=:d,
            `timestamp`=:e WHERE claim_id=:f AND roomname=:g',array(':a'=>$file->filename,':b'=>$filePath.$file->filename,
                ':d'=>$file->filemime,':e'=>date('U'),':f'=>$claim_id,':g'=>$roomname));
        }
        
        $result = $query;
        
        $log_message = t("!user_name uploaded Scope File of Room(!room_name). Filename: !file_name", array('!user_name'=>ncn_amin_get_user_role_and_name(), '!room_name'=>$roomname, '!file_name'=>$file->filename));
        ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);
        // success!
        $log_message = t("Uploaded Scope File of Room(!room_name). Filename: !file_name", array('!room_name'=>$roomname, '!file_name'=>$file->filename));
        drupal_set_message('File "'.$file->filename.'" was uploaded (roomname: '.$roomname.').', 'status');
    } else {
        
    }
}

// upload scope pdf file and crop automatically.
function ncn_admin_auto_scopeform_full_pdf_submit($claim_id, $roomname) {
    
    // we know the file was good
    $source = 'ncn_scope_auto_pdf_file_'.$roomname;
    
    $file = file_save_upload($source);
    
    $json_data = array();
    $json_data['error'] = '';
    $json_data['roomname'] = $source;
    
    if ($file == 0 ) {
        drupal_set_message("File of missing for upload (room name :$roomname)", "error");
        return;
    } else if ($file->filemime != 'application/pdf') {
        drupal_set_message("Scope file should be only PDF (room name: $roomname)", "error");
        return;
    }
    
    if ($json_data['error'] == '') {

    $filePath = "sites/default/files/invoices/$claim_id/";
    $claim_dir = DRUPAL_ROOT."/".$filePath;
    
    if (!is_dir($claim_dir)) {
        mkdir($claim_dir, 0755);
    }

    $res = file_copy($file, "public://invoices/{$claim_id}", FILE_EXISTS_RENAME);

    $dest_file['uri'] = drupal_realpath($res->uri);
    $dest_file['filename'] = $res->filename;
    
    $img_file = convert_pdf_to_jpg($file, $claim_dir);
    if ($img_file == FALSE) {
        drupal_set_message(t("Failed to convert PDF to Image, after uploading scope pdf file(room name :!roomname)", array('!roomname'=>$roomname)), "error");
        return;
    } else {
    
        // Croping converted image
        $dest_file['uri'] .= "_cut.jpg";
        $dest_file['filename'] .= "_cut.jpg";
        $dest_file['filemime'] = "image/jpg";
        
        
        $api_params = array(
            'action'    => 'crop',
            'width'     => variable_get('ncn_scope_file_crop_width', '0'),
            'height'    => variable_get('ncn_scope_file_crop_height', '0'),
            'x'         => variable_get('ncn_scope_file_crop_x', '0'),
            'y'         => variable_get('ncn_scope_file_crop_y', '0'),
            
            'source'    => $img_file->uri,
            'dest'      => $dest_file['uri']
        );
            
        $bAction = _ncn_image_api('crop', $api_params);
        @unlink(drupal_realpath($img_file->uri));
        if ($bAction) {
            // get last revision
        //  $query = "SELECT * FROM claims_scope WHERE claim_id=".$claim_id." AND roomname=\"".$roomname."\"";
            $result = db_query('SELECT * FROM {claims_scope} WHERE claim_id=:a AND roomname=:b',
                array(':a'=>$claim_id,':b'=>$roomname));
            $row_count = $result->rowCount();
            
            if ($row_count == 0)
            {   
                $revision = 0;  
                $query = db_query('INSERT INTO {claims_scope} VALUES(NULL,:a,:b,:c,:d,:e,:f)',
                    array(':a'=>$claim_id,':b'=>$roomname,':c'=>$dest_file['filename'],
                    ':d'=>$filePath.$dest_file['filename'],':e'=>$dest_file['filemime'],':f'=>date('U')));
            }
            else
            {
                $row = (array)$result->fetchAssoc();
                //$revision = $row['revision']+1;
                
                $revision = 0;  

                @unlink(drupal_realpath($row['filepath']));

                $query = db_query('UPDATE {claims_scope} SET filename=:a , filepath=:b , filemime=:c , `timestamp`=:d WHERE claim_id=:e AND roomname=:f',
                array(':a'=>$dest_file['filename'],':b'=>$filePath.$dest_file['filename'],':c'=>$dest_file['filemime'],
                    ':d'=>date('U'),':e'=>$claim_id,':f'=>$roomname));
            }
      
            $result = $query;
            drupal_set_message('File "'.$dest_file['filename'].'" was generated (roomname: '.$roomname.').', 'status');
      
      $log_message = t("!user_name generated Scope File of Room !room_name. Filename: !file_name", array('!user_name'=>ncn_amin_get_user_role_and_name(), '!room_name'=>$roomname, '!file_name'=>$dest_file['filename']));
      ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);
        } else {
            drupal_set_message(t("Failed to crop image, after uploading scope pdf file and converting to image (room name :!roomname)", array('!roomname'=>$roomname)), "error");
            return;
            
        }
    }
    }
    
}

// upload scope pdf file and crop manually.
function ncn_admin_scopeform_full_pdf_submit($claim_id, $roomname) {
    
    // we know the file was good
    $source = 'ncn_scope_pdf_file_'.$roomname;
    
    $file = file_save_upload($source);
    
    $json_data = array();
    $json_data['error'] = '';
    
    if ($file == 0 ) {
        //drupal_set_message("File of missing for upload (room name :$roomname)", "error");
        $json_data['error'] = "File of missing for upload (room name :$roomname)";
        //return;
    } else if ($file->filemime != 'application/pdf') {
        //drupal_set_message("Scope file should be only PDF (room name: $roomname)", "error");
        $json_data['error'] = "Scope file should be only PDF (room name: $roomname)";
        //return;
    }
    
    if ($json_data['error'] == '') {

    $filePath = "sites/default/files/invoices/$claim_id/";
    $claim_dir = DRUPAL_ROOT."/".$filePath;
    
    if (!is_dir($claim_dir)) {
        mkdir($claim_dir, 0755);
    }

    $res = file_copy($file, "public://invoices/{$claim_id}", FILE_EXISTS_RENAME);

    $dest_file['uri'] = drupal_realpath($res->uri);
    $dest_file['filename'] = $res->filename;
    
    $img_file = convert_pdf_to_jpg($file, $claim_dir);
    if ($img_file == FALSE) {
        //drupal_set_message(t("Failed to convert PDF to Image, after uploading scope pdf file(room name :!roomname)", array('!roomname'=>$roomname)), "error");
        $json_data['error'] = "Failed to convert PDF to Image, after uploading scope pdf file(room name :$roomname)";
        //return;
    } else {
    
        // Scaling converted image
        $dest_file['uri'] .= "_scope.jpg";
        $dest_file['filename'] .= "_scope.jpg";
        $dest_file['filemime'] = "image/jpg";
        
        
        $api_params = array(
            'action'    => 'scale',
            'width'     => 600,
            'height'    => NULL,
            'upscale'   => FALSE,
            
            'source'    => $img_file->filepath,
            'dest'      => $dest_file['uri']
        );
            
        $bAction = _ncn_image_api('scale', $api_params);
        @unlink(drupal_realpath($img_file->uri));
        if ($bAction) {
            // get last revision

            //drupal_set_message('File "'.$dest_file['filename'].'" was generated (roomname: '.$roomname.').', 'status');
            $json_data['filepath'] = base64_encode(drupal_realpath($dest_file['uri']));
        } else {
            //drupal_set_message(t("Failed to crop image, after uploading scope pdf file and converting to image (room name :!roomname)", array('!roomname'=>$roomname)), "error");
            $json_data['error'] = "Failed to crop image, after uploading scope pdf file and converting to image (room name :$roomname)";
            //return;
            
        }
    }
    }
    
    echo json_encode($json_data);
    
}

function ncn_admin_claimsdata_update($claim_id) {
    $error = false;
  $options = array();
    foreach($_POST as $key=>$val) {
        if (!is_array($val)) {
            $val = trim($val);
        }
    //  $query = "SELECT * FROM claims_data WHERE claim_id=$claim_id AND `key` = '$key' ";
        $result = db_query('SELECT * FROM {claims_data} WHERE claim_id=:a AND `key`=:b',
            array(':a'=>$claim_id,':b'=>$key));
        if ($result->rowCount()>0) {
      $b_update = TRUE;
            // change the first room name
            if ($key == 'customer_name' && $val!= ncn_cd($claim_id, 'customer_name')) {
        $val = ncn_admin_remove_special_char_from_customer_name($val);
                if (ncn_admin_change_first_room_name($claim_id, $val)) {
          $options['insured_name'] = 'change';
        } else {
          $b_update = FALSE;
        }
            }
            
      if ($b_update) {
          $row = $result->fetchAssoc();
              $row['val'] = unserialize($row['val']);
              $row['val']['val'] = $val;
              $data = serialize($row['val']);
             // $query1 = "UPDATE claims_data SET `val` = '".mysql_real_escape_string($data)."' WHERE claim_id=$claim_id AND `key`='$key' ";
              $result1 = db_query('UPDATE {claims_data} SET val=:a WHERE claim_id=:b AND `key`=:c',
                  array(':a'=>$data,':b'=>$claim_id,':c'=>$key));
      }
        }
    }
    if (!$error) {
        drupal_set_message('Saved claims data, successfully.');
    }
  
  // Synchronize Additional Data
  ncn_admin_sync_additional_data($claim_id, $options);
}

//------------------------------------------------------------------------------
// upload invoice form display
function ncn_admin_invoiceform_1($form_state)
{

    $form = array();
    $form['#attributes'] = array('enctype' => "multipart/form-data");

    $form['invoice_upload1'] = array(
        '#type' => 'file',
        '#title' => t(''),
    );
    
    $form['live'] = array(
        '#type' => 'hidden',
        '#value' => 1,
    );

    $form['current_scroll_position'] = array(
        '#type' => 'hidden',
        '#attributes' => array('class' => t('current_scroll_position')),
        '#value' => t(''),
    );

    $form['next'] = array('#type' => 'submit', '#weight' => 101, '#value' => t('Upload Final Invoice'), '#attributes' => array('onclick' => 'return on_set_scroll_position()'));

    return($form);

}

//------------------------------------------------------------------------------
// upload user specific document
function ncn_admin_upload_document($form_state)
{

    $form = array();
    $form['#attributes'] = array('enctype' => "multipart/form-data");

    $form['op'] = array(
        '#type' => 'user_edit',
        '#value' => 'true',
    );

    $form['document_title'] = array(
        '#type' => 'textfield', 
        '#title' => t('Document Title'),
    );

    $form['document_upload'] = array(
        '#type' => 'file',
        '#title' => t(''),
    );
    
    $form['current_scroll_position'] = array(
        '#type' => 'hidden',
        '#attributes' => array('class' => t('current_scroll_position')),
        '#value' => t(''),
    );
    
    $form['next'] = array('#type' => 'submit', '#weight' => 101, '#value' => t('Upload Document'), '#attributes' => array('onclick' => 'return on_set_scroll_position()'));

    return($form);

}

//------------------------------------------------------------------------------
function ncn_admin_upload_document_validate($form, $form_state)
{

    // check title was long enough
    
    if (strlen($form_state['values']['document_title']) < 6)
    {
        // If you want to require it, you'll want to do it here... something like this:
        form_set_error('document_title', 'Document title must be at least 6 characters.');
        return;
    }

    // check file was uploaded
    $file = file_save_upload('document_upload');

    if (!$file)
    {
        // If you want to require it, you'll want to do it here... something like this:
        form_set_error('document_upload', 'File missing for upload.');
    }
  
}

//------------------------------------------------------------------------------
function ncn_admin_upload_document_submit($form, $form_state)
{
    $user_id = arg(4);

    if(isset($form_state['clicked_button']['#post']['current_scroll_position']))
    {
        $_SESSION['current_scroll_position'] = $form_state['clicked_button']['#post']['current_scroll_position'];
    } 

    // we know the file was good
    $file = file_save_upload('document_upload');
    $res = file_copy($file, 'sites/default/files/user_files/');
    
    // add invoice to database
    if ($res)
    {
    //  $query = "INSERT INTO member_documents VALUES(NULL, ".$user_id.", \"".AddSlashes($form_state['values']['document_title'])."\", \"".AddSlashes($file->filepath)."\", \"".AddSlashes($file->filename)."\",  \"".AddSlashes($file->filemime)."\");";
        $result = db_query('INSERT INTO {member_documents} VALUES(NULL,:a,:b,:c,:d,:e)',
            array(':a'=>$user_id,':b'=>$form_state['values']['document_title'],':c'=>$file->filepath,':d'=>$file->filename,
            ':e'=>$file->filemime));

        drupal_set_message('Uploaded new document.', 'status');
            
    }
    
}

//------------------------------------------------------------------------------
// upload invoice form display
function ncn_admin_invoiceform_2($form_state)
{

    $form = array(); //'#onclick' => t('return on_set_scroll_position();'), 
    $form['#attributes'] = array('enctype' => "multipart/form-data");

    $form['invoice_upload2'] = array(
        '#type' => 'file',
        '#title' => t(''),
    );
    
    $form['live'] = array(
        '#type' => 'hidden',
        '#value' => 2,
    );

    $form['current_scroll_position'] = array(
        '#type' => 'hidden',
        '#attributes' => array('class' => t('current_scroll_position')),
        '#value' => t(''),
    );

    $form['next'] = array('#type' => 'submit', '#weight' => 101, '#value' => t('Upload Claim Documents'), '#attributes' => array('onclick' => 'return on_set_scroll_position()'));
    
    return($form);

}
//------------------------------------------------------------------------------
// upload invoice form display
function ncn_admin_invoiceform_3($form_state)
{

    $form = array();
    $form['#attributes'] = array('enctype' => "multipart/form-data");

    $form['invoice_upload3'] = array(
        '#type' => 'file',
        '#title' => t(''),
        '#attributes' => array('accept'=> 'application/pdf'),
    );
    
    $form['live'] = array(
        '#type' => 'hidden',
        '#value' => 3,
    );

    $form['current_scroll_position'] = array(
        '#type' => 'hidden',
        '#attributes' => array('class' => t('current_scroll_position')),
        '#value' => t(''),
    );

    $form['next'] = array('#type' => 'submit', '#weight' => 101, '#value' => t('Upload Service Contract'), '#attributes' => array('onclick' => 'return on_set_scroll_position()'));

    return($form);

}
//------------------------------------------------------------------------------
// upload invoice form display
function ncn_admin_invoiceform_4($form_state)
{

    $form = array();
    $form['#attributes'] = array('enctype' => "multipart/form-data");

    $form['invoice_upload4'] = array(
        '#type' => 'file',
        '#title' => t(''),
        '#attributes' => array('accept'=> 'application/pdf'),
    );
    
    $form['live'] = array(
        '#type' => 'hidden',
        '#value' => 4,
    );

    $form['current_scroll_position'] = array(
        '#type' => 'hidden',
        '#attributes' => array('class' => t('current_scroll_position')),
        '#value' => t(''),
    );

    $form['next'] = array('#type' => 'submit', '#weight' => 101, '#value' => t('Upload Certificate of Completion'), '#attributes' => array('onclick' => 'return on_set_scroll_position()'));

    return($form);

}
//------------------------------------------------------------------------------
// upload invoice form display
function ncn_admin_invoiceform_5($form_state)
{

    $form = array();
    $form['#attributes'] = array('enctype' => "multipart/form-data");

    $form['invoice_upload5'] = array(
        '#type' => 'file',
        '#title' => t(''),
        '#attributes' => array('accept'=> 'application/pdf'),
    );
    
    $form['live'] = array(
        '#type' => 'hidden',
        '#value' => 5,
    );

    $form['current_scroll_position'] = array(
        '#type' => 'hidden',
        '#attributes' => array('class' => t('current_scroll_position')),
        '#value' => t(''),
    );

    $form['next'] = array('#type' => 'submit', '#weight' => 101, '#value' => t('Upload Completed Invoice'), '#attributes' => array('onclick' => 'return on_set_scroll_position()'));

    return($form);

}
//------------------------------------------------------------------------------
// upload ce claim file
function ncn_admin_invoiceform_10($form_state)
{

    $form = array();
    $form['#attributes'] = array('enctype' => "multipart/form-data");

    $form['invoice_upload10'] = array(
        '#type' => 'file',
        '#title' => t(''),
    );
    
    $form['live'] = array(
        '#type' => 'hidden',
        '#value' => 10,
    );

    $form['current_scroll_position'] = array(
        '#type' => 'hidden',
        '#attributes' => array('class' => t('current_scroll_position')),
        '#value' => t(''),
    );

    $form['next'] = array('#type' => 'submit', '#weight' => 101, '#value' => t('Upload CE Documents'), '#attributes' => array('onclick' => 'return on_set_scroll_position()'));

    return($form);

}
//------------------------------------------------------------------------------
// upload ce esx file
function ncn_admin_invoiceform_11($form_state)
{

    $form = array();
    $form['#attributes'] = array('enctype' => "multipart/form-data");

    $form['invoice_upload11'] = array(
        '#type' => 'file',
        '#title' => t(''),
    );
    
    $form['live'] = array(
        '#type' => 'hidden',
        '#value' => 11,
    );

    $form['current_scroll_position'] = array(
        '#type' => 'hidden',
        '#attributes' => array('class' => t('current_scroll_position')),
        '#value' => t(''),
    );


    $form['next'] = array('#type' => 'submit', '#weight' => 101, '#value' => t('Upload ESX File'), '#attributes' => array('onclick' => 'return on_set_scroll_position()'));

    return($form);

}
//------------------------------------------------------------------------------
// upload invoice form display
function ncn_admin_invoiceform_12($form_state)
{

    $form = array();
    $form['#attributes'] = array('enctype' => "multipart/form-data");

    $form['invoice_upload12'] = array(
        '#type' => 'file',
        '#title' => t(''),
    );
    
    $form['live'] = array(
        '#type' => 'hidden',
        '#value' => 12,
    );

    $form['current_scroll_position'] = array(
        '#type' => 'hidden',
        '#attributes' => array('class' => t('current_scroll_position')),
        '#value' => t(''),
    );

    $form['next'] = array('#type' => 'submit', '#weight' => 101, '#value' => t('Upload CE Invoice PDF File'), '#attributes' => array('onclick' => 'return on_set_scroll_position()'));

    return($form);

}

//------------------------------------------------------------------------------
function ncn_admin_draw_scope_upload($claim_id, $roomname, $pvc_disabled='', $start_num) {
GLOBAL $base_url;
    ob_start();
?>
    <div class="scope_file">
        <fieldset class="">
            <legend class="">
            </legend>
            <div class="scope_form">
            <?php
                if ($pvc_disabled != 'disabled') {
                    print ncn_admin_scopeform($claim_id, $roomname );
                }
            ?>
            
                <div id="invoice_revisions">
                <table>
                <tbody>
                    <thead class="tableHeader-processed">
                    <tr>
                        <th>File</th>
                        <th>Timestamp</th>
                        <th>Action</th>
                    </tr>
                    </thead>
                    <?php
                    // get latest 5 invoice revisions
                    // $query = "SELECT * FROM claims_scope WHERE claim_id=".$claim_id." AND roomname =\"$roomname\"";
                    $result = db_query('SELECT * FROM {claims_scope} WHERE claim_id=:a AND roomname=:b',array(':a'=>$claim_id,':b'=>$roomname));
                    $row_count = $result->rowCount();
                    
                    // run through invoice revisions
                    for ($i=0; $i<$row_count; $i++)
                    {
                        $row = $result->fetchAssoc();
                        ?>              
                        <tr class="<?php if ($i%2) print "even"; else print "odd"; ?>">
                            <td><img src="<?php echo base_path() ?>/sites/all/modules/ncn_claims_manager/images/pdf_icon_16.gif" width="16" height="16" align="left" />&nbsp;<a href="<?= $base_url; ?>/account/serve_scope_file/<?= $claim_id; ?>/<?= $row['roomname']; ?>"><?= StripSlashes($row['filename']); ?></a></td>
                            <td><?= date("m/d/Y H:i:s", $row['timestamp']); ?></td>
                            <td>
                                <?php if ($pvc_disabled != 'disabled'): ?>
                                <a class="scope_file_<?=$i+$start_num*1000?>" href="<?= $base_url; ?>/account/delete_scope_file/<?= $claim_id; ?>/<?= $row['roomname']; ?>" onclick='set_scroll_position("scope_file_<?=$i+$start_num*1000 ?>"); return confirm("Are you sure you want to delete this file?");'>[delete]</a>
                                <?php endif; ?>
                            </td>
                        </tr>
                        <?php
                    }
                    
                    // no results
                    if ($row_count == 0)
                    {
                        ?>
                        <tr>
                            <td coslpan=3>No files uploaded</td>
                        </tr>
                        <?php
                    }                               
                ?>                  
                </tbody>
                </table>
                </div>
            </div>
        </fieldset>
            
        

    </div>
    <?php

    $content = ob_get_contents();
    ob_end_clean();
    
    return $content;
}

function ncn_admin_invoice_data($claim_id, $data, $pvc_disabled='') {
    global $base_url;
    if (!isset($data['data_entered']))              { $data['data_entered'] = ''; }
    if (!isset($data['price_list']))                { $data['price_list'] = ''; }
    if (!isset($data['iop_number']))                { $data['iop_number'] = ''; }
    if (!isset($data['insurance_company']))         { $data['insurance_company'] = ''; }
    if (!isset($data['claim_number']))              { $data['claim_number'] = ''; }
    if (!isset($data['claim_adjuster']))            { $data['claim_adjuster'] = ''; }
    if (!isset($data['claim_adjuster_phone']))      { $data['claim_adjuster_phone'] = ''; }
    if (!isset($data['claim_adjuster_fax']))        { $data['claim_adjuster_fax'] = ''; }
    if (!isset($data['start_date']))                { $data['start_date'] = ''; }
    if (!isset($data['completion_date']))           { $data['completion_date'] = ''; }
?>
<script type="text/javascript">
jQuery(function() {
    ncn_admin_invoice_data_datepicker('#invoice_extended_data #start_date');
    ncn_admin_invoice_data_datepicker('#invoice_extended_data #completion_date');
});
function ncn_admin_invoice_data_datepicker(objStr) {
    jQuery( objStr ).datepicker({
        showOn: "button",
        buttonImage: "<?php echo $base_url."/".drupal_get_path('module', 'ncn_report')."/images/calendar.gif"; ?>",
        buttonImageOnly: true,
        dateFormat: 'mm/dd/yy',
    });
}
</script>
<fieldset class="">
    <legend>Claim Invoice Data</legend>
    <div>
    <form id="invoice_extended_data" method="post" style=" margin:0px; ">
        <input type="hidden" name="extend_data_function" value="extend_data" />
        <input type="hidden" name="current_scroll_position" class="current_scroll_position" value="" />
        <table style="border: solid 0px;">
        <tbody style="border:0px;">
            <tr class="even"><td><label for="claim_invoice_type">Claim Invoice Type: &nbsp;</label></td><td><?php echo draw_select_claim_invoice_type('claim_invoice_type', $data['claim_invoice_type']); ?></td></tr>
            
            <tr class="odd"><td><label for="company_fax_number">Company Fax Number: &nbsp;</label></td><td><input id="company_fax_number" name="company_fax_number" size="20" value="<?php echo $data['company_fax_number']; ?>" /></td></tr>

            <tr class="even"><td width="30%"><label for="data_entered">Data Entered: &nbsp;</label></td><td><input id="data_entered" name="data_entered" size="20" value="<?php echo $data['data_entered']; ?>" /></td></tr>
            <tr class="odd"><td width="30%"><label for="price_list">Price List: &nbsp;</label></td><td><input id="price_list" name="price_list" size="20" value="<?php echo $data['price_list']; ?>"  /></td></tr>
            <tr class="even"><td width="40%"><label for="iop_type">Insured's Other Phone: &nbsp;</label></td><td>
                <select id="iop_type" name="iop_type" >
                    <option value="Work" <?php if($data['iop_type']=="Work") {echo "selected";}?> >-Work-</option>
                    <option value="Mobile" <?php if($data['iop_type']=="Mobile") {echo "selected";}?> >-Mobile-</option>
                </select>
                <input id="iop_number" name="iop_number" size="12" value="<?php echo $data['iop_number']; ?>"  />
            </td></tr>
            <tr class="odd"><td><label for="type_of_loss">Type of Loss: &nbsp;</label></td><td>
                <select id="type_of_loss" name="type_of_loss" style="width: 100px;"  >
                    <option value="Water" <?php if($data['type_of_loss']=="Water") {echo "selected";}?>>- Water -</option>
                    <option value="Mold" <?php if($data['type_of_loss']=="Mold") {echo "selected";}?>>- Mold -</option>
                </select>
            </td></tr>
            <tr class="even"><td><label for="insurance_company">Insurance Company: &nbsp;</label></td><td><input id="insurance_company" name="insurance_company" size="20" value="<?php echo $data['insurance_company']; ?>"  /></td></tr>
            <tr class="odd"><td><label for="claim_number">Claim Number: &nbsp;</label></td><td><input id="claim_number" name="claim_number" size="20" value="<?php echo $data['claim_number']; ?>"  /></td></tr>
            
            <tr class="even" ><td><label for="claim_adjuster">Claim Adjuster: &nbsp;</label></td><td><input id="claim_adjuster" name="claim_adjuster" size="20" value="<?php echo $data['claim_adjuster']; ?>"  /></td></tr>
            <tr class="odd"><td><label for="claim_adjuster_phone">Claim Adjuster Phone: &nbsp;</label></td><td>
                <select id="cap_type" name="cap_type" >
                    <option value="Work" <?php if($data['cap_type']=="Work") {echo "selected";}?> >-Work-</option>
                    <option value="Mobile" <?php if($data['cap_type']=="Mobile") {echo "selected";}?> >-Mobile-</option>
                </select>
                <input id="claim_adjuster_phone" name="claim_adjuster_phone" size="20" value="<?php echo $data['claim_adjuster_phone']; ?>"  /></td></tr>
            <tr class="even"><td><label for="claim_adjuster_fax">Claim Adjuster Fax: &nbsp;</label></td><td><input id="claim_adjuster_fax" name="claim_adjuster_fax" size="20" value="<?php echo $data['claim_adjuster_fax']; ?>" /></td></tr>

            <tr class="odd"><td><label for="category">Category: &nbsp;</label></td><td>
                <select id="category" name="category" style="width: 100px;"  >
                    <option value="1" <?php if($data['category']=="1") {echo "selected";}?> >-1-</option>
                    <option value="2" <?php if($data['category']=="2") {echo "selected";}?> >-2-</option>
                    <option value="3" <?php if($data['category']=="3") {echo "selected";}?> >-3-</option>
                </select>
            </td></tr>
            <tr class="even"><td><label for="start_date">Start Date: &nbsp;</label></td><td><input id="start_date" name="start_date" size="20" value="<?php echo $data['start_date']; ?>" /></td></tr>
            <tr class="odd"><td><label for="completion_date">Completion Date: &nbsp;</label></td><td><input id="completion_date" name="completion_date" size="20" value="<?php echo $data['completion_date']; ?>" /></td></tr>
            <tr class="even"><td><label for="cause" style="vertical-align: top;">Cause:&nbsp;</label></td><td><textarea id="cause" name="cause" style="width: 90%; height: 100px;" ><?php echo isset($data['cause'])? $data['cause']:''; ?></textarea></td></tr>
            <?php if ($pvc_disabled!='disabled'): ?>
                <tr class="odd"><td colspan="2"><input type="submit" onclick="return on_set_scroll_position();" value="  Save  "/></td></tr>
            <?php endif; ?>
        </tbody>
        </table>
    </form>
    </div>
</fieldset>
<?php
}

function ncn_admin_draw_invoice_upload($claim_id, $type, $pvc_disabled='')
{
    GLOBAL $base_url;
    ob_start();
    $legend_title = "";
    switch ($type)
    {
        case "1":
            $legend_title = "Upload Final Invoice";
        break;

        case "2":
            $legend_title = "Upload Claim Documents";
        break;
        
        case "3":
            $legend_title = "Upload Service Contract";
        break;
        case "4":
            $legend_title = "Upload Certificate of Completion";
        break;
        case "5":
            $legend_title = "Upload Completed Invoice";
        break;
        
        case "10":
            $legend_title = "Upload CE Documents";
            break;
        case "11":
            $legend_title = "Upload ESX File";
            break;
        case "12":
            $legend_title = "Upload CE Invoice PDF File";
            break;

    }

?>
    <div>
        <fieldset class="">
            <legend class="">
                <?php echo $legend_title; ?>
            </legend>
            <div class="">
            <?php
                if ($pvc_disabled!='disabled') {
                    $ncn_admin_invoiceform = drupal_get_form('ncn_admin_invoiceform_'.$type);
                    print drupal_render($ncn_admin_invoiceform);
                }
            ?>
            
                <div id="invoice_revisions">
                <table>
                <tbody>
                    <thead class="tableHeader-processed">
                    <tr>
                        <th>Revision</th>
                        <th>File</th>
                        <th>Timestamp</th>
                        <th>Action</th>
                    </tr>
                    </thead>
                    
                    <?php
                    // get latest 5 invoice revisions
                    
                //  $query = "SELECT * FROM claims_invoices WHERE claim_id=".$claim_id." AND `live`=".$type." ORDER BY revision DESC LIMIT 0,5";
                    $result = db_query('SELECT * FROM {claims_invoices} WHERE claim_id=:a AND `live`= :b ORDER BY revision DESC,invoice_id DESC LIMIT 0,5',array(':a'=>$claim_id ,':b'=>$type));
                    $row_count = $result->rowCount();
                    
                    // run through invoice revisions
                    //for ($i=0; $i<$row_count; $i++)
                    $result_rec = $result->fetchAll();
                    $i = 0;
                    foreach($result as $row)
                    {
                        $row = (array)$row;
                        $id = uniqid();
                        
                        if ($row['revision'] == 0)  // don't want to show "revision #0")
                        {   $revision = ""; }
                        else
                        {   $revision = " Rev. #".$row['revision']; }

                        ?>              
                        <tr class="<?php if ($i%2) print "even"; else print "odd"; ?>">
                            <td><?= $revision; ?></td>
                            <td><img src="<?= $base_url; ?>/sites/all/modules/ncn_claims_manager/images/pdf_icon_16.gif" width="16" height="16" align="left" />&nbsp;<a href="<?= $base_url; ?>/account/serve_invoice_file/<?= $claim_id; ?>/<?= $row['live']; ?>/<?= $row['revision']; ?>/<?= $row['invoice_id']; ?>"><?= StripSlashes($row['filename']); ?></a></td>
                            <td><?= date("m/d/Y H:i:s", $row['timestamp']); ?></td>
                            <td><?php if ($pvc_disabled!='disabled'): ?>
                                <a class='invoice_file_<?=$id?>' href="<?= $base_url; ?>/account/delete_invoice_file/<?= $claim_id; ?>/<?= $row['live']; ?>/<?= $row['revision']; ?>/<?= $row['invoice_id']; ?>" onclick='set_scroll_position("invoice_file_<?=$id ?>"); return confirm("Are you sure you want to delete this file?");'>[delete]</a>
                                <?php endif; ?>
                            </td>
                        </tr>
                        <?php
                        $i++;
                    }
                    
                    // no results
                    if ($row_count == 0)
                    {
                        ?>
                        <tr>
                            <td coslpan=3>No files uploaded</td>
                        </tr>
                        <?php
                    }
                                
                    ?>
                </tbody>
                </table>
                </div>
            </div>
        </fieldset>
            
        

    </div>
    <?php

    $content = ob_get_contents();
    ob_end_clean();
    
    return $content;
}

//------------------------------------------------------------------------------
// upload invoice form
function ncn_admin_upload_invoice($form_state)
{
    $form = array();
    $form['#attributes'] = array('enctype' => "multipart/form-data");

    $form['invoice'] = array(
        '#type' => 'file',
        '#title' => t("New Claim Invoice"),
        '#tree' => FALSE,
        '#size' => 40,
    );

    $form['next'] = array('#type' => 'submit', '#weight' => 101, '#value' => t('Save Invoice'));
    return $form;
    
}

//------------------------------------------------------------------------------
// list the latest claims with sorting/filtering/etc 
function ncn_admin_list_claims()
{
    GLOBAL $user;
    GLOBAL $base_url;
    
    $tfunction = (isset($_REQUEST['tfunction']) ? $_REQUEST['tfunction'] : '');
    // Auto Assign Mode
    if ($tfunction == 'auto_assign_feature') {
        $aa_mode = ($_REQUEST['auto_assign_mode']==1)? TRUE:FALSE;
        if (ncn_ce_portal_set_mode($aa_mode)) {
            drupal_set_message(t('Auto Assign Mode: @mode', array( '@mode'=>($aa_mode)?'On':'Off' )));
        }
    } else if ($tfunction=='delete_multi_claims') {
    $sel_claims = $_REQUEST['sel_claims'];
    foreach ($sel_claims as $claim_id) {
      ncn_admin_delete_claim($claim_id);
    }
  }
    
  
    $filter = arg(4);
    $filter_user = arg(6);
    $filter_claim_workflow = arg(8);
    $filter_claim_id = arg(10);

  if (ncn_admin_is_user_DriRite($user->uid)) {
    $filter_user = 598; //Dustin Lawson (DriRite)
  }
  
    if (empty($filter_claim_workflow)) {
        $filter_claim_workflow = 'all';
    }
    
    if (empty($filter_claim_id)) {
        $filter_claim_id = 'all';
    }
    
    if (stristr($_SERVER['REQUEST_URI'], 'ncn_admin_pool'))
    {   $url_part = "ncn_admin_pool";   }
    else    
    {   $url_part = "ncn_admin";    }

    // ---- draw the filter controls ----
    // get claim status'
    $query = "SHOW COLUMNS FROM `claims` LIKE 'claim_status'";
    $result = db_query($query)->fetchAssoc();
    $row = (array)$result;
    
    $statuses = str_replace("'", "", $row['Type']);
    $statuses = str_replace("enum(", "", $statuses);
    $statuses = str_replace(")", "", $statuses);
    $statuses = str_replace("unpurchased,", "", $statuses);
    $statuses = explode(',', $statuses);
    array_unshift($statuses, "show all"); 
    
    // get active users
//  $query = "SELECT DISTINCT user_id FROM claims WHERE claim_status != 'unpurchased' AND deleted=0;";
    $result = db_query('SELECT DISTINCT user_id FROM claims WHERE claim_status != :a AND deleted=0',array(':a'=>'unpurchased'));
    $users = array();
    $result_rec = $result->fetchAll();
    foreach($result_rec as $row)
    {
        $row = (array)$row;
        if ( $row['user_id'] == 0 ) { continue; }
        $_user = user_load($row['user_id']);
        if ($_user) {
            $users[$row['user_id']] = $_user->profile_firstname." ".$_user->profile_lastname; 
            if ($_user->profile_legalname != '') {
                $users[$row['user_id']] .= (" (".$_user->profile_legalname.")");
            }
            if ($_user->profile_firstname == '' && $_user->profile_lastname == '' && $_user->profile_legalname == '') {
                 $users[$row['user_id']] = $_user->name;
            }
        }
    }
    
    asort($users);      // sort users by value (username)
    $users = array("show all" => "Show All", "show_members"=>"Show All Real Members")+$users;  


    ?>
    <div>
    <?php if (user_access('ncn auto-assign settings', $user)): ?>
    <fieldset>
        <legend>Auto Assign Claim to CE</legend>
        <form method="POST">
        <input type="hidden" name="tfunction" value="auto_assign_feature">
        <table>
        <tbody style="border:0;">
            <tr>
                <td style="width:50px;"><strong>Mode: </strong></td>
                <td style="width:50px;">
                    <?php $ce_auto_assign = variable_get('ce_auto_assign', FALSE); ?>
                    <select name="auto_assign_mode" id="auto_assign_mode">
                        <option value="0" <?php if (!$ce_auto_assign){echo "selected";} ?> >Off</option>
                        <option value="1" <?php if ( $ce_auto_assign){echo "selected";} ?>>On</option>
                    </select>
                </td>
                <td><input type="submit" value="Save"></td>
            </tr>
        </tbody>
        </table>
        </form>
    </fieldset>
    <?php endif; ?>
    
    <fieldset>
    <legend>Filter Claims</legend>
        <table>
        <tbody style="border:0;">
            <tr>
                <td style="width:150px;"><strong>Filter by Status</strong></td>
                <td>
                    <select name="status" id="filter_status_id">
                    <?php
                        foreach ($statuses as $status)
                        {
                            if ($status == $filter)
                            {   $checked = " selected ";    }
                            else
                            {   $checked = '';  }

                            ?>
                            <option value="<?= $status; ?>" <?= $checked; ?>><?= ucwords($status); ?></option>
                            <?php
                        }
                    ?>
                    </select>
                </td>
            </tr>
            <tr <?php if(ncn_admin_is_user_DriRite($user->uid)) { echo "style='display:none;'"; } ?>>
                <td><strong>Filter by User</strong></td>
                <td>
                    <select name="user" id="filter_user_id" >
                    <?php
                        foreach ($users as $user_id => $user_name)
                        {
                            if ($user_id == $filter_user)
                            {   $checked = " selected ";    }
                            else
                            {   $checked = '';  }

                            ?>
                            <option value="<?= $user_id; ?>" <?= $checked; ?>><?= $user_name ?></option>
                            <?php
                        }
                    ?>
                    </select>
                </td>
            </tr>
            <tr>
                <td><strong>Filter by Workflow</strong></td>
                <td>
                    <select id="filter_claim_workflow" name="claim_workflow">
                        <option value="all">Show All</option>
                    <?php
                    $arr_timer = get_claim_workflow_array();
                    foreach ($arr_timer as $key=>$val)
                    {
                        if ($key == $filter_claim_workflow)
                        {   $checked = " selected ";    }
                        else
                        {   $checked = '';  }
                    
                        ?>
                        <option value="<?= $key; ?>" <?= $checked; ?>><?= $val; ?></option>
                        <?php
                    }
                    
                    ?>
                    </select>
                </td>
            </tr>
            
            <tr>
                <td><strong>Filter by Claim ID</strong></td>
                <td><input type="text" class="form-text" value="" size="10" id="filter_claim_id" name="filter_claim_id" maxlength="10"></td>
            </tr>

            <tr>
                <td colspan=2><input type="button" value="Update" onclick="jump_status('<?= $base_url; ?>', '<?= $url_part; ?>');"></td>
            </tr>
        </tbody>
        </table>
    </fieldset>
    </div>
    <?php

    // ---- setup the query ----
    $query = "SELECT * FROM claims";
    $where = " WHERE claim_status != 'unpurchased' AND deleted=0";
    
    if ($filter != "show all")
    {   $where .= " AND claim_status='".$filter."' ";   }
    
    if ($filter_user == "show_members") {
        $where .= " AND user_id!=69";
    }
    else if (($filter_user != "show all") && ($filter == "show all"))
    {   $where .= " AND user_id='".$filter_user."' ";   }
    else
    if (($filter_user != "show all") && ($filter != "show all"))
    {   $where .= "AND user_id='".$filter_user."' ";    }
    
    if ($filter_claim_workflow != "all") {
        $where .= " AND workflow='".$filter_claim_workflow."' ";
    }
    
    if ($filter_claim_id != "all") {
        $where .= " AND claim_id='".$filter_claim_id."' ";
    }

    $query .= $where;
    $query .= " ORDER BY last_modified DESC";
    
    $query_total = db_query("SELECT COUNT(*) as tot FROM claims". $where)->fetchAssoc();
    $total_count = intval($query_total['tot']);

    // pagination
    $num_per_page = 50;
    $page = 0;
    if (isset($_GET['page'])) {
        $page = intval($_GET['page']);
    }
    $query .= " LIMIT ".($page*$num_per_page).", $num_per_page";
    
    $result = db_query($query);
    $row_count = $result->rowCount();
    if (user_access('ncn claim report')) {
        echo "<div style='float:left; margin-right: 20px;'><a href='$base_url/ncn/ncn_claim_report' target='_blank'>NCN Claim Report</a></div>"; 
    }
    if (user_access("ncn claim report for qa & ms")) {
        echo "<div style='float:left; margin-right: 20px;'><a href='$base_url/ncn/ncn_claim_report_qa_ms' target='_blank'>NCN Claim Report For QA&MS</a></div>"; 
    }
    if (user_access("ncn claim report for am")) {
        echo "<div style='float:left; margin-right: 20px;'><a href='$base_url/ncn/ncn_claim_report_am' target='_blank'>NCN Claim Report For Account Managers</a></div>"; 
    }
  
  echo "<div style='float:left; margin-right: 20px;'><a href='$base_url/download/claim_list'>Download Claim List</a></div>"; 
  
    echo '<div style="text-align: right">Number of Claims:&nbsp;&nbsp;'.$total_count.'</div>';
    // ---- list the claims ----
    
    $column_count = ($user->uid == 1)? 12: 11;
    $table_head = '
    <thead class="tableHeader-processed">
    <tr>
    <th></th>
        <th>Claim IDs</th>
        <th>Type</th>
        <th>Product</th>
        <th>Customer</th>
        <th>Zip Code</th>
        <th>User</th>
        <th>Created</th>
        <th>Modified</th>
        <th>Status</th>
        <th>Workflow</th>
        <th>Changes Logfile</th>'. (($user->uid == 1)? '<th></th>': '') .
    '</tr>
    </thead>

    <tbody>';

    $table_foot = '
    </tbody>
    </table>';
    
    // no results message
    if ($total_count == 0)
    {
        print "<table>";
        print $table_head;
        ?>
        <tr><td colspan="<?php echo $column_count; ?>">No results</td></tr>
        <?php
        print $table_foot;
    } else {
        echo "<form id='frm-check-mutli-claims' method='POST'>";
        echo '<table class="sticky-enabled tableSelect-processed sticky-table page_table">';
        echo $table_head;
        //for ($i=0; $i<$row_count; $i++)
        $result_rec = $result->fetchAll();
        $i = 0;
        foreach($result_rec as $row)
        {
            // get data
            $row = (array)$row;
            $claim_id = $row['claim_id'];
            $claim_type = $row['claim_type'];
      
            $claim_product = $row['claim_product']; 
            if ($claim_product=='Fire/Smoke Contents Cleaning') { $claim_product='Contents Cleaning'; }
            if ($claim_product=='Fire/Smoke Structure Cleaning'){ $claim_product='Structure Cleaning'; }
            if (ncn_cd($claim_id, 'expedite')) { $claim_product .= " (EXPEDITE)"; }
      
            $_user = user_load($row['user_id']);
            
            // check to see if this is owned (account manager is viewing)
            if (isset($GLOBALS['user']->roles[6]))
            {
                //* Account Manager 
            //  $query2 = "SELECT * FROM member_id_pool WHERE member_id=\"".$_user->profile_memberid."\";";
                $result2 = db_query('SELECT * FROM {member_id_pool} WHERE member_id=:a',array(':a'=>$_user->profile_memberid));
                $row_count2 = $result2->rowCount();
                
                if ($row_count2 == 0)
                {   $show_this = false; }
                else
                {
                    $row2 = $result2->fetchAssoc();
                    
                    
                //  $query2 = "SELECT parent FROM users_parent WHERE uid=".$row2['owner'];      // From Distributor, Get Account Manager
                    $result2 = db_query('SELECT parent FROM {users_parent} WHERE uid=:a',array(':a'=>$row2['owner']));
                    $row_count2 = $result2->rowCount();
                    $row2 = $result2->fetchAssoc();
                    
                    if ($row2['parent'] == $GLOBALS['user']->uid)
                    {   $show_this = true;      }
                    else    
                    {   $show_this = false;     }
                }
            }
            else
            {   $show_this = true;  }   
            
            // carry on
            if ($show_this == true || $show_this == false) // TEMP ** DISPLAY ALL CLAIMS
            {
            
                // carry on
            //  $query2 = "SELECT * FROM claims_log WHERE claim_id=".$claim_id.";";
                $result2 = db_query('SELECT * FROM {claims_log} WHERE claim_id=:a',array(':a'=>$claim_id));
                $entries_in_log = $result2->rowCount();
                
                
                // draw row
                ?>
                <tr class="<?php if ($i%2) print "odd"; else print "even"; ?>">
                    <td><?php if ($user->uid==1): ?><input type="checkbox" name="sel_claims[]" class='check-claim' value="<?php print $claim_id; ?>" /><?php endif; ?></td>
                    <td><a href="<?= $base_url; ?>/admin/config/<?= $url_part; ?>/viewclaim/<?= $claim_id; ?>"><?= $claim_id; ?></a>
                        <?php if (ncn_admin_get_claim_first_free_locked($claim_id) == 'LOCKED') { echo '(Locked)'; } ?></td>
                    <td><?= ucwords($claim_type); ?></td>
                    <td><?= ucwords($claim_product); ?></td>
                    <td><?= ncn_cd($claim_id, 'customer_name'); ?></td>
                    <td><?= ncn_cd($claim_id, 'insured_zip'); ?></td>
                    <td><?= $_user->profile_firstname.' '.$_user->profile_lastname ?> (<?= $_user->name; ?>)</td>
                    <td><?= date("m/d/Y", $row['created']); ?></td>
                    <td><?= date("m/d/Y", $row['last_modified']); ?></td>
                    <td><?= ucwords($row['claim_status']); ?></td>
                    <td><?php 
                        $timer_trigger = render_claim_timer($claim_id, 1);
                        $workflow = render_claim_workflow($claim_id);
                        echo $workflow;
                        if ($timer_trigger != '') {
                            echo "<div>($timer_trigger)<div>";  
                        }
                        ?>
                    </td>
                    <td><a href="<?= $base_url; ?>/admin/config/<?= $url_part; ?>/viewlog/<?= $claim_id; ?>"><?= $entries_in_log; ?> entries in log</a></td>
                    <?php if ($user->uid == 1) { ?>
                        <td><a href="<?= $base_url; ?>/admin/config/<?= $url_part; ?>/deleteclaim/<?= $claim_id; ?>?dest=<?php echo urlencode(request_uri()); ?>" onclick="return delete_claim(<?= $claim_id; ?>)">Delete</a></td>
                    <?php }?>
                </tr>
                <?php
            }           
            $i++;
        }
        echo $table_foot;
    if ($user->uid==1) {
      echo "<div class='claim-select-actions'>
        <input type='hidden' name='tfunction' id='tfunction_mutli_claims' value='' />
        <a href='#' onclick='return mutli_claims_action(\"delete_multi_claims\");'>Delete</a>
      </div>";
      echo "</form>";
      drupal_add_js("jQuery(document).ready(function() {
        jQuery('#frm-check-mutli-claims input.check-claim').each(function(index) {
          jQuery(this).bind('click', check_change_mutli_claim);
        });
        check_change_mutli_claim();
      });", 'inline');
    }
        $url = $base_url."/".drupal_get_path_alias($_GET["q"]);
        echo ncn_admin_table_pagniation($url, $total_count, $num_per_page, $page, 15);
    }
}

function ncn_admin_table_pagniation($url, $total_count, $num_per_page, $page, $limit=10) {
    $num_page = ceil($total_count/$num_per_page);
    if ($num_page==1) return '';
    
    $content = "<div class='item-list'>";
    $content .= "<ul class='pager'>";

    if ($page>0) {
        $content .= "<li class='pager-first'><a href='$url'>&laquo; first</a></li>";
    }
    if ($limit<$total_count) {
        $first = ($page-(int)($limit/2)); 
        if ($first<0) {$first = 0;}
        $last = $first+$limit;
        if ($last > $num_page ) {
            $last = $num_page;
            $first = $last - $limit;
            if ($first<0) {$first = 0;}
        }
        for ($index = $first; $index<$last; $index++) {
            if ($index == $page) {
                $content .= "<li class='pager-current'>".($index+1)."</li>";
            } else {
                $content .= "<li class='pager-item'><a href='$url?page=$index'>".($index+1)."</a></li>";
            }
        }
    } else {
        for ($index = 0; $index<$num_page; $index++) {
            if ($index == $page) {
                $content .= "<li class='pager-current'>".($index+1)."</li>";
            } else {
                $content .= "<li class='pager-item'><a href='$url?page=$index'>".($index+1)."</a></li>";
            }
        }
    }
    if ($page<($num_page-1)) {
        $content .= "<li class='pager-last'><a href='$url?page=".($num_page-1)."'>last &raquo;</a></li>";
    }
    $content .= "</ul>";
    $content .= "</div>";
    
    return $content;
}

function ncn_admin_delete_claim($claim_id) {

    //$query = "DELETE FROM claims  WHERE claim_id =$claim_id";
    $query = "UPDATE claims SET deleted=1 WHERE claim_id =$claim_id AND deleted=0";
    $result = db_query($query);
    if ($result) {
        $msg_type = 'status';
        $msg = t('Claim(!claim_id) deleted, successfully', array('!claim_id'=>$claim_id));
    } else {
        $msg_type = 'error';
        $msg = t('Failed to delete claim(!claim_id).', array('!claim_id'=>$claim_id));
    }
    
    drupal_set_message($msg, $msg_type);
    
    /*$query = "DELETE FROM claims_data  WHERE claim_id =$claim_id";
    $result = db_query($query);
    
    $query = "DELETE FROM claims_invoice  WHERE claim_id =$claim_id";
    $result = db_query($query);
    
    $query = "DELETE FROM claims_log WHERE claim_id =$claim_id";
    $result = db_query($query);
    
    $query = "DELETE FROM claims_scope WHERE claim_id =$claim_id";
    $result = db_query($query);
    
    $query = "DELETE FROM claim_img_captions WHERE claim_id =$claim_id";
    $result = db_query($query);
    */
    // track delete of claims
    $timestamp = date('U');
    $query = "INSERT INTO track_delete_claim VALUES( NULL, $claim_id, $timestamp )";
    $result = db_query($query);
    
  if (isset($_REQUEST['dest'])) {
      $dest = $_REQUEST['dest'];
      $dest = urldecode($dest);
      drupal_goto($dest);
  }
}

//------------------------------------------------------------------------------
function ncn_debug_message($message)
{
    if ($GLOBALS['ncn_debug'] == true)
    {
        drupal_set_message($message, 'error');
    }
}

//------------------------------------------------------------------------------
function ncn_admin_serve_user_document()
{
    $error = false;
    
    // check numeric
    if ((!is_numeric(arg(2))) || (!is_numeric(arg(3))))
    {   $error = true;      }
    else
    { 

    //  $query = "SELECT * FROM member_documents WHERE id=".arg(2)." AND uid=".arg(3);
        $result = db_query('SELECT * FROM {member_documents} WHERE id=:a  AND uid=:b',
            array(':a'=>arg(2),':b'=>arg(3)));
        $row_count = $result->rowCount();
        
        if ($row_count > 0)
        {
            // server the file
            $row = $result->fetchAssoc();
            
            header('Content-type: '.$row['filemime']);
            header('Content-Disposition: attachment; filename="'.$row['filename'].'"');
            readfile($row['filepath']);
            exit;
            
        }
        // not found
        else
        {   $error = true;  }
        
    }
    
    // check errors
    if ($error == true)
    {
        ?>
        <script type="text/javascript">
        history.go(-1);
        </script>
        <?php
        exit;
    }

}

//------------------------------------------------------------------------------
function ncn_admin_delete_user_document()
{

    if ((!is_numeric(arg(2))) || (!is_numeric(arg(3))))
    {   
        drupal_set_message('There was a problem with the url.', 'error');
        Header("Location:/admin");  
    }
    else
    {
        // delete the doc
//      $query = "DELETE FROM member_documents WHERE id=".arg(2)." AND uid=".arg(3);
        $result = db_query('DELETE FROM {member_documents} WHERE id=:a AND uid=:b',array(':a'=>arg(2),':b'=>arg(3)));

        // success
        drupal_set_message("User document deleted.", 'status');
    
        // bounce back to user edit page (as this si the only place you can delete user documents)
        Header("Location:/admin/user/user/edit_user/".arg(3));
    }
    
    exit;
    

}

function ncn_admin_delete_scope_file() {
GLOBAL $user;

    // get the user id for this claim
    $claim_id = arg(2);
    
    $user_id_sql = "";
    
    // get the "live"
    $roomname = arg(3);

    // get the revision
    
    
    //get current scroll position
    $scroll_position = $_GET['current_scroll_position'];
    
//  $query = "SELECT * FROM claims_scope WHERE `claim_id`=".$claim_id." AND `roomname`=\"".$roomname."\"";
    $result = db_query('SELECT * FROM {claims_scope} WHERE claim_id=:a AND roomname=:b',array(':a'=>$claim_id,':b'=>$roomname));
    if ($result->rowCount()>0) {
        $row = $result->fetchAssoc();
//      file_delete($row['filepath']);
        @unlink(drupal_realpath($row['filepath']));
        // get live/preview
    //  $query = "DELETE FROM claims_scope WHERE `claim_id`=".$claim_id." AND `roomname`=\"".$roomname."\"";
        $result = db_query('DELETE FROM {claims_scope} WHERE claim_id=:a AND roomname=:b',array(':a'=>$claim_id,':b'=>$roomname));
    }   
    // bounce back to claim
    
    header("Location:".base_path()."/admin/config/ncn_admin/viewclaim/".$claim_id."?current_scroll_position=".$scroll_position);
    
    exit;
}

function ncn_admin_serve_scope_file()
{
GLOBAL $user;

    // get the user id for this claim
    $claim_id = arg(2);
    
    // get the "live"
    $roomname = arg(3);
//  $query = "SELECT * FROM claims_scope WHERE `claim_id`=".$claim_id." AND `roomname`=\"".$roomname."\"";
    $result = db_query('SELECT * FROM {claims_scope} WHERE claim_id=:a AND roomname=:b',array(':a'=>$claim_id,':b'=>$roomname));
    if ($result->rowCount() == 0) {
        return("Access denied to scope file, or file not found.");
    }
    
    // get data
    $row = $result->fetchAssoc();
    
    // serve file
    header('Content-Type: '.$row['filemime']);
    header('Content-Disposition: attachment;filename="'.StripSlashes($row['filename']).'"');
    header('Cache-Control: max-age=0');

    readfile($row['filepath']); 

    exit;
}

function get_claim_file($claim_id, $live) {
//  $query = "SELECT * FROM claims_invoices WHERE claim_id=$claim_id AND live=$live ORDER BY timestamp DESC";
    $result = db_query('SELECT * FROM {claims_invoices} WHERE claim_id=:a AND live=:b ORDER BY timestamp DESC',
    array(':a'=>$claim_id,':b'=>$live));
    if ($result && $result->rowCount()>0)
    {
        $row = $result->fetchAssoc();
        return $row;
    }
    return array(); 
}

function get_claim_scope_file($claim_id) {
//  $query = "SELECT * FROM claims_scope WHERE claim_id=$claim_id ORDER BY timestamp DESC";
    $result = db_query('SELECT * FROM {claims_scope} WHERE claim_id=:a ORDER BY timestamp DESC',array(':a'=>$claim_id ));
    if ($result)
    {   
        $row_count = $result->rowCount();
        $files = array();
        for ($i=0; $i<$row_count; $i++) {
            $row = $result->fetchAssoc();
            $files[$row['roomname']] = $row;
        }
        return $files;
    }
    return array(); 
}

function _add_pdf_invoice($file, $claim_id) {
    
    $live = 1;
    // get last revision
//  $query = "SELECT revision FROM claims_invoices WHERE claim_id=".$claim_id." AND `live`=".$live." ORDER BY revision DESC LIMIt 0,1";
    $result = db_query('SELECT revision FROM {claims_invoices} WHERE claim_id=:a AND live=:b ORDER BY revision DESC LIMIt 0,1',
    array(':a'=>$claim_id,':b'=>$live));
    $row_count = $result->rowCount();
    
    if ($row_count == 0)
    {   $revision = 0;  }
    else
    {
        $row = $result->fetchAssoc();
        $revision = $row['revision']+1;
    }
    
    // insert new data
//  $query = "INSERT INTO claims_invoices VALUES(NULL, ".$claim_id.", ".$revision.", \"".AddSlashes($file['filename'])."\", \"".AddSlashes($file['filepath'])."\", \"".AddSlashes($file['filemime'])."\", ".date('U').", ".$live.");";
    $result = db_query('INSERT INTO {claims_invoices} VALUES(NULL,:a,:b,:c,:d,:e,:f,:g)',
        array(':a'=>$claim_id,':b'=>$revision,':c'=>$file['filename'],':d'=>$file['filepath'],':e'=>$file['filemime'],
            ':f'=>date('U'),':g'=>$live));
    
    // add entry to logfile
    if ($live == 1)
    {   $log_message = ncn_amin_get_user_role_and_name()." created new file: ".$file->filename.", revision #".$revision;    }
    else
    {   $log_message = ncn_amin_get_user_role_and_name()." created new file: ".$file->filename.", revision #".$revision;    }
    
    ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);
}
/**
Generate Final Invoice
*/
function generate_final_invoice($claim_id) {
    $final_invoice_name = "";

    $dir_url = variable_get('file_directory_path', 'sites/default/files') . "/invoices/$claim_id/";
    
    if (!is_dir($dir_url)) {
        mkdir($dir_url, 0755);
    }
    
    $file3_info = get_claim_file($claim_id, 3);     // Service Contract
    $file4_info = get_claim_file($claim_id, 4);     // Certificate of Completion
    $file5_info = get_claim_file($claim_id, 5);     // Completed Invoice
        
    $base_abs_path = $_SERVER['DOCUMENT_ROOT'];
    $foption = "";
    $error = false;
    try{
        // 1st pdf
        $first_pdf_url = _get_first_pdf($claim_id, $dir_url);
        if ($first_pdf_url == '[no-coversheet]') {
            // skip first pdf(cover sheet)
        }   else if ($first_pdf_url) {
            $foption .= " -f $base_abs_path/$first_pdf_url";
        } else {
            $error = true;
        }
        // && $_SERVER['REMOTE_ADDR']!='103.240.34.101'
        if (!$error) {
            // 2th pdf  (Completed Invoice)
            if (!empty($file5_info)) {
                $foption .= " -f $base_abs_path/".$file5_info['filepath'];
            }
            // 3rd pdf
            if (!empty($file3_info) || !empty($file4_info)) {
                $third_pdf_url = _get_third_pdf($file3_info, $file4_info, $dir_url);
                if (!empty($third_pdf_url)) {
                    $foption .= " -f $base_abs_path/$third_pdf_url";
                }
            }
            /*if (!empty($file3_info)) {
                $foption .= " -f $base_abs_path/".$file3_info['filepath'];
            }
            // 4th pdf
            if (!empty($file4_info)) {
                $foption .= " -f $base_abs_path/".$file4_info['filepath'];
            }*/
            
            // Additional Documents
            $additional_file_removed = TRUE;
            $pdf_file_additional_pdfs = _get_additional_docs_pdf($claim_id, $dir_url, $additional_file_removed);
            if ($pdf_file_additional_pdfs) {
                $foption .= " -f $base_abs_path/$pdf_file_additional_pdfs";
            }
            
            // 5th pdf
            $scope_pdf_count = 0;
            $pdf_file_url_pattern = _get_scope_pdf($claim_id, $dir_url, $scope_pdf_count);
            if ($scope_pdf_count) {
                for ($index = 0; $index<$scope_pdf_count; $index+=1) {
                    $pdf_file_url = $pdf_file_url_pattern.$index.".pdf";
                    $foption .= " -f $base_abs_path/$pdf_file_url";
                }
            }
        }
    } catch(Exception $ex) {
        drupal_set_message($ex->getMessage(), 'error');
        $error = true;
    }
    
    if (!$error) {
        
        $final_invoice_filename = 'invoice_'.date('U').'.pdf';
        $final_invoice_name = $dir_url.$final_invoice_filename;
        $out_option = " -o $base_abs_path/$final_invoice_name";
        
        //drupal_set_message($foption);
        
        /*if($_SERVER['REMOTE_ADDR']=="103.240.34.101"){
            echo $foption;
        }*/
        
                
        if ($foption != "") {
            //$command = "java -jar C:/pdfsam/lib/pdfsam-console-2.3.1e.jar $foption $out_option concat";
            $command = "java -jar ../pdfsam/lib/pdfsam-console-2.3.1e.jar $foption $out_option concat";
            
            $output = shell_exec($command);
            
            if (!is_file($final_invoice_name)) {
                drupal_set_message('Failed to create an invoice.', 'error');
                //drupal_set_message('You need to upload essential files to create an invoice.', 'error');
                $error = true;
            } else {
            
                if (ncn_admin_is_claim_first_free($claim_id)) {
                    // generate locked pdf // 2011-08-02
                    //$command = "java -jar C:/pdfwatermark/ncn_pdf_watermark.jar $base_abs_path/$final_invoice_name";
                    $command = "java -jar ../pdfwatermark/ncn_pdf_watermark.jar $base_abs_path/$final_invoice_name";

                    $output = shell_exec($command);
                    $final_locked_invoice_name = ncn_admin_get_locked_invoice_filename($final_invoice_name);
                    
                    if (!is_file($final_locked_invoice_name)) {
                        drupal_set_message('Failed to create an locked invoice.', 'error');
                    }
                }
            }
        }
        else{
            $error = true;
        }
    }
    
    // clear temporary files
    if ($first_pdf_url && $first_pdf_url!='[no-coversheet]') {  
        $first_pdf_file = new stdClass();
        $first_pdf_file->filepath = $pdf_file_url;
        $first_pdf_file->filename = basename($pdf_file_url);
        $first_pdf_file->uri = str_replace("sites/default/files/","public://",$pdf_file_url);
        //file_delete($first_pdf_url);
        file_delete($first_pdf_file);
    }
    
    if ($third_pdf_url) {   
        $third_pdf_file = new stdClass();
        $third_pdf_file->uri = str_replace("sites/default/files/","public://",$third_pdf_url);
        //file_delete($third_pdf_url);
        file_delete($third_pdf_file);
    }   
    
    if ($additional_file_removed && $pdf_file_additional_pdfs ) {
        $additional_pdf_file = new stdClass();
        $additional_pdf_file->uri = str_replace("sites/default/files/","public://",$pdf_file_additional_pdfs);
        //file_delete($pdf_file_additional_pdfs);
        file_delete($additional_pdf_file);
    }
    
    if ($scope_pdf_count) {
        for ($index = 0; $index<$scope_pdf_count; $index+=1) {
            $pdf_file_url = $pdf_file_url_pattern.$index.".pdf";
            $scope_pdf_file = new stdClass();
            $scope_pdf_file->uri = str_replace("sites/default/files/","public://",$pdf_file_url);
            //file_delete($pdf_file_url);
            file_delete($scope_pdf_file);
        }
    }
    
    if ($error) { return; }
    
    drupal_set_message("Final Invoice Created, Successfully.");
    drupal_set_message("File : $final_invoice_name");
    if (is_file($final_locked_invoice_name)) {
        drupal_set_message("Locked Invoice File : $final_locked_invoice_name");
    }
    
    $file_info = array(
        'filename' => $final_invoice_filename,
        'filepath' => $final_invoice_name,
        'filemime' => 'application/pdf'
    );
    _add_pdf_invoice($file_info, $claim_id);
}

function ncn_admin_get_locked_invoice_filename($fname) {
    return substr($fname, 0, -4)."_locked.pdf";
}

function _get_format_phone_string($str) {
    if (trim($str) == "") {
        return '';
    }
    $str = str_replace('-', '', $str);
    $str1 = substr($str, 0, 3);
    $str2 = substr($str, 3, 3);
    $str3 = substr($str, 6);
    $str = "$str1-$str2-$str3";
    
    return $str;
}

function _get_format_tax_id_string($str) {
    if (trim($str) == "") {
        return '';
    }
    $str = str_replace('-', '', $str);
    $str1 = substr($str, 0, 2);
    $str2 = substr($str, 2);
    $str = "$str1-$str2";
    
    return $str;
}

function _get_first_pdf($claim_id, $dir_url) {
    
    $pdf_file_url = $dir_url.time()."_first.pdf";
    //$template_first_page = "invoice_cover_sheet.doc";
    
    //get essential data
    $invoice_data = get_extended_data($claim_id);   
    $claim_invoice_type = $invoice_data['claim_invoice_type'];

    if ( strpos($claim_invoice_type , "*no*") !== false ) {
        return '[no-coversheet]';
    }
    
    $claim_data = get_claim_data($claim_id);
    $_user = user_load($claim_data['user_id']);
    $data = array();
    
    $data['company_name']           = $_user->profile_legalname;    //'ABC Restoration, Inc';
    $data['tax_id_number']          = $_user->profile_taxid;        //'12-3456789';
    
    $data['company_address1']       = $_user->profile_address;      //'123 Company Lane';
    $data['company_address2']       = $_user->profile_city.', '.$_user->profile_state.' '.$_user->profile_zip;      //  'Dallas, TX. 75201';
    $data['company_office_phone']   = _get_format_phone_string($_user->profile_officephone);    //'555-555-1234';
    
    $data['client_name']            = ncn_cd($claim_id, 'customer_name');   //'Robert Smith';
    $data['property1']              = ncn_cd($claim_id, 'insured_address'); //'123 Company Lane';
    $data['property2']              = ncn_cd($claim_id, 'insured_city').', '.ncn_cd($claim_id, 'insured_state').' '.ncn_cd($claim_id, 'insured_zip');       //'Dallas, TX. 75201';
    $data['home_phone']             = _get_format_phone_string(ncn_cd($claim_id, 'insured_phone_number'));
    
    $data['date_of_loss']           = ncn_cd($claim_id, 'date_of_loss');    //'12/07/10';
    
    $data = array_merge($invoice_data, $data);
    
    $logo = ncn_admin_get_member_logo_info($_user->profile_memberid);
    $b_logo = true;
    if (empty($logo)) { $b_logo = false; }
    $result = ncn_admin_make_cover_sheet($pdf_file_url, $data, $b_logo);

    if(is_file($pdf_file_url)) {
        
        /********* add Member Logo into coversheet page ************/
        if (empty($logo)) {
            return $pdf_file_url;
        }
        $file = new stdClass();
        $file->filepath = $pdf_file_url;
        $file->filename = basename($pdf_file_url);
        $file->filemime = "application/pdf";        
        $file->uri = str_replace("sites/default/files/","public://",$file->filepath);
        
        $logo_params = array(
                'x' => 100,
                'y' => 50,
                'width' => 350,
                'height' => 150,
                'valign' => 'bottom',
            );
            
        $final_cv_pdf = generate_pdf_with_member_logo($_user->profile_memberid, $file, $logo_params);

        file_delete($pdf_file_url);
        if ($final_cv_pdf) {
            return $final_cv_pdf;
        } else {
            drupal_set_message('Failed to make a cover sheet with logo.', 'error');
        }
    } else if ($result !== FALSE) {
        drupal_set_message('Failed to make a cover sheet.', 'error');
    }
    
    
    return '';
    
}

function _get_third_pdf($file3, $file4, $dir_url) {
    $both_image = 0;
    if (!empty($file3['filepath']) && is_file($file3['filepath']) ) {
        if ( strtolower(substr($file3['filepath'], -4)) == ".jpg" ) {
            $both_image += 3;
        }
    }
    if (!empty($file4['filepath']) && is_file($file4['filepath']) ) {
        if ( strtolower(substr($file4['filepath'], -4)) == ".jpg" ) {
            $both_image += 4;
        }
    }
    if ( $both_image==0 ) {
        return '';
    }
    
    $pdf_file_url = $dir_url.time()."_third.pdf";
    
    require_once('sites/all/libraries/PDFMerger/fpdf/pdf.php');
    $pdf=new PDF();
    $pdf->AddPage();
    if ($both_image == 7) {
        $pdf->Image($file3['filepath'], 0, 20, 120);
        $pdf->Image($file4['filepath'], 120, 20, 80);
    } else if ($both_image == 3) {
        $pdf->Image($file3['filepath'], 0, 20, 200);
    } else if ($both_image == 4) {
        $pdf->Image($file4['filepath'], 0, 20, 200);
    }
    
    $pdf->Output($pdf_file_url, 'F');
    
    if(is_file($pdf_file_url)) {
        return $pdf_file_url;
    } else {
        drupal_set_message('Failed to make a \"Service Contact & Certificate of Completion" page.', 'error');
    }
    return '';
}

function _get_scope_pdf($claim_id, $dir_url, &$pdf_count) {
    $scope_file = get_claim_scope_file($claim_id);
    
//  $query = "SELECT * FROM claims_data WHERE claim_id=".$claim_id." AND `key`='scope'";
    $result = db_query('SELECT * FROM {claims_data} WHERE claim_id=:a AND `key`=:b',array(':a'=>$claim_id,':b'=>scope));
    $row_count = $result->rowCount();
    
    if ($row_count == 0) { return ''; }
    
    // get the data
    $row = $result->fetchAssoc();
    $data = unserialize($row['val']);
    
    $customer_name = ncn_cd($claim_id, 'customer_name');
    
    require_once('sites/all/libraries/PDFMerger/fpdf/pdf.php');
    
    $pdf=new PDF();
  
    $pdf_count = 0;
    $room_count = 0;
    
    foreach ($data as $roomname => $roomdata)
    {
        if ($roomname != "type")
        {
            $room_count += 1;
        }
    }
    
    $scope_per_pdf = 5;
    $pdf_count = 0;
    $page_count = 0;
    $pdf_file_url_pattern = $dir_url.time()."_scope_";
    $i = 0;
    
    // search first room and render
    if (!ncn_admin_is_photo_first_room_deleted($claim_id)) {
    foreach ($data as $roomname => $roomdata)
    {
        if ($roomname != "type")
        {
            $default_room_name = ncn_admin_claim_get_default_room_name($claim_id);
            if ($roomname == $default_room_name) {
                $first_flag = true;
            }
            
            if ($first_flag) {
                if ($i % $scope_per_pdf == 0 && $page_count) {
                    if ($pdf) {
                        $pdf_file_url = $pdf_file_url_pattern.$pdf_count.".pdf";
                        $pdf->Output($pdf_file_url, 'F');
                        
                        $pdf_count += 1;
                    }
                    $pdf=new PDF();
                    $page_count = 0;
                }
            
        if (!ncn_admin_invoice_check_default_room_data_exist($claim_id, $roomdata)) { break; }
                $pdf->AddPage();    
                $page_count++;
        
                $roomdata['captions'] = _get_image_captions($claim_id, $roomname, 3);
                $pdf->Header_Invoice($customer_name);           
                $pdf->Photo_Table_Invoice($roomdata);
                
                $i += 1;
                break;
            }
        }
    }
    }
    
    // other rooms
    foreach ($data as $roomname => $roomdata)
    {
        if ($roomname != "type")
        {
            $first_flag = false;
            $default_room_name = ncn_admin_claim_get_default_room_name($claim_id);
            if ($roomname == $default_room_name) {
                $first_flag = true;
            }
            
            if(!$first_flag) {
                if ($i % $scope_per_pdf == 0 && $page_count) {
                    if ($pdf) {
                        $pdf_file_url = $pdf_file_url_pattern.$pdf_count.".pdf";
                        $pdf->Output($pdf_file_url, 'F');
                        
                        $pdf_count += 1;
                    }
                    $pdf=new PDF();
                    $page_count = 0;
                }
            
                if (!ncn_admin_invoice_check_room_data_exist($claim_id, $roomname, $roomdata)) { continue; }
                $pdf->AddPage();    
                $page_count++;
        
                $roomdata['captions'] = _get_image_captions($claim_id, $roomname, 6);
                $pdf->Header_Invoice($customer_name." - ".$roomname);           
                $top2 = $pdf->RoomPhoto_Table_Invoice($roomdata);
                if (isset($scope_file[$roomname])) {
                    $pdf->draw_scope_file($scope_file[$roomname], $top2);
                } else {
                    /** Dry Log ScopeSheet**/
                    $ss_data = array();
                    $ss_eit = ncn_admin_get_ss_eit_list($claim_id, $roomname);
                    $ss_smr = ncn_admin_get_ss_smr_list($claim_id, $roomname); 
                    $ss_ep  = ncn_admin_get_ss_ep_list($claim_id, $roomname);
                    $ss_smr_standard    = ncn_admin_get_ss_structural_moisture_readings($claim_id, $roomname);
                    ncn_admin_array_trim($ss_smr_standard);
                    
                    if (!empty($ss_eit)) { $ss_data['eit'] = $ss_eit; }
                    if (!empty($ss_smr)) { $ss_data['smr'] = $ss_smr; }
                    if (!empty($ss_ep )) { $ss_data['ep']  = ncn_admin_ss_ep_print_format_data($ss_ep);  }
                    if (!empty($ss_smr_standard)) { $ss_data['smr_standard'] = $ss_smr_standard; }
                    
                    if (!empty($ss_data)) {
                        $pdf->SetY($top2);
                        $pdf->InsertScopesheetData($ss_data);
                    }
                }
                
                $i += 1;
            }
        }
    }
    
    
    if ($pdf && $page_count) {
        $pdf_file_url = $pdf_file_url_pattern.$pdf_count.".pdf";
        $pdf->Output($pdf_file_url, 'F');       
        $pdf_count += 1;
    }
    
    //$scope_link = '<a href="http://www.netclaimsnow.com/'.$pdf_file_url.'" target="_blank">Scopesheet PDF</a>';
    //drupal_set_message(t($scope_link), 'status');
    return $pdf_file_url_pattern;
}

function ncn_admin_invoice_check_default_room_data_exist($claim_id, $roomdata) {
  $ret = FALSE;
  for ($i=0; $i<3; $i++) {
    $img_index = 'image'.$i;
    if (isset($roomdata[$img_index])&&is_file($roomdata[$img_index]['path'])) {
      $ret = TRUE; break;
    }
  }
  return $ret;
}
function ncn_admin_invoice_check_room_data_exist($claim_id, $roomname, $roomdata) {
    //* photo album//
    $ret = FALSE;
    for ($i=0; $i<6; $i++) {
        $img_index = 'image'.$i;
        if (isset($roomdata[$img_index])&&is_file($roomdata[$img_index]['path'])) {
            $ret = TRUE; break;
        }
    }
    
    //ScopeSheet
    if (!$ret) {
        $scope_file = get_claim_scope_file($claim_id);
        if (isset($scope_file[$roomname])) {
            $ret = TRUE;
        } else {
            $ss_data = array();
            $ss_eit = ncn_admin_get_ss_eit_list($claim_id, $roomname);
            $ss_smr = ncn_admin_get_ss_smr_list($claim_id, $roomname); 
            $ss_ep  = ncn_admin_get_ss_ep_list($claim_id, $roomname);
            $ss_smr_standard    = ncn_admin_get_ss_structural_moisture_readings($claim_id, $roomname);
            ncn_admin_array_trim($ss_smr_standard);
            
            if (!empty($ss_eit)) { $ss_data['eit'] = $ss_eit; }
            if (!empty($ss_smr)) { $ss_data['smr'] = $ss_smr; }
            if (!empty($ss_ep )) { $ss_data['ep']  = ncn_admin_ss_ep_print_format_data($ss_ep);  }
            if (!empty($ss_smr_standard)) { $ss_data['smr_standard'] = $ss_smr_standard; }
            
            if (!empty($ss_data)) {
                $ret = TRUE;
            }
        }
    }
    return $ret;
}

function ncn_admin_array_trim($data){
    foreach ($data as $key=>$item) {
        if (empty($item)) {
            unset($data[$key]);
        } else if (is_array($item)) {
            ncn_admin_array_trim($data[$key]);
        }
    }
}

function save_extended_data($claim_id) {
    $data = array();
    $data['claim_invoice_type'] = $_POST['claim_invoice_type'];
    $data['company_fax_number'] = $_POST['company_fax_number'];
    $data['data_entered']       = $_POST['data_entered'];
    $data['price_list']         = $_POST['price_list'];
    $data['iop_type']           = $_POST['iop_type'];
    $data['iop_number']         = $_POST['iop_number'];
    $data['type_of_loss']       = $_POST['type_of_loss'];
    $data['insurance_company']  = $_POST['insurance_company'];
    $data['claim_number']       = $_POST['claim_number'];
    $data['claim_adjuster']     = $_POST['claim_adjuster'];
    $data['cap_type']           = $_POST['cap_type'];
    $data['claim_adjuster_phone']= $_POST['claim_adjuster_phone'];
    $data['claim_adjuster_fax'] = $_POST['claim_adjuster_fax'];
    $data['category']           = $_POST['category'];
    $data['start_date']         = $_POST['start_date'];
    $data['completion_date']    = $_POST['completion_date'];
    $data['cause']              = $_POST['cause'];
    
    $query = "DELETE FROM invoice_extended_data WHERE claim_id = $claim_id";
    $result = db_query($query); 

    foreach( $data as $fname=>$fval ) {
        if ($fval != '') {
            /*$query = "INSERT INTO invoice_extended_data VALUES(NULL, $claim_id, '$fname', '$fval')";
            $result = db_query($query);*/
            save_extended_data_item($claim_id, $fname, trim((string)$fval));
        }
    }
    drupal_set_message("Save invoice data, successfully.");
}

function save_extended_data_item($claim_id, $key, $value) {
    $result = db_query('SELECT * FROM {invoice_extended_data} WHERE claim_id=:a AND fname=:b',array(':a'=>$claim_id,':b'=>$key));
//  if ($result) && $row = db_fetch_array($result)) {
//      $result = db_query("UPDATE {invoice_extended_data} SET fvalue='%s' WHERE data_id=%d", $value, $row['data_id']);
//  }
    if($result->rowCount()>0)
    {
        foreach($result as $row)
        {
            $row = (array)$row;
            if($row)
            {
                $result = db_query('UPDATE {invoice_extended_data} SET fvalue=:a WHERE data_id=:b',array(':a'=>$value,':b'=>$row['data_id']));
            }
        }

    }
    else
    {
        $result = db_query('INSERT INTO {invoice_extended_data}(claim_id, fname, fvalue) VALUES(:a,:b,:c)', array(':a'=>$claim_id,':b'=>$key,':c'=>$value));
    }
}

function get_extended_data($claim_id) {
    $data = array();
//  $query = "SELECT * FROM invoice_extended_data WHERE claim_id = $claim_id";
    $result = db_query('SELECT * FROM {invoice_extended_data} WHERE claim_id=:a',array(':a'=>$claim_id));
    /*$row_count = $result->rowCount();
    for($i=0; $i<$row_count; $i++) */
    foreach($result as $row)
    {
        $row = (array)$row;
        $data[$row['fname']] = $row['fvalue'];
    }
    
    //* auto-populated
    if (!isset($data['company_fax_number']) || trim($data['company_fax_number']) == '') {
        $_user = ncn_admin_get_user_from_claim_id($claim_id);
        if ($_user) {
            $data['company_fax_number'] = $_user->profile_company_fax;
        }
    }
    return $data;
}

function save_image_captions($claim_id) {
    $roomname   = $_POST['roomname'];
    $img_count  = $_POST['image_count'];
    
    for ($i=0; $i<$img_count; $i++) {
        $img_index = 'image'.$i;
        $data[$i] = $_POST[$img_index];
    }
    
    if (_save_image_captions($claim_id, $roomname, $data)) {
        drupal_set_message("Image captions updated, successfully. (room:$roomname)");
    $log_message = ncn_amin_get_user_role_and_name()." updated Image Captions . (room:$roomname)";
    ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);
    } else {
        drupal_set_message("Failed to update image captions. (room:$roomname)", 'error');
    }
    
}

// Page Handler (admin/user/user/unactivated_member_list)
function ncn_admin_unactivated_member_list() {
GLOBAL $base_url;
    if (arg(4)== 'member_delete') {
        ncn_admin_unactivated_member_delete(arg(5));
    }
    drupal_add_js(drupal_get_path('module', 'ncn_admin').'/ncn_ admin.js');
    
    $header = array(
        array('data' => t('Member ID')),
        array('data' => t('Name')),
        array('data' => t('Status')), 
        array('data' => t('Company')),
        array('data' => t('Type')),
        array('data' => t('Contact Email')),
        array('data' => t('SignUp Date')),
        array('data' => t('Owner')),
        array('data' => t('Operation'))
    );
    
//  $query = "SELECT * FROM member_id_pool WHERE used=0 ORDER BY id DESC";
    $result = db_select('member_id_pool', 'n')
        ->fields('n')
        ->condition('used', 0,'=')
        ->orderBy('id', 'DESC')
        ->execute();
//  $result = pager_query($query, 50);
    //while ($row = db_fetch_array($result))
    foreach($result as $row)
    {
        $row = (array)$row;
        $member_type = "Gold";
        if ($row['member_type']==0) {
            $member_type = "Gold";
        }   else if ($row['member_type']==1) {
            $member_type = "Silver";
        } else if ($row['member_type']==2) {
            $member_type = "Gold Lite";
        } else if ($row['member_type']==3) {
            $member_type = "Coach on Call";
        } else if ($row['member_type']==4) {
            $member_type = "Gold Coach";
        } else if ($row['member_type']==5) {
            $member_type = "CSI Member";
        }
        
        if (ncn_admin_is_gold_member_demo($row['member_id'])) {
            $member_type .= " (Demo)";
        } else if (ncn_admin_is_member_first_free($row['member_id'])) {
            $member_type .= " (First Free)";
        }
        // is account free?
        $free_extra = '';
        if (is_member($row['member_id']))
        {   
            $result = db_query('SELECT customerProfileId FROM {member_cim} WHERE member_id=:s',array(':s'=>$row['member_id']))->fetchField();
            if (intval($result) == 0) {
                $free_extra = ' (FREE)';    
            }
        }
        $status = 'unactivated';
        if ($row['status'] == 0) {
            $status = 'paused';
        }
        
        $_owner = user_load($row['owner']);
        $rows[] = array('data' => array(
            // Cells
            $row['member_id'],
            $row['first_name'].' '.$row['last_name'] . $free_extra,
            $status, 
            $row['legalname'], 
            $member_type, 
            $row['contactemail'],
            date('d M Y', $row['create']),
            $_owner->profile_firstname.' '.$_owner->profile_lastname,
            "<a href='$base_url/admin/config/ncn_create_user/unactivated_member_list/edit/".$row['member_id']."'>Edit</a>&nbsp;&nbsp;".
//"<a href='$base_url/admin/user/user/unactivated_member_list/member_delete/".$row['member_id']."' onclick='return on_click_ncn_admin_una_member_delete();'>Delete</a>&nbsp;&nbsp;"
            "<a href='$base_url/admin/config/ncn_create_user/unactivated_member_list/member_delete/".$row['member_id']."' onclick='return on_click_ncn_admin_una_member_delete();'>Delete</a>&nbsp;&nbsp;"

        ),
        );
    }
    if (!$rows) {
        $rows[] = array(array('data' => t("There isn't unactivated member."), 'colspan' => 9));
    }
    $output = '';
    $output .= theme('table',array("header"=>$header,"rows"=>$rows, 'attributes'=>array('id' => 'una_member_list')));
    $output .= theme('pager');
    echo $output;
}

function ncn_admin_unactivated_member_delete($member_id) {
    $result = db_delete('member_id_pool')
        ->condition('member_id', $member_id)
        ->condition('used', 0,'=')
        ->execute();
    //    db_query("DELETE FROM {member_id_pool} WHERE member_id=':s' AND used=0",array(":s"=>$member_id));
    if ($result) {
        db_delete('member_cim')
            ->condition('member_id', $member_id)
            ->execute();
        db_delete('member_first_free')
            ->condition('member_id', $member_id)
            ->execute();
        db_delete('member_gold_demo')
            ->condition('member_id', $member_id)
            ->execute();

    //    db_query( "DELETE FROM {member_cim} WHERE member_id=':s'",array(":s"=>$member_id));
    //  db_query( "DELETE FROM {member_first_free} WHERE member_id=':s'",array(":s"=>$member_id ));
    //  db_query( "DELETE FROM {member_gold_demo} WHERE member_id=':s'",array(":s"=>$member_id));

        drupal_set_message( t('Member(#!member_id) deleted, successfully.', array('!member_id'=>$member_id)) );
    } else {
        drupal_set_message( t('Failed to delete member(#!member_id).', array('!member_id'=>$member_id)) );
    }

    drupal_goto('admin/config/ncn_create_user/unactivated_member_list');
}

// Done in ncn_create_user - function unactivated_member_list_edit()
// Unused this function.
// function ncn_admin_una_member_edit($member_id) {
// }

function track_delete_claims_page() {
global $base_url;
    if (arg(4) == 'undelete') {
        undelete_claim_action(intval(arg(5)));
    }
    
    drupal_add_js(drupal_get_path('module', 'ncn_admin') . '/ncn_admin.js');
    
//  $query = "SELECT * FROM track_delete_claim ORDER BY timestamp DESC";
    $result = db_query('SELECT * FROM {track_delete_claim} ORDER BY timestamp DESC');
    $row_count = $result->rowCount();
    
    $table_head = '
    <thead class="tableHeader-processed">
        <th>Claim ID</th>
        <th>User</th>
        <th>Date</th>
        <th></th>
    </thead>
    <tbody>';

    $table_foot = '
    </tbody>
    </table>';
    
    ob_start();
    
    // no results message
    if ($row_count == 0)
    {
        print "<table>";
        print $table_head;
        ?>
        <tr><td colspan=2>No results</td></tr>
        <?php
        print $table_foot;
        
    }
    
    $count = 0;
    $num_per_page = 50;
    $on_page = 0;
    $current_page = 1;

    for ($i=0; $i<$row_count; $i++)
    { 
        // get data
        $row = $result->fetchAssoc();
        $claim_id = $row['claim_id'];
        
    //  $query = "SELECT * FROM claims WHERE claim_id=$claim_id";
        $result1 = db_query('SELECT * FROM {claims} WHERE claim_id=:a',array(':a'=>$claim_id));
        if(($claim_count=$result1->rowCount())>0) 
        {
            $claim = $result1->fetchAssoc();
            $_user = user_load($claim['user_id']);
            if ($claim['deleted']==0) {
                continue;
            }
        }
    // header?
        if ($on_page == 0)
        {
            if ($current_page == 1)
            {   ?><table class="sticky-enabled tableSelect-processed sticky-table page_table" id="page_table_<?= $current_page; ?>"><?php   }
            else
            {   ?><table class="sticky-enabled tableSelect-processed sticky-table page_table"  id="page_table_<?= $current_page; ?>" style="display:none;"><?php    }
                
            print $table_head;  
        }
    
        // draw row
        ?>
        <tr class="<?php if ($count%2) print "even"; else print "odd"; ?>">
            <?php if ($claim_count==0) : ?>
                <td><?= $claim_id; ?></td>
            <?php else: ?>
                <td><a href="#" onclick="toggle_tr('track_deleted_claim_<?php echo $claim_id;?>')"><?= $claim_id; ?></a></td>
            <?php endif; ?>
            <td><?php if($claim_count) { echo $_user->profile_firstname.' '.$_user->profile_lastname.' ('.$_user->name.')'; } ?></td>
            <td><?= date('d M Y H:i:s', $row['timestamp']); ?></td>
            <td>
                <?php if ($claim_count > 0) : ?>
                    <a href="<?= $base_url; ?>/admin/config/ncn_admin/track_delete_claims/undelete/<?php echo $claim_id?>">Undelete</a>
                <?php else: ?>
                    Undelete
                <?php endif; ?>
            </td>
        </tr>
        <?php if ($claim_count>0) : ?>
        <tr class="<?php if ($count%2) print "even"; else print "odd"; ?> hidden-tr">
            <td></td>
            <td colspan="2">
                <div id="track_deleted_claim_<?php echo $claim_id;?>" class="hidden-body" >
                    <?php echo draw_ncn_claim_data($claim_id); ?>
                </div>
            </td>
            <td></td>
        </tr>
        <?php endif; ?>
        
        <?php
        
        // update page count            
        $count++;
        $on_page++;
        
        // check end of page
        if ($on_page == $num_per_page)
        {
            ?>
            <?php               
        
            print $table_foot;
            
            $on_page = 0;
            $current_page += 1;
        }
    }
        
    if ($on_page == 0) {
        $current_page -= 1;
    }
    // end pagination
    ?>
    <table class="sticky-enabled tableSelect-processed sticky-table">
    <tbody>
    <tr>
        <td colspan="7" align="right">
            
            <?php
                if ($current_page > 1) {
                    echo t("Page:");
                
                    for ($i=1; $i<= $current_page; $i++)
                    {
                        if ($i > 1)
                        {   
                            print " | ";
                            $page_text = '<u>'.$i.'</u>';   
                        }
                        else
                        {   $page_text = '<strong><u>'.$i.'</u></strong>';  }   
                        
                        
                        ?>
                        <a href="#" onclick="change_list_page(<?= $i; ?>);" id="page_link_<?= $i; ?>"><?= $page_text; ?></a>
                        <?php
                    }
                }
                //$current_page;
            ?>
        </td>
    </tr>
    </tbody>
    </table>
    <?php
    
    // javascript list of page
    ?>
    <script type="text/javascript">
        var total_list_pages = <?= $current_page; ?>;
    </script>
    <?php   
    $content = ob_get_contents();
    ob_end_clean();
    
    return $content;
}

function draw_ncn_claim_data($claim_id) {
//  $query = "SELECT * FROM claims_data WHERE claim_id=".$claim_id." AND field_type!='hidden' AND field_type!='submit' AND field_type!='token' ORDER BY `weight` ASC;";
    $result = db_query('SELECT * FROM {claims_data} WHERE claim_id=:a AND field_type!=:b AND field_type!=:c AND field_type!=:d ORDER BY weight ASC',
    array(':a'=>$claim_id,':b'=>'hidden',':c'=>'submit',':d'=>'token'));
    //$row_count = $result->rowCount();
    //var_dump($row_count);

    ob_start();
    // ---- draw data list ----
    ?>
    
    <table>
    <tbody style="border:solid 0px;">
    <?php
    
    //for ($i=0; $i<$row_count; $i++)
    foreach($result as $row)
    {
        // get the data
        //
        $row = (array)$row;
        $row['val'] = unserialize($row['val']);
        $res = "";

        if (!isset($row['val']['type']))
        {   $row['val']['type'] = "scope";  }       
        
    
        // convert the data
        switch ($row['val']['type'])
        {
            case "checkboxes":
                $res = "";
                
                foreach ($row['val'] as $k=> $v)
                {
                    if (trim($v) != "0")
                    {   $res .= "<li> ".$v; }
                }
                
                if ($res != "")
                {   $res = "<ul>".$res."</ul>";     }
            break;
        
            case "phone_field_phone":
                $res = implode(" ", $row['val']);
            break;

            case "time_field_time":
                $res = render_claim_time($row['val']);
            break;

            case "date":
                $res = render_claim_date($row['val']);
            break;
        
            case "image_upload_element":
                $image_url = $base_url."/".$row['val']->filepath; 
                $img_info = image_get_info($row['val']->filepath);
                
                $res = "<a href='".$image_url."?width=".$img_info['width']."&height=".$img_info['height']."&iframe=false' class='colorbox-load'>"; 
                $res .= "<img src='".str_replace('default/files', 'default/files/imagecache/ncnadmin', $image_url)."' />";
                $res .= "</a>"; 
                $res .= "<br /><small style='margin:0;padding:0;'>(click to enlarge)</small>";
            break;
            
            case "scope": break;
            default:
            
                if (is_array($row['val']['val']))
                {
                    $res = implode(" ", $row['val']['val']);
                }
                else
                {
                    $res = $row['val']['val'];
                    
                }
            break;
        }
        
        // display the data
        if ($res != "") {
        ?>
        <tr>
            <td width="300"><?= ucwords(str_replace("_", " ", $row['key'])); ?></td>
            <td><?= $res; ?></td>
        </tr>
        <?php
        }
    }
    ?>
    </tbody>
    </table>
    
<?php
    $content = ob_get_contents();
    ob_end_clean();
    return $content;
}

function get_member_from_id($member_id) {
    $query = db_query('SELECT * FROM member_id_pool WHERE member_id=:a',array(':a'=>$member_id));
//    $result = db_select('member_id_pool', 'n')
//        ->fields('n')
//        ->condition('member_id',$member_id,'=')
//        ->execute();
    $result = $query;
    if ($result && $result->rowCount()>0) {
        $member = $result->fetchAssoc();
        //$member = (array)$result;
        return $member;
    }
    
    return array();
}

function get_item_from_key($data, $key, $val) {
    for ($i=0; $i<count($data); $i++){
        $item = $data[$i];
        if ($item[$key] == $val) {
            return $item;
        }
    }
    
    return false;
}

/*
 * Track user to accept NDA.
 */
function ncn_track_nda_log($member_id) {
    $timestamp = date('U');
    $ip_addr = $_SERVER['REMOTE_ADDR'];
    $member = get_member_from_id($member_id);
    
    //$query = "INSERT INTO nda_log VALUES(NULL, '$ip_addr', '$member_id', $timestamp, '".$member['first_name']."', '".$member['last_name']."')";
    $result = db_query('INSERT INTO {nda_log} VALUES(NULL,:a,:b,:c,:d,:e)',
        array(':a'=>$ip_addr,':b'=>$member_id,':c'=>$timestamp,':d'=>$member['first_name'],':e'=>$member['last_name']));
    if (!$result) {
        watchdog('nda_log', 'Failed to log nda-track from %ip_addr (member_id: %member_id, date: %date)', array('%ip_addr'=>$ip_addr, '%member_id'=>$member_id, '%date'=>date('d M Y H:i:s', $timestamp)));
    }
}

/*
 * Track IP Address List Page
 */
function ncn_admin_nda_log() {
    drupal_add_js(drupal_get_path('module', 'ncn_admin') . '/ncn_admin.js');
    
//  $query = "SELECT * FROM nda_log ORDER BY timestamp DESC";
    $result = db_query('SELECT * FROM {nda_log} ORDER BY timestamp DESC');
    $row_count = $result->rowCount();
    
    $table_head = '
    <thead class="tableHeader-processed">
        <th>Date</th>
        <th>IP Addresss</th>
        <th>Member ID</th>
        <th>First Name</th>
        <th>Last Name</th>
    </thead>
    <tbody>';

    $table_foot = '
    </tbody>
    </table>';
    
    ob_start();
    
    // no results message
    if ($row_count == 0)
    {
        print "<table>";
        print $table_head;
        ?>
        <tr><td colspan=5>No results</td></tr>
        <?php
        print $table_foot;
        
    }
    
    $count = 0;
    $num_per_page = 50;
    $on_page = 0;
    $current_page = 1;

    for ($i=0; $i<$row_count; $i++)
    { 
        // get data
        $row = $result->fetchAssoc();
        $_first_name = $row['m_first_name'];
        $_last_name = $row['m_last_name'];
        
        $member_id = $row['member_id'];
        $member = get_member_from_id($member_id);
        
        if (empty($member)) {
            $member_id .= "(*removed)";
        } else {
            $_first_name = $member['first_name'];
            $_last_name = $member['last_name'];
        }
        
    // header?
        if ($on_page == 0)
        {
            if ($current_page == 1)
            {   ?><table class="sticky-enabled tableSelect-processed sticky-table page_table" id="page_table_<?= $current_page; ?>"><?php   }
            else
            {   ?><table class="sticky-enabled tableSelect-processed sticky-table page_table"  id="page_table_<?= $current_page; ?>" style="display:none;"><?php    }
                
            print $table_head;  
        }
    
        // draw row
        ?>
        <tr class="<?php if ($count%2) print "even"; else print "odd"; ?>">
            <td><?= date('d M Y H:i:s', $row['timestamp']); ?></td>
            <td><?= $row['ip_addr']; ?></td>
            <td><?= $member_id; ?></td>
            <td><?= $_first_name; ?></td>
            <td><?= $_last_name; ?></td>
        </tr>
        <?php

        // update page count            
        $count++;
        $on_page++;
        
        // check end of page
        if ($on_page == $num_per_page)
        {
            ?>
            <?php               
        
            print $table_foot;
            
            $on_page = 0;
            $current_page += 1;
        }
    }
        
    if ($on_page == 0) {
        $current_page -= 1;
    }
    // end pagination
    ?>
    <table class="sticky-enabled tableSelect-processed sticky-table">
    <tbody>
    <tr>
        <td colspan="7" align="right">
            
            <?php
                if ($current_page > 1) {
                    echo t("Page:");
                
                    for ($i=1; $i<= $current_page; $i++)
                    {
                        if ($i > 1)
                        {   
                            print " | ";
                            $page_text = '<u>'.$i.'</u>';   
                        }
                        else
                        {   $page_text = '<strong><u>'.$i.'</u></strong>';  }   
                        
                        
                        ?>
                        <a href="#" onclick="change_list_page(<?= $i; ?>);" id="page_link_<?= $i; ?>"><?= $page_text; ?></a>
                        <?php
                    }
                }
                //$current_page;
            ?>
        </td>
    </tr>
    </tbody>
    </table>
    <?php
    
    // javascript list of page
    ?>
    <script type="text/javascript">
        var total_list_pages = <?= $current_page; ?>;
    </script>
<?php   
    $content = ob_get_contents();
    ob_end_clean();
    return $content;
}


/*
 * Undelet Claim
 */
function undelete_claim_action($claim_id) {
//  $query = "DELETE FROM track_delete_claim WHERE claim_id=$claim_id";
    $result = db_query('DELETE FROM {track_delete_claim} WHERE claim_id=:a',array(':a'=>$claim_id));
    if (!$result) {
        handle_mysql_syntax_error('30110-NCN-ADMIN', $query);
        return FALSE;
    }
    
//  $query = "UPDATE claims SET deleted=0 WHERE claim_id=$claim_id AND deleted=1";
    $result = db_query('UPDATE {claims} SET deleted=0 WHERE claim_id=:a AND deleted=1',array(':a'=>$claim_id));
    if (!$result) {
        handle_mysql_syntax_error('30110-NCN-ADMIN', $query);
        return FALSE;
    }
    
    drupal_set_message(t('Claim(#%claim_id) undeleted, successfully.', array('%claim_id'=>$claim_id)));
    
    return TRUE;
}

/*
 *
 */
function ncn_admin_claim_file_note_change($claim_id) {
    $file_note = $_POST['claim_file_note'];
  $hid = ncn_capsulecrm_note_add_note($claim_id, $file_note);
  
    $file_note = base64_encode(strip_tags($file_note));
    $log_message = ncn_amin_get_user_role_and_name()." update notes on file to '".$_POST['claim_file_note']."' ";
    drupal_set_message($log_message, 'status');
  ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);
}

/*****************************************************************************/
/*                          Claim Timer Trigger                              */
/*****************************************************************************/
/*
 * Change claim workflow
 */
function ncn_admin_claim_workflow_change($claim_id) {
    $action = '';
    $workflow = $_POST['claim_workflow'];
    $array_wf = get_claim_workflow_array();
    $error = false;
    
    //if ( $workflow == 'all_doc_recieved' ) {
    if ( $workflow == 'fax_doc_recieved' ) {
        $action = 'start';
    } else if ( $workflow == 'doc_clarification' || $workflow == 'rejected_invoices' ) {
        $action = 'reset';
    } else if ( $workflow == 'rejected_claim_docs' || $workflow == 'completed_status' ) {
        $action = 'stop';
    } else if ( !array_key_exists($workflow, $array_wf) ) {
        $error = true;
    }
    
    if ($error) {
        handle_unknown_error('10711-NCN-ADMIN');
        return FALSE;
    }
    
    // TIMER TRIGGER
    if ($action != '') {
        if (!update_timer_trigger($claim_id, $workflow, $action)) {
            /*$query = "SELECT * FROM claims WHERE claim_id=$claim_id";
            $result = db_query($query);
            if ($claim = (array)$result) {
                if ($claim['workflow']=='fax_doc_recieved') {
                    $query = "UPDATE claims SET workflow='$workflow' WHERE claim_id=$claim_id";
                    $result = db_query($query);
                    if (!$result) {
                        handle_mysql_syntax_error('10719-NCN-ADMIN', $query);
                        return FALSE;
                    }
                    // log message
                    $log_message = "Claim workflow updated to: ".$array_wf[$workflow];
                    drupal_set_message($log_message, 'status');
        
                    ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);
                }
            }*/
            return FALSE;
        }
    } else {
        $query = "UPDATE claims SET workflow='$workflow' WHERE claim_id=$claim_id";
        $result = db_query('UPDATE {claims} SET workflow=:a WHERE claim_id=:b',array(':a'=>$workflow,':b'=>$claim_id));
        if (!$result) {
            handle_mysql_syntax_error('10709-NCN-ADMIN', $query);
            return FALSE;
        }
        // log message
        $log_message = ncn_amin_get_user_role_and_name()." updated claim workflow to ".$array_wf[$workflow];
        drupal_set_message($log_message, 'status');
        
        ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);
    }
    
    // auto-mail
    if (!$error) {
        
        $_admin = user_load(1);
        $admin_mail = $_admin->mail;
        
        $site_mail =  variable_get('site_mail', ini_get('sendmail_from'));
        
    //  $query = "SELECT * FROM claims WHERE claim_id=$claim_id";
        $result = db_query('SELECT * FROM {claims} WHERE claim_id=:a',array(':a'=>$claim_id));
        if ($claim=$result->fetchAssoc()) {
            $_claim_user = user_load($claim['user_id']);
            $_member = get_member_from_id($_claim_user->profile_memberid);
            if (!empty($_member)) {
                $_am = user_load($_member['am_uid']);
                $am_mail = $_am->mail;      //***
            }
            
            $ms_list = get_ms_list();
            $qa_list = get_qa_list();
        
            if ($workflow == 'rejected_claim_docs') {
                //$subject = variable_get('ncn_rejected_claim_docs_mail_subject', '');
                //$subject = "Rejected Claim(# $claim_id) Documents";
                $owner_name = ncn_cd($claim_id, 'customer_name');
                $subject = "Additional Claim Information Need to Process Claim ID# $claim_id / $owner_name";
                $msg = $_POST['rejected_claim_docs_mail_body'];
                if ($msg != '') {
                    //ncn_admin_set_claim_docs_rejected_message($claim_id, $msg);
                    $log_message = "Sent rejection mail :\r\n".$msg;
                    drupal_set_message($log_message, 'status');
                    
                    pm_send(0, $_claim_user->uid, $subject, $msg, $claim_id, 0, 'no mail', array(), 1, $log_message);   //claim log
                    
                    $_claim_user = user_load($claim['user_id']);
                    $member = get_member_from_id($_claim_user->profile_memberid);
          $from_mail = "fax@netclaimsnow.com";    // $site_mail
                    drupal_mail( 'ncn_admin', 'claim_docs_rejected', $_claim_user->mail, language_default(), array('subject'=>$subject, '!claim_id'=>$claim_id, '!owner_name'=>$owner_name, '!reason'=>$msg), $from_mail );
                    
                    /*drupal_mail( 'ncn_admin', 'claim_docs_rejected', $admin_mail, language_default(), array('subject'=>$subject, 'body'=>$msg), $site_mail );
                    
                    if (isset($am_mail) && $am_mail != '') {
                        drupal_mail( 'ncn_admin', 'claim_docs_rejected', $am_mail, language_default(), array('subject'=>$subject, 'body'=>$msg), $site_mail );
                    }
                    foreach($ms_list as $ms) {
                        drupal_mail( 'ncn_admin', 'claim_docs_rejected', $ms['mail'], language_default(), array('subject'=>$subject, 'body'=>$msg), $site_mail );
                    }
                    foreach($qa_list as $qa) {
                        drupal_mail( 'ncn_admin', 'claim_docs_rejected', $qa['mail'], language_default(), array('subject'=>$subject, 'body'=>$msg), $site_mail );
                    }*/
                }
            }
        }
    }
    //drupal_set_message(t('Workflow changed, successfully.'));
    
    return TRUE;
}

/*
 * Update Timer Trigger
 * @param:  action - (start|stop|reset)
 *          is_auto - false: in admin, mannually.
 *                    true : cron, or real-time                         
 */
function update_timer_trigger($claim_id, $workflow, $action, $is_auto=false) {
    GLOBAL $user;
    $user = user_load($user->uid);
    $user_id = $user->uid;
    
    if (is_subuser($user)) {
        $parent_mid = ncn_subuser_get_memberid_from_subuid($user_id);
        $user_id = get_uid_from_memberid($parent_mid);
    }
    
    if ($action == '') {
        return FALSE;
    }
    
    if ($action=='start') {
    //  $query2 = "SELECT * FROM claims_invoices WHERE claim_id=".$claim_id." AND `live`=2;";
        $result2 = db_query('SELECT * FROM {claims_invoices} WHERE claim_id=:a AND live=:b',array(':a'=>$claim_id,':b'=>2));
        $live_invoice_count = $result2->rowCount();
        if ($live_invoice_count==0) {
            drupal_set_message(t('Timer isn\'t started, because of no claim document'), 'error');
            return TRUE;        // ESPECIAL
        }
    }
        
//  $query = "SELECT * FROM claim_timer_trigger WHERE claim_id=$claim_id AND status=1 ORDER BY start_time DESC";
    $query = "SELECT * FROM {claim_timer_trigger} WHERE claim_id=".$claim_id." AND status=1 ORDER BY start_time DESC";
    $result = db_query($query);
    if (!$result) {
        handle_mysql_syntax_error('30701-NCN-ADMIN', $query);
        return FALSE;   ///// END /////
    }
    
    $timerstamp = ncn_admin_get_timer_start_time($claim_id, $action);
    if ($timerstamp == 0) {
        $timerstamp = date('U');
    }
    $error = false;
    $limit = ncn_admin_get_timer_limit_length($claim_id, $action); //24*60*60;  //24 hours
    $timer = true;
    if ( $result->rowCount() == 0 ) {
        if ( $action=='start' || $action=='reset' ) {
            $query = db_query('INSERT INTO {claim_timer_trigger} VALUES(NULL,:a,:b,:c,:d,:e,:f)',
                array(':a'=>$claim_id,':b'=>$timerstamp,':c'=>$limit,':d'=>1,':e'=>0,':f'=>0));
        } else {
            //$error = true;
            $timer = false;
        }
    } else {
        $t_row = $result->fetchAssoc();
        if ( $action=='reset' ) {
            $query = db_query('UPDATE {claim_timer_trigger} SET start_time=:a, limit_time=:b, pause=:c, mail_sent=:d WHERE status=1 AND tid=:e',
                array(':a'=>$timerstamp,':b'=>$limit,':c'=>0,':d'=>0,':e'=>$t_row['tid']));
        } else if ($action=='stop' ) {
            $query = db_query('UPDATE {claim_timer_trigger} SET status=0 WHERE status=1 AND tid=:a',array(':a'=>$t_row['tid']));
        } else {
            $error = true;
        }
    }
    
    // check if action is possible, and output error message
    if ($error) {
        if ($action == 'start') {
            drupal_set_message( t('Timer has been started, already.'), 'error' );
        } else if ($action == 'stop') {
            drupal_set_message( t('Timer isn\'t started, yet.'), 'error' );
        } else if ($action == 'reset') {    
            drupal_set_message( t('Failed to reset timer. Please contact to web administrator.'), 'error' );
        } else {
            handle_unknown_error('10702-NCN-ADMIN');
        }
        return FALSE;   ///// END /////
    }   
    // perform sql.
    
    $result = $query;
    if (!$result) {
        handle_mysql_syntax_error('30702-NCN-ADMIN', $query);
        return FALSE;   ///// END /////
    }
    
    // trigger timer
    
    // log message
    if ($timer) {
        if (!$is_auto) {
            if ($action == 'start') {
                $log_message = "Timer(claim: #$claim_id) has been started by".ncn_amin_get_user_role_and_name();
            } else if ($action == 'stop') {
                $log_message = "Timer(claim: #$claim_id) has been stopped by".ncn_amin_get_user_role_and_name();
            } else if ($action == 'reset') { 
                $log_message = "Timer(claim: #$claim_id) has been reset by".ncn_amin_get_user_role_and_name();
            }
        } else {
            if ($action == 'start') {
                $log_message = "Timer(claim: #$claim_id) has been started by".ncn_amin_get_user_role_and_name();
            } else if ($action == 'stop') {
                $log_message = "Timer(claim: #$claim_id) has been expired.";
            }
        }
        if (isset($log_message)) {
            $claim_workflow = get_claim_workflow_array();
            $log_message .= " (".$claim_workflow[$workflow].")";
        }
    } else {
        $claim_workflow = get_claim_workflow_array();
        $wf_text = $claim_workflow[$workflow];
        $log_message = ncn_amin_get_user_role_and_name()." updated claim workflow to $wf_text.";
    }
    
    // change workflow
//  $query = "UPDATE claims SET workflow='$workflow' WHERE claim_id=$claim_id";
    $result = db_query('UPDATE {claims} SET workflow=:a WHERE claim_id=:b',array(':a'=>$workflow,':b'=>$claim_id));
    if (!$result) {
        handle_mysql_syntax_error('10709-NCN-ADMIN', $query);
        return FALSE;
    }
    
    if (isset($log_message)) {
        drupal_set_message($log_message, 'status');

        ncn_admin_insert_claim_log($claim_id, $timerstamp, $log_message);
    }
    
    // auto mail for All Documents Recieved
    if (!$error) {
//      $query = "SELECT * FROM claims WHERE claim_id=$claim_id";
        $result = db_query('SELECT * FROM {claims} WHERE claim_id=:a',array(':a'=>$claim_id));
        if ($claim=$result->fetchAssoc()) {
            if ($workflow == 'all_doc_recieved') {
                $_admin = user_load(1);
                $admin_mail = $_admin->mail;    //***
                
                $_claim_user = user_load($claim['user_id']);
                $_member = get_member_from_id($_claim_user->profile_memberid);
                if (!empty($_member)) {
                    $_am = user_load($_member['am_uid']);
                    $am_mail = $_am->mail;      //***
                }
                
                $ms_list = get_ms_list();
                $qa_list = get_qa_list();
                $am_list = get_account_manager_list();
                $sam_list = get_senior_account_manager_list();
                // automatic mail
                $site_mail =  variable_get('site_mail', ini_get('sendmail_from'));
                
                $part = "All Documents Received";
                $msg = get_mail_body_claim_status_change_notify($claim_id, $part);
                
                $subject = 'All Docs Received ('. ncn_cd($claim_id, 'customer_name'). '/'. $claim['claim_id'].'/'. $_claim_user->profile_firstname .' '. $_claim_user->profile_lastname .'/'.$_claim_user->profile_legalname .')';
                
                if ($user->uid != $user_id) { // if (is_subuser($user)) // mail to parent user (member)
                    $parent_user = user_load($user_id);
                    if (!empty($parent_user->mail)) {
                        drupal_mail( 'ncn_admin', 'claim_status_change_notify', $parent_user->mail, language_default(), array('subject'=>$subject, 'body'=>$msg), $site_mail);
                    }
                }
                
                drupal_mail( 'ncn_admin', 'claim_status_change_notify', $admin_mail, language_default(), array('subject'=>$subject, 'body'=>$msg), $site_mail);
                if (isset($am_mail)) {
                    drupal_mail( 'ncn_admin', 'claim_status_change_notify', $am_mail, language_default(), array('subject'=>$subject, 'body'=>$msg), $site_mail );
                }
                
                foreach($ms_list as $ms) {
                    drupal_mail( 'ncn_admin', 'claim_status_change_notify', $ms['mail'], language_default(), array('subject'=>$subject, 'body'=>$msg), $site_mail );
                }
                
                /*foreach($qa_list as $qa) {
                    drupal_mail( 'ncn_admin', 'claim_status_change_notify', $qa['mail'], language_default(), array('subject'=>$subject, 'body'=>$msg), $site_mail );
                }*/
                
            }
        }
    }
    return TRUE;
}

/*
 *
 */
function render_claim_timer($claim_id, $mode=0) {
    // check if mail should be sent.
    check_claim_timer($claim_id);

//  $query = "SELECT * FROM claim_timer_trigger WHERE claim_id=$claim_id AND status=1 ORDER BY start_time DESC";
    $result = db_query('SELECT * FROM {claim_timer_trigger} WHERE claim_id=:a AND status=1 ORDER BY start_time DESC',
    array(':a'=>$claim_id ));
    if (!$result) {
        handle_mysql_syntax_error('30731-NCN-ADMIN', $query);
        return "";
    }
    if ($result->rowCount() == 0) {
        return "";
    }

    // Timer is in running
    $row = $result->fetchAssoc();
    $t_now = date('U');
    
    if ( $row['pause']== 0 ) {
        $to_time = $row['start_time'] + $row['limit_time'];
        $remained_time = $to_time - $t_now;
        $to_time = ncn_admin_get_due_to_time($row['start_time'], $row['limit_time']);
    } else {
        $remained_time = $row['limit_time'];
    }
    
    $content = "";
    $before = 2*3600;   //2hrs
    if ($remained_time > 0) {
        if ($remained_time < $before) {
            $red_class = "timer_alert";
        }
        // Remained Time
        $r_second = $remained_time % 60;    $remained_time = (int)($remained_time / 60);
        $r_minute = $remained_time % 60;    $remained_time = (int)($remained_time / 60);
        $r_hour   = $remained_time % 24;    $remained_time = (int)($remained_time / 24);
        $r_day    = $remained_time;
        
        if ($mode == 0) {
            $content ='<span class="'.$red_class.'">'.(($r_day)? "$r_day day ":"") . "$r_hour:$r_minute:$r_second</span> &nbsp;remained";
            
            // To Time
            $content .= "<div>";
            if ($row['pause'] != 0) {
                $content .= '( Stopped )';
            } else {
                $content .= '( To '.date('d M Y, H:i:s', $to_time).' )';
            } 
            $content .= "</div>";
        } else {
            $content .='<span class="'.$red_class.'">'.(($r_day)? "$r_day day ":"") . "$r_hour:$r_minute:$r_second";
            if ($row['pause'] != 0) {
                $content .= ' -Stopped- ';
            }
            $content .="</span>";
        }
    }
    
    return $content;
}

function render_claim_workflow($claim_id) {
//  $query = "SELECT * FROM claims WHERE claim_id=$claim_id";
    $result = db_query('SELECT * FROM {claims} WHERE claim_id=:a',array(':a'=>$claim_id));
    if (!$result) {
        handle_mysql_syntax_error('30735-NCN-ADMIN', $query);
        return "";
    } else if ($result->rowCount() == 0 ) {
        drupal_set_message(t('Claim(#%claim_id) doesn\'t exist.', array('%claim_id'=>$claim_id)), 'error');
        return "";
    }

    $row = $result->fetchAssoc();
    $workflow = $row['workflow'];
    if ($workflow == '') {
        $content = '';
    } else {
        $arr_workflow = get_claim_workflow_array();
        $content = $arr_workflow[$workflow] ;
    }
    
    return $content;
}

function get_account_manager_uid_from_claim_id($claim_id) {

//  $query = "SELECT user_id FROM claims WHERE claim_id=$claim_id";
    $result = db_query('SELECT user_id FROM {claims} WHERE claim_id=:a',array(':a'=>$claim_id));
    if (!$result) {
        handle_mysql_syntax_error('30201-NCN-ADMIN', $query);
        return 0;
    } else if ($result->rowCount() == 0) {
        drupal_set_message(t('No member has claim(#%claim_id).', array('%claim_id'=> $claim_id)), 'error');
        return 0;
    }
    $row1 = $result->fetchAssoc();  // get user id of claims
    $user_details = user_load($row1['user_id']);
    
    // get account manager
//  $query = "SELECT * FROM `member_id_pool` WHERE member_id=\"".AddSlashes($user_details->profile_memberid)."\";";
    $result = db_query('SELECT * FROM {member_id_pool} WHERE member_id=:a',array(':a'=>$user_details->profile_memberid));
    if (!$result) {
        handle_mysql_syntax_error('30202-NCN-ADMIN', $query);
        return 0;
    } else if ($result->rowCount() == 0 ) {
        if ($row1['user_id'] != 1) {
            drupal_set_message(t('User(%uid) isn\'t assigned to anyone.', array('%uid'=> $row1['user_id'])), 'error');
        }
        return 0;
    }

    $row1 = $result->fetchAssoc();  // we are grabbing distributor id from memebr id
    return $row1['am_uid'];
    //***************
    
//  $query = "SELECT * FROM  `users_parent` WHERE uid=".$row1['owner']; // get account manager from distributor
    $result = db_query('SELECT * FROM  {users_parent} WHERE uid=:a',array(':a'=>$row1['owner']));
    if (!$result) {
        handle_mysql_syntax_error('30203-NCN-ADMIN', $query);
        return 0;
    } else if ($result->rowCount() == 0) {
        if ($row1['owner'] != 1) {
            drupal_set_message(t('User(%uid) isn\'t assigned to any account manager.', array('%uid'=> $row1['owner'])), 'error');
        }
        return 0;
    }
    $row1 = $result->fetchAssoc();  // we are grabbing account manager id from distributor id (account managers "own" distributors)
    
    return $row1['parent'];     // load the account manager profile
}

function check_claim_timer($claim_id) {

//  $query = "SELECT * FROM claim_timer_trigger WHERE claim_id=$claim_id AND status=1 ORDER BY start_time DESC";
    $result = db_query('SELECT * FROM {claim_timer_trigger} WHERE claim_id=:a AND status=1 ORDER BY start_time DESC',
    array(':a'=>$claim_id ));
    if (!$result) {
        handle_mysql_syntax_error('30301-NCN-ADMIN', $query);
        return;
    }
    if ($result->rowCount() == 0) {
        return;
    }

    $row = $result->fetchAssoc();
    
    $t_now = date('U');
    if ($row['pause']==0) {
        $to_time = $row['start_time'] + $row['limit_time'];
        $remained_time = $to_time - $t_now;
    } else {
        $remained_time = $row['limit_time'];
    }
    
    
    $account_manager_uid = get_account_manager_uid_from_claim_id($claim_id);
    if ($account_manager_uid) {
        $account_manager = user_load($account_manager_uid);
        $account_manager_email = $account_manager->mail;    // grab the account manager email from their profile 
    }
    
    // expired
    if ($remained_time <= 0) {
        // * if (update_timer_trigger($claim_id, 'completed_status', 'stop', true)) {
//      $query = "SELECT * FROM claim_timer_trigger WHERE claim_id=$claim_id AND status=1 ORDER BY start_time DESC";
        $result = db_query('SELECT * FROM {claim_timer_trigger} WHERE claim_id=:a AND status=1 ORDER BY start_time DESC',
        array(':a'=>$claim_id));
        $t_row = $result->fetchAssoc();
        
    //  $query = "UPDATE claim_timer_trigger SET status=0 WHERE status=1 AND tid=".$t_row['tid'];
        if (db_query('UPDATE {claim_timer_trigger} SET status=0 WHERE status=1 AND tid=:a',array(':a'=>$t_row['tid']))) {
            ncn_admin_insert_claim_log($claim_id, date('U'), "Timer(claim: #$claim_id) has been expired.");
            if ($account_manager_email) {
                $params = array(
                    '!claim_id' => $claim_id
                );
                drupal_mail('ncn_admin', 'timer_expired', $account_manager_email, language_default(), $params);
                return;
            }
        }
    } else if($row['mail_sent'] == 0) {     // mail before 2 hours of expired
        $before = 2*3600;   //2hrs  
        if ( $remained_time < $before ) {
            if ($account_manager_email) {
                $params = array(
                    '!claim_id' => $claim_id
                );
                drupal_mail('ncn_admin', 'timer_alert', $account_manager_email, language_default(), $params);
            }
        //  $query = "UPDATE claim_timer_trigger SET mail_sent=1 WHERE tid=".$row['tid'];
            $result = db_query('UPDATE {claim_timer_trigger} SET mail_sent=1 WHERE tid=:a',array(':a'=>$row['tid']));
        }
    }
    
    if ($row['pause']==1) {
        if ($row['start_time'] <= date('U')) {
        //  $query = "UPDATE claim_timer_trigger SET pause=0 WHERE tid=".$row['tid'];
            $result = db_query('UPDATE {claim_timer_trigger} SET pause=0 WHERE tid=:a',array(':a'=>$row['tid']));
        }
    }
    
    check_timer_work_day($row['tid']);
}

/*
 * Check Timer Pause, out of Work day.
 Friday 5:30 PM ~ Monday 8:30 AM
 */
function check_timer_work_day($tid) {
//  $query = "SELECT * FROM claim_timer_trigger WHERE tid=$tid";
    $result = db_query('SELECT * FROM {claim_timer_trigger} WHERE tid=:a',array(':a'=>$tid));
    if (!$result) {
        //handle_mysql_syntax_error('30305-NCN-ADMIN', $query);
        return;
    }
    if ($result->rowCount() == 0) {
        return;
    }

    $row = $result->fetchAssoc();
    if ($row['pause'] == 0) {
        $today = getdate();
        $resume_time = 0;
        $flag = false;
        /*if ( ( $today['wday'] == 5 && ($today['hours']>17 || ($today['hours']==17 && $today['minutes']>=30))) ||
            $today['wday'] == 6 || $today['wday'] == 0 ) {
            $flag = true;
            $resume_time = strtotime("next Monday");
            $resume_time = strtotime("+8 hours 30 minutes", $resume_time);
        } else if ( $today['wday'] == 1 && ($today['hours']<8 || ($today['hours']==8 && $today['minutes']<30)) ) {
            $flag = true;
            $resume_time = strtotime("Monday this week");
            $resume_time = strtotime("+8 hours 30 minutes", $resume_time);
        }*/
        
        if ( $today['wday'] == 6 || $today['wday'] == 0 ) {
            $flag = true;
            $resume_time = strtotime("next Monday");
            $resume_time = strtotime("+8 hours", $resume_time);
        } else if ( $today['wday'] == 1 && $today['hours']<8 ) {
            $flag = true;
            $resume_time = strtotime("Monday this week");
            $resume_time = strtotime("+8 hours", $resume_time);
        }
        
        if ($flag) {
            $limit_time = $row['limit_time'] - (date('U')-$row['start_time']);
            if ($limit_time < 0) {
                $limit_time = 0;
            }
        //  $query = "UPDATE claim_timer_trigger SET pause=1, start_time=$resume_time, limit_time=$limit_time WHERE tid=$tid";
            $result = db_query('UPDATE {claim_timer_trigger} SET pause=1, start_time=:a, limit_time=:b WHERE tid=:c',
                array(':a'=>$resume_time,':b'=>$limit_time,':c'=>$tid));
        }
    }
}

/*
 * Send Activation Mail, When activating member
 * @param:  $key - register_pending_approval (only one)
 */
 
function send_activation_mail($to, $language, $key, $params) {
    $variables = user_mail_tokens($params['account'], (array)$language);
    if(is_null($variables)){
        $variables = array();
    }   
    $subject = _user_mail_text($key .'_subject', $language, $variables);
    $msg     = _user_mail_text($key .'_body', $language, $variables);
    
    watchdog('activation_mail', 'op:!op, subject: !subject', array('!op'=> $key, '!subject'=>$subject));
    // mail headers
    $email = variable_get('site_mail', ini_get('sendmail_from'));
    $_admin = user_load(1);
    $headers =  'From: '.$email."\r\n".
                'Reply-To: '.$email."\r\n".
                "BCC: ".$_admin->mail . "\r\n" .
                'X-Mailer: PHP/'.phpversion();
                
    $attaches = array();
    $attache_names = array();
    
    $_user = user_load($params['account']->uid);
    profile_user_load(array($_user->uid => $_user));
    $member_type = get_member_type($_user);
    
    $node_title='Activation Mail (Gold)';
    $node_id = 55;
    if ($member_type == 0) {    // Gold Member
        $node_title='Activation Mail (Gold)';
        $node_id = 55;
    } else if ($member_type == 1) {
        $node_title='Activation Mail (Silver)';
        $node_id = 56;
    } else if ($member_type == 2) {
        $node_title='Activation Mail (Gold)';
        $node_id = 55;
    } else if ($member_type == 3) {
        $node_title='Activation Mail (Gold)';
        $node_id = 55;
    } else if ($member_type == 4) {
        $node_title='Activation Mail (Gold)';
        $node_id = 55;
    } else if ($member_type == 5) {
        $node_title='Activation Mail (Gold)';
        $node_id = 55;
    }
    
    $result = db_query('SELECT * FROM {node} WHERE type=:a AND nid=:b',array(':a'=>'attached_documents',':b'=>$node_id));
    if ($result->rowCount()>0) 
    {
        foreach($result as $row)
        {
            $row = (array)$row;
            $node = node_load($row['nid']);
        }
        
        $index = 0;
        $atchfiles = array_pop($node->field_attach_docs);
        foreach ($atchfiles as $file)
        {
            $file['filepath'] = str_replace("public://","sites/default/files/",$file['uri']);
            $attaches['doc-'.$index] = $file['filepath'];
            $attache_names['doc-'.$index] = $file['filename'];
            $attach_mail_data[$file['description']] = array('filepath'=>$file['filepath']);
            $index++;
        }
    }
    
    $_params = array('!name'=>($_user->profile_firstname." ".$_user->profile_lastname) ,'!docs'=>$attach_mail_data);
    drupal_mail('ncn_admin', 'create_user', $to, $language, $_params);
    //drupal_mail('ncn_admin', 'create_user', 'keyideas.admn@gmail.com', $language, $_params);
    return; //---------------------------
    
    if (empty($attaches)) {
        drupal_mail('user', $key, $to, $language, $params, $email);
        
        /*$subject = "Acitvation Test Mail";
        $to      = "elight.haha@gmail.com";
        drupal_mail('user', $key, $to, $language, $params);*/
    } else {
        send_mail_attached_file($to, $subject, $msg, $attaches, $attache_names, $headers);
    
        /*$subject = "Acitvation Test Mail";
        $to      = "elight.haha@gmail.com";
        send_mail_attached_file($to, $subject, $msg, $attaches, $attache_names, $headers);*/
    }
}


function ncn_admin_create_user_get_doc_info_by_hint($docs, $hint) {
  foreach( $docs as $name=>$data ) {
    if (strpos(strtolower($name), strtolower($hint)) !== FALSE) {
      return $data;
    }
  }  
  return array();
}

function ncn_admin_verify_payment_date(){
    global $base_url;
    ob_start();
    ?>
    <table>
        <thead class="tableHeader-processed">
        <th>UserId</th>
        <th>User</th>
        <th>Signup Date</th>
        <th>Renewal Day </th>
        <th>Next Payment Date</th>
        <th>Edit Payment Date</th>
        </thead>
        <tbody>
        <?php
        $sql = 'SELECT u.uid,u.name,u.status,
             mip.create as signup_date,mip.next_payment_date as nxp_date,
             mrd.day as renewal_day
             FROM {users} as u
             JOIN {profile_value} AS upv ON (upv.uid = u.uid)
             JOIN {member_id_pool} AS mip ON (mip.member_id = upv.value)
             LEFT JOIN ncn_member_renewal_day AS mrd ON (mrd.member_id = upv.value)
             WHERE 1 AND upv.fid = 48
             GROUP BY mip.member_id
             ORDER BY u.status DESC, nxp_date ASC, mrd.timestamp DESC
            ';
        $result = db_query($sql);

        //if($result->rowCount()>0)
        {
            foreach($result as $i => $row){
                $row = (array) $row;
                ?>
                <tr class="<?php if ($i%2) print "even"; else print "odd"; ?>">
                    <td><?php echo $row['uid'].($row['status']==1 ? " (Active) ":" (InActive) "); ?></td>
                    <td><?php echo $row['name']; ?></td>
                    <td><?php echo date("F d, Y",$row['signup_date']); ?></td>
                    <td><?php echo ($row['renewal_day']!='' ? $row['renewal_day'] : date("j",$row['nxp_date'])); ?></td>
                    <td><?php echo date("F d, Y",$row['nxp_date']); ?></td>
                    <td><a href="<?php echo $base_url;?>/admin/config/ncn_create_user/all_user_list/edit_user/<?php echo $row['uid']; ?>" target="_blank">Edit</a></td>
                </tr>
            <?php
            }
        }
        ?>
        </tbody>
    </table>
    <?php
    $content = ob_get_contents();
    ob_end_clean();
    return $content;
}
