<?php

//------------------------------------------------------------------------------
require_once('ncn_admin.define.inc');
require_once('ncn_admin.fpdf.inc');
require_once('ncn_admin_api.inc');
require_once('ncn_admin.inc');
require_once('ncn_admin.page.inc');
require_once('ncn_admin.member.inc');
require_once('ncn_admin.claim.inc');
require_once('ncn_admin.claim_room.inc');
require_once('ncn_admin.claim_invoice.inc');
require_once('ncn_admin.claim_timer_trigger.inc');
require_once('ncn_admin.claim_processing.view.inc');
require_once('ncn_admin.payment.inc');
require_once('ncn_admin_scopesheet.inc');
require_once('ncn_admin.note.inc');

require_once('ncn_admin.unused.inc');

function ncn_admin_menu()
{

  $items = array();

  $items['admin/config/ncn_admin'] = array(
    'title' => 'Net Claims Now Administration',
    'page callback' => 'ncn_admin_page',
    'access arguments' => array('view ncn claim'),
  );

   $items['admin/config/ncn_admin/list'] = array(
    'title' => 'Show Claims',
    'page callback' => 'ncn_admin_page',
    'access arguments' => array('view ncn claim'),
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => 0,
   );
   
   $items['admin/config/ncn_admin/list'] = array(
    'title' => 'Show Claims',
    'page callback' => 'ncn_admin_page',
    'access arguments' => array('view ncn claim'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 1,
   );
   
  $items['admin/config/ncn_admin/member_ids'] = array(
    'title' => t('Quick Add Member'),
    'page callback' => 'ncn_admin_page_member_ids',
    'access arguments' => array('administer ncn_admin settings'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 8,
   );

  $items['admin/config/ncn_admin/member_id_ranges'] = array(
    'title' => t('Define Distributor ID Range'),
    'page callback' => 'ncn_admin_member_id_ranges',
    'access arguments' => array('administer ncn_admin settings'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 7,
   );
   
  $items['admin/config/ncn_admin/product_settings'] = array(
    'title' => t('Product/Ordering Settings'),
    'page callback' => 'ncn_admin_page_product_settings',
    'access arguments' => array('administer ncn_admin settings'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 6,
  );
   

  $items['admin/config/ncn_admin/email_settings'] = array(
    'title' => 'Email Settings',
    'page callback' => 'ncn_admin_page_email_settings',
    'access arguments' => array('administer ncn_admin settings'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 5,
   );

  $items['admin/config/ncn_admin/track_delete_claims'] = array(
    'title' => 'Track of Deleted Claims',
    'page callback' => 'track_delete_claims_page',
    'access arguments' => array('administer ncn_admin settings'),
        'type' => MENU_LOCAL_TASK,
    'weight' => 4,
   );
   
   $items['admin/config/ncn_admin/nda_log'] = array(
    'title' => 'Track IP Address for NDA',
    'page callback' => 'ncn_admin_nda_log',
    'access arguments' => array('administer ncn_admin settings'),
        'type' => MENU_LOCAL_TASK,
    'weight' => 3,
   );
   
   $items['admin/config/ncn_admin/transaction'] = array(
    'title' => 'Payment Transaction',
    'page callback' => 'payment_transaction_page',
    'access arguments' => array('payment transaction'),
        'type' => MENU_LOCAL_TASK,
    'weight' => 2,
   );
   $items['admin/config/ncn_admin/refund/%pid'] = array(
    'title' => 'Refund Payment',
    'page callback' => 'ncn_admin_refund_payment',
    'page arguments' => array(4),
    'access arguments' => array('payment transaction'),
    'type' => MENU_CALLBACK,
    'weight' => 2,
   );

   
  $items['admin/config/ncn_admin/messages'] = array(
    'title' => 'Show Messages',
    'page callback' => 'ncn_admin_messages',
    'access arguments' => array('administer ncn_admin settings'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 9,
   );
   
   $items['admin/config/ncn_admin/config'] = array(
    'title' => 'Settings',
    'page callback' => 'ncn_admin_page_settings',
    'access arguments' => array('administer ncn_admin settings'),
    'type' => MENU_LOCAL_TASK,
    'weight' => 10,
   );

  $items['admin/config/ncn_admin/messages_markread'] = array(
    'title' => 'Messages Mark Read',
    'page callback' => 'ncn_admin_messages_markread',
    'access arguments' => array('administer'),
    'type' => MENU_CALLBACK,
   );
   
   // user documents
  $items['account/serve_user_document'] = array(
    'page callback' => 'ncn_admin_serve_user_document',
    'access arguments' => array('access content'),
    'type' => MENU_CALLBACK,
   );

  $items['admin/delete_user_document'] = array(
    'page callback' => 'ncn_admin_delete_user_document',
    'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
   );
   
    $items['account/serve_scope_file'] = array(
      'page callback' => 'ncn_admin_serve_scope_file',
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    );
    $items['account/delete_scope_file'] = array(
      'page callback' => 'ncn_admin_delete_scope_file',
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    );
    
    
    $items['ajax/ncn_admin/edit_roomname'] = array(
      'page callback' => 'ncn_admin_edit_roomname',
      'type' => MENU_CALLBACK,
      'access arguments' => array('access content'),
    );
    
    
    $items['admin/config/ncn_member_report'] = array(
        'title' => 'Net Claims Now Member Report',
        'page callback' => 'ncn_admin_member_report',
        'access arguments' => array('administer ncn_admin settings'),
        /*'type' => MENU_LOCAL_TASK,*/
    );
    $items['admin/config/ncn_membership_cal'] = array(
        'title' => 'Net Claims Now Membership Calendar',
        'page callback' => 'ncn_admin_membership_cal',
        'access arguments' => array('administer ncn_admin settings'),
    );
    
    $items['admin/config/ncn_membership_cal_day_list'] = array(
        'title' => 'Net Claims Now Membership List',
        'page callback' => 'ncn_admin_membership_cal_day_list',
        'access arguments' => array('administer ncn_admin settings'),
        'type' => MENU_CALLBACK,
    );
    
    $items['admin/config/ncn_user/%/all_payments'] = array(
        'title' => 'Net Claims Now User All Payment',
        'page callback' => 'ncn_admin_ncn_user_all_payments',
        'page arguments'=> array(3), 
        'access arguments' => array('payment_transaction_page'),
        'type' => MENU_CALLBACK,
    );
    
    $items['admin/config/ncn_user/%/ytd'] = array(
        'title' => 'Net Claims Now User YTD Payment',
        'page callback' => 'ncn_admin_ncn_user_ytd_payments',
        'page arguments'=> array(3), 
        'access arguments' => array('payment_transaction_page'),
        'type' => MENU_CALLBACK,
    );
    
    $items['download/user_list'] = array(
        'page callback' => 'ncn_admin_download_user_list',
        'type' => MENU_CALLBACK,
        'access arguments' => array('administer ncn_admin settings'),
    );
  $items['download/transaction'] = array(
    'page callback' => 'ncn_admin_payment_download_transaction',
    'type' => MENU_CALLBACK,
    'access arguments' => array('payment transaction'),
  );
  $items['download/claim_list'] = array(
    'page callback' => 'ncn_admin_download_claim_list',
    'type' => MENU_CALLBACK,
    'access arguments' => array('payment transaction'),
  );
    $items['ajax/upload_scope_full_pdf/%/%'] = array(
        'page callback' => 'ncn_admin_scopeform_full_pdf_submit',
        'page arguments' => array(2, 3), 
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );
    
    $items['admin/config/viewclaim/scope_file/crop/%/%'] = array(
        'page callback' => 'ncn_admin_viewclaim_scopefile_crop',
        'page arguments' => array(5, 6), 
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );
    
    $items['download/ncn_video'] = array(
        'page callback' => 'ncn_admin_download_ncn_video',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    $items['ajax/generate_download_video_link'] = array(
        'page callback' => 'ncn_admin_generate_download_video_link',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    
    
    $items['ajax/ncn_admin/aci/dcl/%/daily_log_submit'] = array(
        'page callback' => 'ncn_admin_ajax_aci_dcl_daily_log_submit',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/aci/dcl/%/delete_daily_log'] = array(
        'page callback' => 'ncn_admin_ajax_aci_dcl_delete_daily_log',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/aci/dcl/%/render_daily_log_list'] = array(
        'page callback' => 'ncn_admin_ajax_aci_dcl_render_daily_log_list',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/aci/dcl/%/render_log_action_panel'] = array(
        'page callback' => 'ncn_admin_ajax_aci_dcl_render_log_action_panel',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    
    $items['ajax/ncn_admin/scopesheet/eit/%/action_submit'] = array(
        'page callback' => 'ncn_admin_ajax_ss_eit_action_submit',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/eit/%/delete'] = array(
        'page callback' => 'ncn_admin_ajax_ss_eit_delete',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/eit/%/render_eit_list'] = array(
        'page callback' => 'ncn_admin_ajax_ss_eit_render_list',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/eit/%/render_ss_eit_action_panel'] = array(
        'page callback' => 'ncn_admin_ajax_ss_eit_render_action_panel',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    
    $items['ajax/ncn_admin/scopesheet/rd/%/action_submit'] = array(
        'page callback' => 'ncn_admin_ajax_ss_rd_action_submit',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/rd/%/delete'] = array(
        'page callback' => 'ncn_admin_ajax_ss_rd_delete',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/rd/%/render_rd_list'] = array(
        'page callback' => 'ncn_admin_ajax_ss_rd_render_list',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/rd/%/render_ss_rd_action_panel'] = array(
        'page callback' => 'ncn_admin_ajax_ss_rd_render_action_panel',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    
    $items['ajax/ncn_admin/scopesheet/smr/%/action_submit'] = array(
        'page callback' => 'ncn_admin_ajax_ss_smr_action_submit',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/smr/%/delete'] = array(
        'page callback' => 'ncn_admin_ajax_ss_smr_delete',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/smr/%/render_smr_list'] = array(
        'page callback' => 'ncn_admin_ajax_ss_smr_render_list',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/smr/%/render_ss_smr_action_panel'] = array(
        'page callback' => 'ncn_admin_ajax_ss_smr_render_action_panel',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    
    $items['ajax/ncn_admin/scopesheet/ep/%/get_action_panel'] = array(
        'page callback' => 'ncn_admin_ajax_ss_ep_get_action_panel',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/ep/%/action_submit'] = array(
        'page callback' => 'ncn_admin_ajax_ss_ep_action_submit',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/ep/%/delete'] = array(
        'page callback' => 'ncn_admin_ajax_ss_ep_delete',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/ep/%/render_ep_list'] = array(
        'page callback' => 'ncn_admin_ajax_ss_ep_render_list',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    $items['ajax/ncn_admin/scopesheet/ep/%/render_ss_ep_action_panel'] = array(
        'page callback' => 'ncn_admin_ajax_ss_ep_render_action_panel',
        'page arguments' => array(4), 
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );  // ncn_admin.page.inc
    
    
    $items['ncn_admin/user/admin_login/%'] = array(
        'page callback' => 'ncn_admin_user_login_program',
        'page arguments' => array(3), 
        'access arguments' => array('login for test'),
        'type' => MENU_CALLBACK,
    );
    
    $items['admin/delete_claim_additional_document/%/%'] = array(
    'page callback' => 'ncn_admin_delete_claim_additional_document',
        'page arguments' => array(2, 3), 
    'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
   );
    
    $items['user/back_to_admin'] = array(
        'page callback' => 'ncn_admin_user_back_to_admin',
        'access callback' => TRUE,
        'type' => MENU_CALLBACK,
    );
    
    $items['ncn_admin/testmail'] = array(
        'page callback' => 'testmail',
        'type' => MENU_CALLBACK,
        'access arguments' => FALSE,
    );
    
    ncn_admin_menu_note($items);
  
    $items['admin/config/ncn_admin/verify_payment_date'] = array(
        'title' => t('Verify Payment Date'),
        'page callback' => 'ncn_admin_verify_payment_date',
        'access arguments' => array('administer ncn_admin settings'),
        'type' => MENU_LOCAL_TASK,
        'weight' => 14,
    );
  
  return $items;
}


function testmail(){

    $_user = user_load(1013);
    profile_user_load(array($_user->uid => $_user));
    $member_type = get_member_type($_user);

    $node_title='Activation Mail (Gold)';
    $node_id = 55;
    if ($member_type == 0) {    // Gold Member
        $node_title='Activation Mail (Gold)';
        $node_id = 55;
    } else if ($member_type == 1) {
        $node_title='Activation Mail (Silver)';
        $node_id = 56;
    } else if ($member_type == 2) {
        $node_title='Activation Mail (Gold)';
        $node_id = 55;
    } else if ($member_type == 3) {
        $node_title='Activation Mail (Gold)';
        $node_id = 55;
    } else if ($member_type == 4) {
        $node_title='Activation Mail (Gold)';
        $node_id = 55;
    } else if ($member_type == 5) {
        $node_title='Activation Mail (Gold)';
        $node_id = 55;
    }

    $result = db_query('SELECT * FROM {node} WHERE type=:a AND nid=:b',array(':a'=>'attached_documents',':b'=>$node_id));

    if ($result->rowCount()>0)
    {
        foreach($result as $row)
        {
            $row = (array)$row;
            $node = node_load($row['nid']);
        }

        $index = 0;
        $atchfiles = array_pop($node->field_attach_docs);
        
        foreach ($atchfiles as $file)
        {
            $file['filepath'] = str_replace("public://","sites/default/files/",$file['uri']);
            $attaches['doc-'.$index] = $file['filepath'];
            $attache_names['doc-'.$index] = $file['filename'];
            $attach_mail_data[$file['description']] = array('filepath'=>$file['filepath']);
            $index++;
        }
    }

    $_params = array('!name'=>($_user->profile_firstname." ".$_user->profile_lastname) ,'!docs'=>$attach_mail_data);
    $ouput = ncn_admin_get_mail_body_from_template('create_user', $_params);
    print $ouput;
}


function ncn_admin_theme() {
    return array(
        'ncn_admin_scope_full_crop' => array(
            'arguments' => array('claim_id'=>0, 'room_name'=>'', 'img_path'=>''),
            'template' => 'ncn_admin_scope_full_crop',
        ),
        'ncn_admin_multi_file_list_form' => array(
              'arguments' => array('form' => NULL, 'claim_id'=>0, 'pvc_disabled'=>''),
        ),
    );
}

function template_preprocess_ncn_admin_scope_full_crop($vars) {
    
}

/**
    hook_user
*/
function ncn_admin_user($op, $edit, $account, $category = NULL) {
    switch ($op) {
    case 'login':
        if ( (isset($account->profile_memberid)&&is_member($account->profile_memberid)) || is_distributor($account) || is_associate($account) || is_subuser($account) || is_leaduser($account)) {
            drupal_goto('account');
        } else if (module_exists('ncn_ceportal') && is_claim_examiner($account)) {
            drupal_goto('ce_portal/home');
        } else {
            drupal_goto('admin');
            //drupal_goto('account');
        }
        break;
        
    case 'logout':
        /*$isRedirectHome = (isset($account->profile_memberid)&&is_member($account->profile_memberid)) || is_distributor($account) || is_associate($account) || is_subuser($account) || is_claim_examiner($account);
        if ($isRedirectHome) {
            drupal_goto();
        } else {
            drupal_goto('admin');
        }*/
        break;
    case 'delete':
        if (isset($account->profile_memberid)) {
        //  $query = "DELETE FROM member_id_pool WHERE member_id = '" . $account->profile_memberid . "' AND used = '1' ";
            $result = db_query('DELETE FROM {member_id_pool} WHERE member_id =:a AND used = 1',array(':a'=>$account->profile_memberid));
        //  $query = "DELETE FROM member_first_free WHERE member_id = '" . $account->profile_memberid . "' AND status = 1 ";
            $result = db_query('DELETE FROM {member_first_free} WHERE member_id = :a AND status = 1',array(':a'=>$account->profile_memberid));
        //  $query = "DELETE FROM member_gold_demo WHERE member_id = '" . $account->profile_memberid . "' AND status = 1 ";
            $result = db_query('DELETE FROM {member_gold_demo} WHERE member_id = :a AND status = 1',array(':a'=>$account->profile_memberid));
        //  $query = "DELETE FROM ncn_member_logo WHERE member_id = '" . $account->profile_memberid . "' AND status = 1 ";
            $result = db_query('DELETE FROM {ncn_member_logo} WHERE member_id = :a AND status = 1',array(':a'=>$account->profile_memberid));
        }
        break;
    }
}

//------------------------------------------------------------------------------
// see "ncn_message.module"
function ncn_admin_messages_markread()
{
    return ncn_message_markread();
}

//------------------------------------------------------------------------------
// see "ncn_message.module"
function ncn_admin_messages()
{
    return ncn_message_center();
}

//------------------------------------------------------------------------------
function ncn_admin_member_id_ranges()
{
    // check for access denied
    if (isset($GLOBALS['user']->roles[6]))
    {
        return("Access denied.");
    }


    // handle input
    if (isset($_POST['tfunction']))
    {
        $error = false;
    
        if ((!is_numeric($_POST['start'])) || (!is_numeric($_POST['end'])) )
        {
            drupal_set_message('Values must be numeric', 'error');
            $error = true;
        }
        else
        if ($_POST['start'] >= $_POST['end'])
        {
            drupal_set_message('End must be higher than start', 'error');
            $error = true;
        }
        
        // no errors
        if ($error == false)
        {
            // add range
        //  $query = "DELETE FROM member_id_ranges WHERE distributor = ".$_POST['distributor'];
            $result = db_query('DELETE FROM {member_id_ranges} WHERE distributor = :a',array(':a'=>$_POST['distributor']));

        //  $query = "INSERT INTO member_id_ranges VALUES(".$_POST['distributor'].", ".$_POST['start'].", ".$_POST['end'].");";
            $result = db_query('INSERT INTO {member_id_ranges} VALUES(:a,:b,:c)',
                array(':a'=>$_POST['distributor'],':b'=>$_POST['start'],':c'=>$_POST['end']));
            
            drupal_set_message('Range applied to distributor', 'status');
        }
    }
    

    // draw the page
    ob_start();

    ?>
    <fieldset>
    <legend>Add/Update range</legend>
    
    <form method="POST">
    <input type="hidden" name="tfunction" value="update_range">
        <table>
            <tr>
                <td>Distributor</td>
                <td><?php distributor_dropdown(); ?></td>
            </tr>
            <tr>
                <td>Start</td>
                <td><input type="text" name="start" value="<?=(isset($_POST['start'])? $_POST['start'] : ''); ?>">
            </tr>
            <tr>
                <td>End</td>
                <td><input type="text" name="end" value="<?=(isset($_POST['end'])? $_POST['end'] : ''); ?>">
            </tr>
            <tr>
                <td colspan=2><input type="submit" value="Add/Update Range"></td>
            </tr>
        </table>
    
    </form>
    
    </fieldset>
    <?php
    
    // show existing ranges
    ?>
    <fieldset>
    <legend>Existing Ranges</legend>
    
        <table class="sticky-enabled tableSelect-processed sticky-table">
        <thead class="tableHeader-processed">
            <th>Distributor</th>
            <th>Start Range</th>
            <th>End Range</th>
        </thead>
        <?php
        
    //  $query = "SELECT * FROM member_id_ranges";
        $result = db_query('SELECT * FROM {member_id_ranges}');
        foreach($result as $row)
        {
            $row = (array)$row;
            $user = user_load($row['distributor']);

            if (isset($user->name))
            {           
            
                ?>
                <tr>
                    <td><?= $user->profile_legalname; ?></td>
                    <td><?= $row['start']; ?></td>
                    <td><?= $row['end']; ?></td>
                </tr>
                <?php
            }
            
        }
        
        
        ?>
        </table>
    
    </fieldset>
    <?php

    // return
    $content = ob_get_contents();
    ob_end_clean();
    return $content;
}

//------------------------------------------------------------------------------
function distributor_dropdown($select_id = 0)
{
    if (is_distributor($GLOBALS['user']) == true)
    {
        // draw hidden input
        ?>
        <input type="hidden" name="distributor" value="<?= $GLOBALS['user']->uid; ?>">
        <?php   
    }
    /*else
    if  (is_account_manager($GLOBALS['user']) == true)
    {
        // get owner
        $query = "SELECT * FROM users_parent WHERE uid=".$GLOBALS['user']->uid;
        $result = db_query($query);

        foreach($result as $row)
        {
            $row = array($row);
            ?>
            <input type="hidden" name="distributor"  value="<?= $row['parent']; ?>">
            <?php   
        }
        
        // darw hidden input
    }*/
    else
    {
        $dists = get_distributor_list('active');
        ?>
        <select name="distributor">
        <?php
        if ($select_id) {
            $distributor = user_load($select_id);
            if (!$distributor) {
                print '<option value="'.$select_id.'" SELECTED >'.'User #'.$select_id.' (deleted)</option>';
            } elseif (!$distributor->status && is_distributor($distributor)) {
                print '<option value="'.$select_id.'" SELECTED >'.(isset($distributor->profile_legalname) && trim($distributor->profile_legalname)!='' ? $distributor->profile_legalname : $distributor->name ).' (blocked)</option>';
            }
        }

        foreach($dists as $row)
        {
            $user = user_load($row['uid']);
            //if (is_distributor($user)==true)
            {
                $selected = "";
                if ( $select_id == $row['uid']) { $selected = "selected"; }
                print '<option value="'.$row['uid'].'" '. $selected.' >'.(isset($user->profile_legalname) && trim($user->profile_legalname)!='' ? $user->profile_legalname : $user->name ).'</option>';
            }
        }
        ?>
        </select>
        <?php
    }


}

/* Added by sanjay  Lead User Dropdown list  */
/* Updated by kevin at Sep 5, 2017 */

function leaduser_dropdown($select_id = 0)
{
        // run through users
        $query = "SELECT usr_lead.*, usr.* FROM users_lead as usr_lead INNER JOIN users as usr  WHERE usr.uid = usr_lead.user_id AND usr.status != '0'";
        $result = db_query($query);
        ?>
        <select name="leaduser">
        <?php       
        foreach($result as $row)
        {
            $row = (array)$row;
            $selected = "";
            if ( $select_id == $row['uid']) { $selected = "selected"; }
            print '<option value="'.$row['uid'].'" '. $selected.' >'.$row['company_name'].'</a>';
        }
        ?>
        </select>
        <?php
}



function associate_dropdown($select_id = 0)
{
    if (is_associate($GLOBALS['user']) == true)
    {
        // draw hidden input
        ?>
        <input type="hidden" name="associate" value="<?= $GLOBALS['user']->uid; ?>">
        <?php   
    }
    /*else
    if  (is_account_manager($GLOBALS['user']) == true)
    {
        // get owner
        $query = "SELECT * FROM users_parent WHERE uid=".$GLOBALS['user']->uid;
        $result = db_query($query);
        
        foreach($result as $row)
        {
            $row = (array)$row;
            ?>
            <input type="hidden" name="distributor"  value="<?= $row['parent']; ?>">
            <?php   
        }
        
        // darw hidden input
    }*/
    else
    {
        $associates = get_associate_list('active');
        
        ?>
        <select name="associate">
        <?php
        $associate = user_load($select_id);
        if (!$associate) {
            print '<option value="'.$select_id.'" SELECTED >'.'User #'.$select_id.' (*deleted)</option>';
        } elseif (!$associate->status && is_associate($associate)) {
            print '<option value="'.$select_id.'" SELECTED >'.(isset($associate->profile_legalname) && trim($associate->profile_legalname)!='' ? $associate->profile_legalname : $associate->name ).' (blocked)</option>';
        }
        foreach($associates as $row)
        {
            $user = user_load($row['uid']);
            
            //if (is_associate($user)==true)
            {
                $selected = "";
                if ( $select_id == $row['uid']) { $selected ="selected"; }
                print '<option value="'.$row['uid'].'" '. $selected.' >'.(isset($user->profile_legalname) && trim($user->profile_legalname)!='' ? $user->profile_legalname : $user->name).'</option>';
            }
        }
        
        ?>
        </select>
        <?php
    }


}

//------------------------------------------------------------------------------
function account_manager_dropdown()
{
    // run through users
    $am_list = get_account_manager_list('active');
    ?>
    <select name="account_manager">
    <?php
    
    foreach($am_list as $row)
    {
        $user = user_load($row['uid']);
        
        //if (is_account_manager($user)==true)
        {
            print '<option value="'.$row['uid'].'">'.$user->profile_firstname.' '.$user->profile_lastname.'</a>';
        }
    }
    
    ?>
    </select>
    <?php
}

//------------------------------------------------------------------------------
function attempt_add_distributor_card()
{
  $date = explode("/", $_POST['profile_credit_card_expiration']);
  
  if (sizeof($date) == 2)
  {     $date = "20".$date[1]."-".$date[0];   }
  else
  {     $date = '';     }

  // add the user to cim
    $content =
        "<?xml version=\"1.0\" encoding=\"utf-8\"?>" .
        "<createCustomerProfileRequest xmlns=\"AnetApi/xml/v1/schema/AnetApiSchema.xsd\">" .
        MerchantAuthenticationBlock().
        "<profile>".
        "<merchantCustomerId>" . get_unique_auth_profile_id() . "</merchantCustomerId>". // Your own identifier for the customer.
        "<description>Distributor: ".$_POST['profile_firstname']." ".$_POST['profile_lastname']."</description>".
        "<email>" . $_POST["mail"] . "</email>".
        "</profile>".
        "</createCustomerProfileRequest>";  // <?php
    
    $response = send_xml_request($content);
    $parsedresponse = parse_api_response($response);
    if ($parsedresponse->messages->resultCode == 'Error') {
        drupal_set_message(t('Could not create user profile'), 'error');
        return false;
    }

    $customerProfileId = $parsedresponse->customerProfileId;
    
  // add a payment profile to cim
$content =
    "<?xml version=\"1.0\" encoding=\"utf-8\"?>" .
    "<createCustomerPaymentProfileRequest xmlns=\"AnetApi/xml/v1/schema/AnetApiSchema.xsd\">" .
    MerchantAuthenticationBlock().
    "<customerProfileId>" . $customerProfileId . "</customerProfileId>".
    "<paymentProfile>".
    "<billTo>".
     "<firstName>".$_POST['profile_firstname']."</firstName>".
     "<lastName>".$_POST['profile_lastname']."</lastName>".
//   "<country>".$_POST['profile_country']."</country>".
     "<address>".$_POST['profile_address']."</address>".
     "<city>".$_POST['profile_city']."</city>".
     "<state>".$_POST['profile_state']."</state>".
     "<zip>".$_POST['profile_zip']."</zip>".
     "<phoneNumber>000-000-0000</phoneNumber>".
    "</billTo>".
    "<payment>".
     "<creditCard>".
      "<cardNumber>".$_POST['profile_credit_card_number']."</cardNumber>".
      "<expirationDate>".$date."</expirationDate>". // required format for API is YYYY-MM
      "<cardCode>".$_POST['profile_credit_card_security']."</cardCode>".
     "</creditCard>".
    "</payment>".
    "</paymentProfile>".
    "<validationMode>liveMode</validationMode>". // or liveMode
    "</createCustomerPaymentProfileRequest>";   // <?php

    $response = send_xml_request($content);
    $parsedresponse = parse_api_response($response);

    // check for cc/details errors
    if ($parsedresponse->messages->resultCode == 'Error')
    {
        $msg = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $parsedresponse->messages->message->text);
    
        drupal_set_message($msg, 'error');
        //$form_state['redirect'] = 'apply.html?id='.$_GET['id'];
        return false;
    }

    $customerPaymentProfileId = $parsedresponse->customerPaymentProfileId;
    // add payment/customer profile to database
    // $query = "DELETE FROM member_distributor_cim WHERE username='".addslashes($_POST['name'])."'";
    $result = db_query('DELETE FROM {member_distributor_cim} WHERE username=:a',
        array(':a'=>$_POST['name']));
  
   // $query = "INSERT INTO member_distributor_cim VALUES ( NULL,
   //                                                      '".addslashes($_POST['name'])."',
   //                                                      '".addslashes($customerProfileId)."',
   //                                                      '".addslashes($customerPaymentProfileId)."'
   //                                                      );";
    $result = db_query('INSERT INTO member_distributor_cim VALUES(:a,:b,:c)',
    array(':a'=>$_POST['name'],':b'=>$customerProfileId,':c'=>$customerPaymentProfileId));
    return true;
}


//------------------------------------------------------------------------------
// delete claims from users that no longer exist
function ncn_admin_cleanup_claims()
{
    // delete claims from dead users
//  $query = "SELECT DISTINCT user_id FROM claims;";
    $result = db_query('SELECT DISTINCT user_id FROM claims');
    foreach($result as $row)
    {
        $row = (array)$row;
                
        // check to see if this user exists
    //  $query2 = "SELECT * FROM users WHERE uid=".$row['user_id'];
        $result2 = db_query('SELECT * FROM users WHERE uid=:a',array(':a'=>$row['user_id']));
        $row_count2 = $result2->rowCount();
        
        // user no longer exists...
        if ($row_count2 == 0)
        {
            // delete claims from this dead user
        //  $query2 = "DELETE FROM claims WHERE user_id=".$row['user_id'];
            $result2 = db_query('DELETE FROM {claims} WHERE user_id=:a',array(':a'=>$row['user_id']));
            
        }
    }
    
    
}

//------------------------------------------------------------------------------
function ncn_admin_mail($key, &$message, $params)
{
    $language = $message['language'];
    //$variables = user_mail_tokens($params['account'], $language);
    $options = array('langcode' => $message['language']->language); 
    
    switch ($key)
    {
        case "cronmail":
          $message['subject'] = t("Cron Run :: !date", $params, $options);
          $message['body'][] = t("Cron Run For !crontype", $params, $options);
        break;
    
        case "accountmanager":
          $message['subject'] = t(variable_get('ncn_accountmanager_signup_subject', ''), $params, $options);
          $message['body'][] = t(variable_get('ncn_accountmanager_signup_body', ''), $params, $options);
        break;

        case "distributor":
          $message['subject'] = t(variable_get('ncn_distributor_signup_subject', ''), $params, $options);
          $message['body'][] = t(variable_get('ncn_distributor_signup_body', ''), $params, $options);
        break;
        
        case "associate":
          $message['subject'] = t(variable_get('ncn_associate_signup_subject', ''), $params, $options);
          $message['body'][] = t(variable_get('ncn_associate_signup_body', ''), $params, $options);
        break;
        
        case "timer_alert":
          $message['subject'] = t(variable_get('ncn_timer_alert_subject', ''), $params, $options);
          $message['body'][] = t(variable_get('ncn_timer_alert_body', ''), $params, $options);
          break;
        case "timer_expired":
          $message['subject'] = t(variable_get('ncn_timer_expired_subject', ''), $params, $options);
          $message['body'][] = t(variable_get('ncn_timer_expired_body', ''), $params, $options);
          break;
        case "claim_status_change_notify":
          $headers = array(
            'MIME-Version' => '1.0',
            'Content-Type' => 'text/html; charset=UTF-8; format=flowed',
            'Content-Transfer-Encoding' => '8Bit',
            'X-Mailer' => 'Drupal'
          );
          foreach ($headers as $key => $value) {
            $message['headers'][$key] = $value;
          }
          $message['subject'] = $params['subject'];
          $message['body'][] = $params['body'];
          break;
        case "claim_status_change_esx_pdf_uploaded":
          $message['subject'] = $params['subject'];
          $message['body'][] = $params['body'];
          break;
          
        case "claim_docs_rejected":
          $message['subject'] = $params['subject'];
          $message['body'][] = ncn_admin_get_mail_body( '{reject_claim}', $message, $params );
          
          $_admin = user_load(1);
          $admin_mail = $_admin->mail;  //***
          $bcc = $admin_mail;
          
          //$bcc = get_claim_docs_rejected_bcc();
          //watchdog('check_rejected', t('Bcc mail(!bcc).'), array('!bcc'=>$bcc) );
          $message['headers']['Bcc'] = $bcc;
        
            $_claim_user = user_load($claim['user_id']);
            $_member = get_member_from_id($_claim_user->profile_memberid);
            if (!empty($_member)) {
                $_am = user_load($_member['am_uid']);
                $am_mail = $_am->mail;      //***
                if ($am_mail!='') { 
                    $Cc = $am_mail; 
                    $message['headers']['CC'] = $Cc;
                }
            }
          
      $message['headers']['Reply-To'] = "fax@netclaimsnow.com";
          break;
        case "member_login":
          $message['subject'] = "Congratulations!";
          $message['body'][] = ncn_admin_get_mail_body( '{member_login}', $message, $params );
          break;
        case "create_user": 
          $message['subject'] = "Thank You for activating your membership.";
          $message['body'][] = ncn_admin_get_mail_body( '{create_user}', $message, $params );
          
          $_admin = user_load(1);
          $admin_mail = $_admin->mail;  //***
          $bcc = $admin_mail;
          $message['headers']['Bcc'] = $bcc;
          
        break;
        case "not_received_docs":
          $message['subject'] = $params['subject'];
          $message['body'][] = ncn_admin_get_mail_body( '{not_received_docs}', $message, $params );
          break;
        case "congrats_claim_reminder":
          $message['subject'] = "Congratulations on creating your first claim with Net Claims Now!";
          $message['body'][] = ncn_admin_get_mail_body( '{congrats_claim_reminder}', $message, $params );
          break;
        case "order_claim":
          $message['subject'] = "Net Claims Now Claim Invoice";
          $message['body'][] = ncn_admin_get_mail_body( '{order_claim}', $message, $params );
          break;
        case "submit_change_order_requests":
          $message['subject'] = t( "Member(!member_id - !member_name) submitted change order requests for claim(#!claim_id)", 
                                                            array('!member_id'=>$params['member_id'], '!member_name'=>$params['member_name'], '!claim_id'=>$params['claim_id']) );
          $message['body'][] = ncn_admin_get_mail_body( '{submit_change_order_requests}', $message, $params );
          break;
        case "charge_change_order":
          $message['subject'] = $params['subject'];
          $message['body'][] = ncn_admin_get_mail_body( '{charge_change_order}', $message, $params );
          break;
    }
}

function ncn_admin_mail_alter(&$message) {
    if ($message['id'] == 'user_register_pending_approval') {   //"modulename_key"
        $_admin = user_load(1);
        $message['headers']['Bcc'] = $_admin->mail;
    } else {
        $_admin = user_load(1);
        $bcc = isset($message['headers']['Bcc'])?$message['headers']['Bcc']:'';
        if (strpos($bcc, $_admin->mail) === FALSE) {
            if (!empty($bcc)) {
                $bcc .= ", ";
            }
            $bcc .= $_admin->mail;
        }
        $message['headers']['Bcc'] = $bcc;
        
    }
    $message['from'] = "noreply@netclaimsnow.com";
    $message['headers']['From'] = "noreply@netclaimsnow.com";

    /////////////////////////////////////////
    // For Test
    if (defined('NCN_TEST')) {
        $message['subject'] = '[TEST - '.$message['to'].']-'.$message['subject'];
        $message['to'] = 'forward.morning@gmail.com';
        unset($message['headers']['Bcc']);
        unset($message['headers']['CC']);
    }
    
}
//------------------------------------------------------------------------------
// product/payment processor settings
function ncn_admin_page_product_settings()
{
    // check for access denied
    if (isset($GLOBALS['user']->roles[6]))
    {
        return("Access denied.");
    }


    drupal_set_title("Net Claims Now Email Settings");
    return drupal_get_form('ncn_admin_product_settings_form');
}

//------------------------------------------------------------------------------
// product/ordering settings form definition
function ncn_admin_product_settings_form($form_state)
{
    $form = array();
    $form['#attributes'] = array('enctype' => "multipart/form-data");

/*
        $form['pd'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Product details'), 
            '#weight' => 0, 
        );

        $form['pd']['product_title'] = array(
            '#type' => 'textfield', 
            '#title' => t('Product title (residential)'),
            '#default_value' => variable_get('ncn_product_title', ''),
        );

        $form['pd']['product_price'] = array(
            '#type' => 'textfield', 
            '#title' => t('Product price (residential)'),
            '#default_value' => variable_get('ncn_product_price', ''),
            '#field_prefix' => '$',
            '#size' => 7,
        );

        $form['pd']['product_title_commercial'] = array(
            '#type' => 'textfield', 
            '#title' => t('Product title (commercial)'),
            '#default_value' => variable_get('ncn_product_title_commercial', ''),
        );

        $form['pd']['product_price_commercial'] = array(
            '#type' => 'textfield', 
            '#title' => t('Product price (commercial)'),
            '#default_value' => variable_get('ncn_product_price_commercial', ''),
            '#field_prefix' => '$',
            '#size' => 7,
        );
*/      

        // terms and conditions
        $form['utac'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Terms and Conditions For New User'), 
            '#weight' => 1, 
        );

        $form['utac']['user_terms_text'] = array(
            '#type' => 'textarea', 
            '#title' => t('Terms and conditions (Create a New User)'),
            '#default_value' => variable_get('ncn_user_terms_text', ''),
        );
        
        $form['ndanu'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Non-Disclosure Agreement For New User'), 
            '#weight' => 2, 
        );

        $form['ndanu']['user_nda_text'] = array(
            '#type' => 'textarea', 
            '#title' => t('Non-Disclosure Agreement (Create a New User)'),
            '#default_value' => variable_get('ncn_user_nda_text', ''),
        );
        
        
        // terms and conditions
        $form['tac'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Terms and Conditions for Gold Member'), 
            '#weight' => 3, 
        );

        $form['tac']['terms_text'] = array(
            '#type' => 'textarea', 
            '#title' => t('Terms and conditions (pre-ordering)'),
            '#default_value' => variable_get('ncn_terms_text', ''),
        );
        
        $form['tac_silver'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Terms and Conditions for Silver Member'), 
            '#weight' => 4, 
        );

        $form['tac_silver']['terms_text_silver'] = array(
            '#type' => 'textarea', 
            '#title' => t('Terms and conditions (pre-ordering)'),
            '#default_value' => variable_get('ncn_terms_text_silver', ''),
        );
        
        $form['tac_gold_lite'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Terms and Conditions for Gold Lite Member'), 
            '#weight' => 4, 
        );

        $form['tac_gold_lite']['terms_text_gold_lite'] = array(
            '#type' => 'textarea', 
            '#title' => t('Terms and conditions (pre-ordering)'),
            '#default_value' => variable_get('ncn_terms_text_gold_lite', ''),
        );
        
        $form['tac_coach_on_call'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Terms and Conditions for Coach on Call Member'), 
            '#weight' => 4, 
        );

        $form['tac_coach_on_call']['terms_text_coach_on_call'] = array(
            '#type' => 'textarea', 
            '#title' => t('Terms and conditions (pre-ordering)'),
            '#default_value' => variable_get('ncn_terms_text_coach_on_call', ''),
        );
            
        
        // terms and conditions for creating a new user in distributor page
        $form['tnud'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Terms and conditions (for Distributor)'), 
            '#weight' => 5, 
        );

        $form['tnud']['terms_text_dist'] = array(
            '#type' => 'textarea', 
            '#title' => t('Terms and conditions (creating a new user)'),
            '#default_value' => variable_get('ncn_terms_text_dist', ''),
        );
        
        // terms and conditions for creating a new user in associate page
        $form['tnua'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Terms and Conditions for Associate'), 
            '#weight' => 6, 
        );

        $form['tnua']['terms_text_asso'] = array(
            '#type' => 'textarea', 
            '#title' => t('Terms and conditions (creating a new user)'),
            '#default_value' => variable_get('ncn_terms_text_asso', ''),
        );
        
        // Message and Alerts
        $form['maa'] = array(
            '#type' => 'fieldset', 
            '#title' => t('Message and Alerts'), 
            '#weight' => 9, 
        );
            
        $form['maa']['msg_title'] = array(
            '#type' => 'textfield', 
            '#title' => t('Title'),
            '#default_value' => variable_get('ncn_msg_alert_title', ''),
        );
            
        $form['maa']['body_text'] = array(
            '#type' => 'textarea', 
            '#title' => t('Body Text'),
            '#default_value' => variable_get('ncn_msg_alert_text', ''),
        );
            

    $form['ssubmit'] = array('#type' => 'submit', '#weight' => 101, '#value' => t('Save Settings'));
    
    return($form);
}

//------------------------------------------------------------------------------
// save product settings
function ncn_admin_product_settings_form_submit($form, &$form_state)
{
/*
    variable_set('ncn_product_title', t($form_state['values']['product_title']));
    variable_set('ncn_product_price', t($form_state['values']['product_price']));  
    variable_set('ncn_product_title_commercial', t($form_state['values']['product_title_commercial']));
    variable_set('ncn_product_price_commercial', t($form_state['values']['product_price_commercial']));
*/
      
    variable_set('ncn_user_terms_text', t($form_state['values']['user_terms_text']));  
    variable_set('ncn_user_nda_text', t($form_state['values']['user_nda_text']));  
    variable_set('ncn_terms_text', t($form_state['values']['terms_text']));  
    variable_set('ncn_terms_text_dist', t($form_state['values']['terms_text_dist']));  
    variable_set('ncn_terms_text_asso', t($form_state['values']['terms_text_asso']));  
    
    variable_set('ncn_terms_text_silver', t($form_state['values']['terms_text_silver']));  
    variable_set('ncn_terms_text_gold_lite', t($form_state['values']['terms_text_gold_lite']));  
    variable_set('ncn_terms_text_coach_on_call', t($form_state['values']['terms_text_coach_on_call']));  
    variable_set('ncn_msg_alert_title', t($form_state['values']['msg_title']));  
    variable_set('ncn_msg_alert_text', t($form_state['values']['body_text']));  
    
    // success!
    drupal_set_message('Product/ordering settings saved', 'status');
}


//------------------------------------------------------------------------------
// return email settings form
function ncn_admin_page_email_settings()
{
    // check for access denied
    if (isset($GLOBALS['user']->roles[6]))
    {
        return("Access denied.");
    }

    drupal_set_title("Net Claims Now Email Settings");
    return drupal_get_form('ncn_admin_email_settings_form');
}

//------------------------------------------------------------------------------
// email settings form definition
function ncn_admin_email_settings_form($form_state)
{
    $form = array();
    $form['#attributes'] = array('enctype' => "multipart/form-data");

    // new claim
    $form['front_end'] = array(
        '#type' => 'fieldset',
        '#title' => t('Front end contact form'),
        '#weight' => -1,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['front_end']['front_end_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_front_end_subject', ''),
    );
    $form['front_end']['front_end_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_front_end_body', ''),
    );

    // new claim customer
    $form['new_claim_customer'] = array(
        '#type' => 'fieldset',
        '#title' => t('New claim user confirmation'),
        '#weight' => 0,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['new_claim_customer']['new_claim_customer_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_new_claim_customer_subject', ''),
    );
    $form['new_claim_customer']['new_claim_customer_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_new_claim_customer_body', ''),
    );

    // new claim
    $form['new_claim'] = array(
        '#type' => 'fieldset',
        '#title' => t('New claim administrator confirmation'),
        '#weight' => 1,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['new_claim']['new_claim_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_new_claim_subject', ''),
    );
    $form['new_claim']['new_claim_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_new_claim_body', ''),
    );
    $form['new_claim']['new_claim_active'] = array(
        '#type' => 'checkbox',
        '#title' => t('Send new claim confirmation to administrator?'),
        '#default_value' => variable_get('ncn_new_claim_active', ''),
    );

    // user clicked "create my invoice"
    $form['create_my_invoice'] = array(
        '#type' => 'fieldset',
        '#title' => t('Create My Invoice Administrator/Account Manager confirmation'),
        '#weight' => 2,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['create_my_invoice']['create_my_invoice_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_create_my_invoice_subject', ''),
    );
    $form['create_my_invoice']['create_my_invoice_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_create_my_invoice_body', ''),
    );

    // approved
    $form['approved'] = array(
        '#type' => 'fieldset',
        '#title' => t('Claim approval notification (user)'),
        '#weight' => 3,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['approved']['approved_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_approved_subject', ''),
    );
    $form['approved']['approved_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_approved_body', ''),
    );
    $form['approved']['approved_active'] = array(
        '#type' => 'checkbox',
        '#title' => t('Send claim approval notice to user'),
        '#default_value' => variable_get('ncn_approved_active', ''),
    );

    // Message
    $form['generic'] = array(
        '#type' => 'fieldset',
        '#title' => t('Claim message notification (user)'),
        '#weight' => 4,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['generic']['generic_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_generic_subject', ''),
    );
    $form['generic']['generic_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_generic_body', ''),
    );

    // rejected
    $form['rejected'] = array(
        '#type' => 'fieldset',
        '#title' => t('Claim rejection notification (user)'),
        '#weight' => 5,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['rejected']['rejected_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_rejected_subject', ''),
    );
    $form['rejected']['rejected_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_rejected_body', ''),

    );

    // activation email
    $form['id_to_member'] = array(
        '#type' => 'fieldset',
        '#title' => t('Member Activation Email'),
        '#weight' => 6,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['id_to_member']['id_to_member_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_id_to_member_subject', ''),
    );
    $form['id_to_member']['id_to_member_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_id_to_member_body', ''),
    );

    // account manager signup
    $form['accountmanager_signup'] = array(
        '#type' => 'fieldset',
        '#title' => t('Account Manager Signup Email'),
        '#weight' => 7,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['accountmanager_signup']['accountmanager_signup_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_accountmanager_signup_subject', ''),
    );
    $form['accountmanager_signup']['accountmanager_signup_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_accountmanager_signup_body', ''),
    );

    // distributor signup
    $form['distributor_signup'] = array(
        '#type' => 'fieldset',
        '#title' => t('Distributor Signup Email'),
        '#weight' => 8,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['distributor_signup']['distributor_signup_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_distributor_signup_subject', ''),
    );
    $form['distributor_signup']['distributor_signup_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_distributor_signup_body', ''),
    );

    // timer_alert
    $form['timer_alert'] = array(
        '#type' => 'fieldset',
        '#title' => t('Claim Timer Alert When 2 Hours Remained'),
        '#weight' => 9,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['timer_alert']['timer_alert_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_timer_alert_subject', ''),
    );
    $form['timer_alert']['timer_alert_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_timer_alert_body', ''),
    );

    // timer_expired
    $form['timer_expired'] = array(
        '#type' => 'fieldset',
        '#title' => t('Message When Claim Timer Expired'),
        '#weight' => 10,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['timer_expired']['timer_expired_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_timer_expired_subject', ''),
    );
    $form['timer_expired']['timer_expired_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_timer_expired_body', ''),
    );

    // associate signup
    $form['associate_signup'] = array(
        '#type' => 'fieldset',
        '#title' => t('Associate Signup Email'),
        '#weight' => 11,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['associate_signup']['associate_signup_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_associate_signup_subject', ''),
    );
    $form['associate_signup']['associate_signup_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_associate_signup_body', ''),
    );

    // Rejected Claim Docs Mail
    $form['rejected_claim_docs_mail'] = array(
        '#type' => 'fieldset',
        '#title' => t('Rejected Claim Documents - Auto Mail'),
        '#weight' => 12,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['rejected_claim_docs_mail']['rejected_claim_docs_mail_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_rejected_claim_docs_mail_subject', ''),
    );
    $form['rejected_claim_docs_mail']['rejected_claim_docs_mail_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_rejected_claim_docs_mail_body', ''),
    );

    // ESX PDF Uploaded Auto Mail
    $form['esx_pdf_uploaded'] = array(
        '#type' => 'fieldset',
        '#title' => t('ESX PDF Uploaded - Auto Mail'),
        '#weight' => 13,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['esx_pdf_uploaded']['esx_pdf_uploaded_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_claim_status_esx_pdf_uploaded', ''),
    );

    // New Sub-user
    $form['id_to_subuser'] = array(
        '#type' => 'fieldset',
        '#title' => t('New Sub User Added Email'),
        '#weight' => 14,
        '#collapsible' => TRUE,
        '#collapsed' => TRUE,
    );
    $form['id_to_subuser']['id_to_subuser_subject'] = array(
        '#type' => 'textfield',
        '#title' => t('Subject'),
        '#default_value' => variable_get('ncn_id_to_subuser_subject', ''),
    );
    $form['id_to_subuser']['id_to_subuser_body'] = array(
        '#type' => 'textarea',
        '#title' => t('Body'),
        '#default_value' => variable_get('ncn_id_to_subuser_body', ''),
    );

    // Save Button
    $form['create_an_invoice'] = array(
        '#type' => 'submit',
        '#weight' => 15,
        '#value' => t('Save Email Templates')
    );

    return($form);
}

//------------------------------------------------------------------------------
// save email settings
function ncn_admin_email_settings_form_submit($form, &$form_state)
{
    // email
    variable_set('ncn_front_end_subject', t($form_state['values']['front_end_subject']));  
    variable_set('ncn_front_end_body', t($form_state['values']['front_end_body']));

    // email
    variable_set('ncn_create_my_invoice_subject', t($form_state['values']['create_my_invoice_subject']));  
    variable_set('ncn_create_my_invoice_body', t($form_state['values']['create_my_invoice_body']));

    // email
    variable_set('ncn_new_claim_subject', t($form_state['values']['new_claim_subject']));  
    variable_set('ncn_new_claim_body', t($form_state['values']['new_claim_body']));
    variable_set('ncn_new_claim_active', $form_state['values']['new_claim_active']);

    // email
    variable_set('ncn_new_claim_customer_subject', t($form_state['values']['new_claim_customer_subject']));  
    variable_set('ncn_new_claim_customer_body', t($form_state['values']['new_claim_customer_body']));
    
    // email
    variable_set('ncn_approved_subject', t($form_state['values']['approved_subject']));
    variable_set('ncn_approved_body', t($form_state['values']['approved_body']));
    variable_set('ncn_approved_active', $form_state['values']['approved_active']);

    // email
    variable_set('ncn_rejected_subject', t($form_state['values']['rejected_subject']));
    variable_set('ncn_rejected_body', t($form_state['values']['rejected_body']));
    variable_set('ncn_rejected_active', (isset($form_state['values']['rejected_active']) ? $form_state['values']['rejected_active'] : ''));

    // email
    variable_set('ncn_generic_subject', t($form_state['values']['generic_subject']));
    variable_set('ncn_generic_body', t($form_state['values']['generic_body']));
    variable_set('ncn_generic_active', (isset($form_state['values']['generic_active']) ? $form_state['values']['generic_active']:''));
    
    // email
    variable_set('ncn_id_to_member_subject', t($form_state['values']['id_to_member_subject']));
    variable_set('ncn_id_to_member_body', t($form_state['values']['id_to_member_body']));

    // sub user email
    variable_set('ncn_id_to_subuser_subject', t($form_state['values']['id_to_subuser_subject']));
    variable_set('ncn_id_to_subuser_body', t($form_state['values']['id_to_subuser_body']));
    
    // email
    variable_set('ncn_distributor_signup_subject', t($form_state['values']['distributor_signup_subject']));
    variable_set('ncn_distributor_signup_body', t($form_state['values']['distributor_signup_body']));
    
    variable_set('ncn_associate_signup_subject', t($form_state['values']['associate_signup_subject']));
    variable_set('ncn_associate_signup_body', t($form_state['values']['associate_signup_body']));
    
    variable_set('ncn_accountmanager_signup_subject', t($form_state['values']['accountmanager_signup_subject']));
    variable_set('ncn_accountmanager_signup_body', t($form_state['values']['accountmanager_signup_body']));
    
    variable_set('ncn_timer_alert_subject', t($form_state['values']['timer_alert_subject']));
    variable_set('ncn_timer_alert_body', t($form_state['values']['timer_alert_body']));
    
    variable_set('ncn_timer_expired_subject', t($form_state['values']['timer_expired_subject']));
    variable_set('ncn_timer_expired_body', t($form_state['values']['timer_expired_body']));
    
    variable_set('ncn_rejected_claim_docs_mail_subject', t($form_state['values']['rejected_claim_docs_mail_subject']));
    variable_set('ncn_rejected_claim_docs_mail_body', t($form_state['values']['rejected_claim_docs_mail_body']));
    
    variable_set('ncn_claim_status_esx_pdf_uploaded', t($form_state['values']['esx_pdf_uploaded_body']));
    
    // success!
    drupal_set_message('Email settings saved', 'status');
}

//------------------------------------------------------------------------------
// Implementation of hook_perm().
function ncn_admin_permission()
{
    /*return array(   'administer ncn_admin settings', 'administer ncn_admin_pool settings', 
                      'view ncn claim', 'login for test', 'payment transaction', 'ncn_admin view addtional claim data', 
                      'ncn_admin edit addtional claim data', 'ncn_admin view room scopesheet', 'ncn_admin edit room scopesheet', 
                      'ncn_admin edit username', 'ncn_admin edit member type', 'ncn_admin edit claim note'
    );*/
    
    return array(
        'administer ncn_admin settings' => array(
          'title' => t('administer ncn_admin settings'),
        ),
        'administer ncn_admin_pool settings' => array(
          'title' => t('administer ncn_admin_pool settings'),
        ),
        'view ncn claim' => array(
          'title' => t('view ncn claim'),
        ),      
        'login for test' => array(
          'title' => t('login for test'),
        ),
        'payment transaction' => array(
          'title' => t('payment transaction'),
        ),
        'ncn_admin view addtional claim data' => array(
          'title' => t('ncn_admin view addtional claim data'),
        ),
        'ncn_admin edit addtional claim data' => array(
          'title' => t('ncn_admin edit addtional claim data'),
        ),
        'ncn_admin view room scopesheet' => array(
          'title' => t('ncn_admin view room scopesheet'),
        ),
        'ncn_admin edit room scopesheet' => array(
          'title' => t('ncn_admin edit room scopesheet'),
        ),
        'ncn_admin edit username' => array(
          'title' => t('ncn_admin edit username'),
        ), 
        'ncn_admin edit member type' => array(
          'title' => t('ncn_admin edit member type'),
        ), 
        'ncn_admin edit claim note' => array(
          'title' => t('ncn_admin edit claim note'),
        )
    );  
    
}


//------------------------------------------------------------------------------
// entry function
function ncn_admin_page()
{
GLOBAL $base_url;

    drupal_add_js(drupal_get_path('module', 'ncn_admin') . '/ncn_admin.js');

    // start buffering
    ob_start();

    // check claim id
    $claim_id = intval(arg(4));
    
    // swicth functions
    switch (arg(3))
    {
        case "downloadxls":
            ncn_admin_download_xls($claim_id);
        break;

        case "downloadpdf":
            ncn_admin_download_pdf($claim_id);
        break;

        case "viewlog":
            ncn_admin_view_logfile($claim_id);
        break;

        case "viewclaim":
            ncn_admin_view_claim($claim_id);
        break;
        
        case "edit-additional-claim-data":
            ncn_admin_edit_additional_claim_data($claim_id);
        break;
        case "view-additional-claim-data":
          ncn_admin_view_additional_claim_data($claim_id);
        break;
    
        case "edit-room-scopesheet":
            $room_name = arg(5);
            ncn_admin_edit_room_scopesheet($claim_id, $room_name);
        break;
        case "view-room-scopesheet":
            $room_name = arg(5);
            ncn_admin_view_room_scopesheet($claim_id, $room_name);
            break;
        
        case "filter":
            ncn_admin_list_claims();
        break;      
        case "deleteclaim":
            ncn_admin_delete_claim($claim_id);
        break;
        default:
            if (stristr($_SERVER['REQUEST_URI'], 'ncn_admin_pool'))
            {
                Header("Location:".$base_url."/admin/config/ncn_admin_pool/filter/show all/user/show all");
            }
            else
            {
                Header("Location:".$base_url."/admin/config/ncn_admin/filter/show all/user/show all");
            }
            exit;
        break;
    }

    
    // return the content
    $content = ob_get_contents();
    ob_end_clean();
    return($content);
//  return system_settings_form($form);
}

/*
    $query = "";
    $result = db_query($query);
    $row_count = $result->rowCount();
    $row = (array)$result;
    
    mysql_real_escape_string
    mysql_insert_id();
*/

//------------------------------------------------------------------------------
// view individual claims' logfile
function ncn_admin_view_logfile($claim_id)
{
    GLOBAL $base_url;

    // page title
    drupal_set_title("Viewing logfile: ".$claim_id." (".ncn_cd($claim_id, 'customer_name').")");
    
    // draw the logfile
    ?>
    <table>
    <tbody>
        <thead class="tableHeader-processed">
        <tr>
            <th>Timestamp</th>
      <th>IP Address</th>
            <th>Message</th>
      <th>Mobile App</th>
        </tr>
        </thead>
    
    <?php
    
//  $query = "SELECT * FROM claims_log WHERE claim_id=".$claim_id." ORDER BY `timestamp` DESC;";
    $result = db_query('SELECT * FROM {claims_log} WHERE claim_id=:a ORDER BY timestamp DESC',array(':a'=>$claim_id));
    $row_count = $result->rowCount();
    
    
    for ($i=0; $i<$row_count; $i++)
    {
        $row = $result->fetchAssoc();
        
        ?>
        <tr class="<?php if ($i%2) print "even"; else print "odd"; ?>">
            <td>
                <?= date("D jS F Y h:i:s A", $row['timestamp']) ?>
            </td>
      <td><?= $row['ip_address']; ?></td>
            <td>
                <?= nl2br(StripSlashes($row['message'])); ?>
            </td>
      <td>
        <?= $row['app_track']; ?>
      </td>
        </tr>
        <?php
    }
    
    
    ?>
    </tbody>
    </table>
    <?php

}


function ncn_admin_table_pagniation($url, $total_count, $num_per_page, $page, $limit=10) {
    $num_page = ceil($total_count/$num_per_page);
    if ($num_page==1) return '';
    
    $content = "<div class='item-list'>";
    $content .= "<ul class='pager'>";

    if ($page>0) {
        $content .= "<li class='pager-first'><a href='$url'>&laquo; first</a></li>";
    }
    if ($limit<$total_count) {
        $first = ($page-(int)($limit/2)); 
        if ($first<0) {$first = 0;}
        $last = $first+$limit;
        if ($last > $num_page ) {
            $last = $num_page;
            $first = $last - $limit;
            if ($first<0) {$first = 0;}
        }
        for ($index = $first; $index<$last; $index++) {
            if ($index == $page) {
                $content .= "<li class='pager-current'>".($index+1)."</li>";
            } else {
                $content .= "<li class='pager-item'><a href='$url?page=$index'>".($index+1)."</a></li>";
            }
        }
    } else {
        for ($index = 0; $index<$num_page; $index++) {
            if ($index == $page) {
                $content .= "<li class='pager-current'>".($index+1)."</li>";
            } else {
                $content .= "<li class='pager-item'><a href='$url?page=$index'>".($index+1)."</a></li>";
            }
        }
    }
    if ($page<($num_page-1)) {
        $content .= "<li class='pager-last'><a href='$url?page=".($num_page-1)."'>last &raquo;</a></li>";
    }
    $content .= "</ul>";
    $content .= "</div>";
    
    return $content;
}

//------------------------------------------------------------------------------
function ncn_debug_message($message)
{
    if (isset($GLOBALS['ncn_debug']) && $GLOBALS['ncn_debug'] == true)
    {
        drupal_set_message($message, 'error');
    }
}

//------------------------------------------------------------------------------
function ncn_admin_serve_user_document()
{
    $error = false;
    
    // check numeric
    if ((!is_numeric(arg(2))) || (!is_numeric(arg(3))))
    {   $error = true;      }
    else
    { 

    //  $query = "SELECT * FROM member_documents WHERE id=".arg(2)." AND uid=".arg(3);
        $result = db_query('SELECT * FROM {member_documents} WHERE id=:a  AND uid=:b',
            array(':a'=>arg(2),':b'=>arg(3)));
        $row_count = $result->rowCount();
        
        if ($row_count > 0)
        {
            // server the file
            $row = $result->fetchAssoc();
            
            header('Content-type: '.$row['filemime']);
            header('Content-Disposition: attachment; filename="'.$row['filename'].'"');
            readfile($row['filepath']);
            exit;
            
        }
        // not found
        else
        {   $error = true;  }
        
    }
    
    // check errors
    if ($error == true)
    {
        ?>
        <script type="text/javascript">
        history.go(-1);
        </script>
        <?php
        exit;
    }

}

//------------------------------------------------------------------------------
function ncn_admin_delete_user_document()
{

    if ((!is_numeric(arg(2))) || (!is_numeric(arg(3))))
    {   
        drupal_set_message('There was a problem with the url.', 'error');
        Header("Location:/admin");  
    }
    else
    {
        // delete the doc
//      $query = "DELETE FROM member_documents WHERE id=".arg(2)." AND uid=".arg(3);
        $result = db_query('DELETE FROM {member_documents} WHERE id=:a AND uid=:b',array(':a'=>arg(2),':b'=>arg(3)));

        // success
        drupal_set_message("User document deleted.", 'status');
    
        // bounce back to user edit page (as this si the only place you can delete user documents)
        Header("Location:/admin/user/user/edit_user/".arg(3));
    }
    
    exit;
    

}

function get_member_from_id($member_id) {
    $query = db_query('SELECT * FROM member_id_pool WHERE member_id=:a',array(':a'=>$member_id));
//    $result = db_select('member_id_pool', 'n')
//        ->fields('n')
//        ->condition('member_id',$member_id,'=')
//        ->execute();
    $result = $query;
    if ($result && $result->rowCount()>0) {
        $member = $result->fetchAssoc();
        //$member = (array)$result;
        return $member;
    }
    
    return array();
}

function get_item_from_key($data, $key, $val) {
    for ($i=0; $i<count($data); $i++){
        $item = $data[$i];
        if ($item[$key] == $val) {
            return $item;
        }
    }
    
    return false;
}

/*
 * Track user to accept NDA.
 */
function ncn_track_nda_log($member_id) {
    $timestamp = date('U');
    $ip_addr = $_SERVER['REMOTE_ADDR'];
    $member = get_member_from_id($member_id);
    
    //$query = "INSERT INTO nda_log VALUES(NULL, '$ip_addr', '$member_id', $timestamp, '".$member['first_name']."', '".$member['last_name']."')";
    $result = db_query('INSERT INTO {nda_log} VALUES(NULL,:a,:b,:c,:d,:e)',
        array(':a'=>$ip_addr,':b'=>$member_id,':c'=>$timestamp,':d'=>$member['first_name'],':e'=>$member['last_name']));
    if (!$result) {
        watchdog('nda_log', 'Failed to log nda-track from %ip_addr (member_id: %member_id, date: %date)', array('%ip_addr'=>$ip_addr, '%member_id'=>$member_id, '%date'=>date('d M Y H:i:s', $timestamp)));
    }
}

/*
 * Track IP Address List Page
 */
function ncn_admin_nda_log() {
    drupal_add_js(drupal_get_path('module', 'ncn_admin') . '/ncn_admin.js');
    
//  $query = "SELECT * FROM nda_log ORDER BY timestamp DESC";
    $result = db_query('SELECT * FROM {nda_log} ORDER BY timestamp DESC');
    $row_count = $result->rowCount();
    
    $table_head = '
    <thead class="tableHeader-processed">
        <th>Date</th>
        <th>IP Addresss</th>
        <th>Member ID</th>
        <th>First Name</th>
        <th>Last Name</th>
    </thead>
    <tbody>';

    $table_foot = '
    </tbody>
    </table>';
    
    ob_start();
    
    // no results message
    if ($row_count == 0)
    {
        print "<table>";
        print $table_head;
        ?>
        <tr><td colspan=5>No results</td></tr>
        <?php
        print $table_foot;
        
    }
    
    $count = 0;
    $num_per_page = 50;
    $on_page = 0;
    $current_page = 1;

    for ($i=0; $i<$row_count; $i++)
    { 
        // get data
        $row = $result->fetchAssoc();
        $_first_name = $row['m_first_name'];
        $_last_name = $row['m_last_name'];
        
        $member_id = $row['member_id'];
        $member = get_member_from_id($member_id);
        
        if (empty($member)) {
            $member_id .= "(*removed)";
        } else {
            $_first_name = $member['first_name'];
            $_last_name = $member['last_name'];
        }
        
    // header?
        if ($on_page == 0)
        {
            if ($current_page == 1)
            {   ?><table class="sticky-enabled tableSelect-processed sticky-table page_table" id="page_table_<?= $current_page; ?>"><?php   }
            else
            {   ?><table class="sticky-enabled tableSelect-processed sticky-table page_table"  id="page_table_<?= $current_page; ?>" style="display:none;"><?php    }
                
            print $table_head;  
        }
    
        // draw row
        ?>
        <tr class="<?php if ($count%2) print "even"; else print "odd"; ?>">
            <td><?= date('d M Y H:i:s', $row['timestamp']); ?></td>
            <td><?= $row['ip_addr']; ?></td>
            <td><?= $member_id; ?></td>
            <td><?= $_first_name; ?></td>
            <td><?= $_last_name; ?></td>
        </tr>
        <?php

        // update page count            
        $count++;
        $on_page++;
        
        // check end of page
        if ($on_page == $num_per_page)
        {
            ?>
            <?php               
        
            print $table_foot;
            
            $on_page = 0;
            $current_page += 1;
        }
    }
        
    if ($on_page == 0) {
        $current_page -= 1;
    }
    // end pagination
    ?>
    <table class="sticky-enabled tableSelect-processed sticky-table">
    <tbody>
    <tr>
        <td colspan="7" align="right">
            
            <?php
                if ($current_page > 1) {
                    echo t("Page:");
                
                    for ($i=1; $i<= $current_page; $i++)
                    {
                        if ($i > 1)
                        {   
                            print " | ";
                            $page_text = '<u>'.$i.'</u>';   
                        }
                        else
                        {   $page_text = '<strong><u>'.$i.'</u></strong>';  }   
                        
                        
                        ?>
                        <a href="#" onclick="change_list_page(<?= $i; ?>);" id="page_link_<?= $i; ?>"><?= $page_text; ?></a>
                        <?php
                    }
                }
                //$current_page;
            ?>
        </td>
    </tr>
    </tbody>
    </table>
    <?php
    
    // javascript list of page
    ?>
    <script type="text/javascript">
        var total_list_pages = <?= $current_page; ?>;
    </script>
<?php   
    $content = ob_get_contents();
    ob_end_clean();
    return $content;
}

function ncn_admin_create_user_get_doc_info_by_hint($docs, $hint) {
  foreach( $docs as $name=>$data ) {
    if (strpos(strtolower($name), strtolower($hint)) !== FALSE) {
      return $data;
    }
  }  
  return array();
}
