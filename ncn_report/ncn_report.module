<?php

require_once('ncn_report.inc');
require_once('ncn_report.month.inc');
require_once('ncn_report.mobile.inc');

/**
hook_init function
*/
function ncn_report_init() {
	drupal_add_css(drupal_get_path('module', 'ncn_report').'/ncn_all.css', 'module', 'all', FALSE);
	drupal_add_css(drupal_get_path('module', 'ncn_report').'/jquery_redmond/jquery.ui.all.css', 'module', 'all', FALSE);
	
	drupal_add_js(drupal_get_path('module', 'ncn_report') . '/ncn_report.js');
	drupal_add_js(drupal_get_path('module', 'ncn_report') . '/jquery.ui.core.js');
	drupal_add_js(drupal_get_path('module', 'ncn_report') . '/jquery.ui.widget.js');
	drupal_add_js(drupal_get_path('module', 'ncn_report') . '/jquery.ui.datepicker.js');
	//drupal_add_js(drupal_get_path('module', 'ncn_report') . '/jquery-1.6.2.js');
}

//------------------------------------------------------------------------------
// Implementation of hook_perm().
function ncn_report_permission()
{
	return array(
			    	'ncn sales report' =>  array(
				      'title' => t('ncn sales report'),
    				),	
				);	
}

function ncn_report_menu()
{
	$items = array();
	$items['admin/config/ncn_report'] = array(
		'title' => 'Net Claims Now Sales Report',
		'page callback' => 'ncn_report_daily',
		'access arguments' => array('ncn sales report'),
	);
	$items['admin/config/ncn_report/daily'] = array(
		'title' => 'Daily Report',
		'page callback' => 'ncn_report_daily',
		'access arguments' => array('ncn sales report'),
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight' => 0,
	);
	$items['admin/config/ncn_report/daily'] = array(
		'title' => 'Daily Report',
		'page callback' => 'ncn_report_daily',
		'access arguments' => array('ncn sales report'),
		'type' => MENU_LOCAL_TASK,
		'weight' => 0,
	);
	$items['admin/config/ncn_report/weekly'] = array(
		'title' => 'Weekly Report',
		'page callback' => 'ncn_report_weekly',
		'access arguments' => array('ncn sales report'),
		'type' => MENU_LOCAL_TASK,
		'weight' => 1,
	);
	$items['admin/config/ncn_report/monthly'] = array(
		'title' => 'Monthly Report',
		'page callback' => 'ncn_report_monthly',
		'access arguments' => array('ncn sales report'),
		'type' => MENU_LOCAL_TASK,
		'weight' => 2,
	);
	$items['admin/config/ncn_report/sales_summary'] = array(
		'title' => 'Monthly Sales Summary Report',
		'page callback' => 'ncn_report_sales_summary',
		'access arguments' => array('ncn sales report'),
		'type' => MENU_LOCAL_TASK,
		'weight' => 3,
	);
	$items['admin/config/ncn_report/sales_detailed'] = array(
		'title' => 'Detailed Monthly Sales Report',
		'page callback' => 'ncn_report_sales_detailed',
		'access arguments' => array('ncn sales report'),
		'type' => MENU_LOCAL_TASK,
		'weight' => 4,
	);
	$items['admin/config/ncn_report/company_sales_summary'] = array(
		'title' => 'Company Sales Summary Report',
		'page callback' => 'ncn_report_company_sales_summary',
		'access arguments' => array('ncn sales report'),
		'type' => MENU_LOCAL_TASK,
		'weight' => 5,
	);

	$items['download/ncn_report'] = array(
		'page callback' => 'ncn_report_download',
		'type' => MENU_CALLBACK,
		'access arguments' => array('ncn sales report'),
	);
	$items['download/distributor/ncn_report'] = array(
		'page callback' => 'ncn_report_download_distributor',
		'type' => MENU_CALLBACK,
		'access arguments' => array('ncn sales report'),
	);
	$items['download/associate/ncn_report'] = array(
		'page callback' => 'ncn_report_download_associate',
		'type' => MENU_CALLBACK,
		'access arguments' => array('ncn sales report'),
	);
	$items['download/distributor/detailed/ncn_report'] = array(
		'page callback' => 'ncn_report_download_monthly_detailed',
		'page arguments' => array('distributor'),
		'type' => MENU_CALLBACK,
		'access arguments' => array('ncn sales report'),
	);
	$items['download/associate/detailed/ncn_report'] = array(
		'page callback' => 'ncn_report_download_monthly_detailed',
		'page arguments' => array('associate'),
		'type' => MENU_CALLBACK,
		'access arguments' => array('ncn sales report'),
	);
	$items['download/company_sales_summary/ncn_report'] = array(
		'page callback' => 'ncn_report_download_company_sales_summary',
		'type' => MENU_CALLBACK,
		'access arguments' => array('ncn sales report'),
	);

	$items['admin/config/ncn_member_renewal_report'] = array(
		'title' => 'Net Claims Now Member Renewal Report',
		'page callback' => 'ncn_member_renewal_report_daily',
		'access arguments' => array('ncn sales report'),
	);
	$items['admin/config/ncn_member_renewal_report/daily'] = array(
		'title' => 'Daily Report',
		'page callback' => 'ncn_member_renewal_report_daily',
		'access arguments' => array('ncn sales report'),
		'type' => MENU_DEFAULT_LOCAL_TASK,
		'weight' => 0,
	);
    $items['admin/config/ncn_member_renewal_report/daily'] = array(
        'title' => 'Daily Report',
        'page callback' => 'ncn_member_renewal_report_daily',
        'access arguments' => array('ncn sales report'),
        'type' => MENU_LOCAL_TASK,
        'weight' => 1,
    );
	$items['admin/config/ncn_member_renewal_report/weekly'] = array(
		'title' => 'Weekly Report',
		'page callback' => 'ncn_member_renewal_report_weekly',
		'access arguments' => array('ncn sales report'),
		'type' => MENU_LOCAL_TASK,
		'weight' => 2,
	);
	$items['admin/config/ncn_member_renewal_report/monthly'] = array(
		'title' => 'Monthly Report',
		'page callback' => 'ncn_member_renewal_report_monthly',
		'access arguments' => array('ncn sales report'),
		'type' => MENU_LOCAL_TASK,
		'weight' => 3,
	);

	$items['admin/config/ncn_montly_overview_report'] = array(
    'title' => 'Net Claims Now Monthly Payment Transaction Report',
    'page callback' => 'ncn_report_montly_overview_report',
    'access arguments' => array('ncn sales report'),
  );

  $items['admin/config/ncn_admin/monthly_claims_on_mobile_app'] = array(
    'title' => 'Claims on Mobile',
    'page callback' => 'ncn_report_mobile_monthly_claims_on_mobile_app',
    'access arguments' => array('administer ncn_admin config'),
    'weight' => 12,
  );

  $items['download/claims_on_mobile/ncn_report'] = array(
    'page callback' => 'ncn_report_download_claims_on_mobile',
    'type' => MENU_CALLBACK,
    'access arguments' => array('ncn sales report'),
  );

	return $items;
}

//------------------------------------------------------------------------------
/**
NCN Report API
*/
function _ncn_report_product_type($product_id) {
  //  var_dump($product_id);
	$_node = node_load($product_id);
  //  var_dump($_node->model);
   // var_dump($product_id);
	$type = '';
	
	switch ($product_id) {
	case 34:
		$type = 'SUF-F'; break;		//Start-Up Fees (Full)			// $329.00
	case 40:
		$type = 'SUF-F'; break;		//Start-Up Fees (Full)			// $429.00
	case 41:
		$type = 'SUF-P'; break;		//Start-Up Fees (Partial)		// $149.00
	case 42:
		$type = 'SUF-P'; break;		//Start-Up Fees (Partial)		// $249.00
	default:
		if ($_node) {
			$type = $_node->model;
		}
		break;
	/*	
	case 33:
		$type = 'SUF-DF'; break;	//Start-Up Fees (Dist. Full)	// $279.00
	case 43:
		$type = 'SUF-DP'; break;	//Start-Up Fees (Dist. Partial)	// $99.00
	case 32:
		$type = 'MMF'; break;		//Monthly Membership Fees		// $99.00
	case 44:
		$type = 'MFF'; break;		//Monthly Finance Fees			// $77.00
		
	case 47:
	case 57:
	case 68:
		$type = 'SUF-GMS'; break;		//Start-Up Fees (GOLD MEMBER SPECIAL)			// $99.00
	case 48:
		$type = 'SUF-GMSD'; break;		//Start-Up Fees (GOLD MEMBER SPECIAL, Dist.)	// $49.00
	*/
	// Claim Invoice
	/*
	case 18: case 30: case 58: case 59: case 60: case 61: case 53: case 62:
	case 45: case 46: case 63: case 64: case 65: case 66: case 67: case 54:
	
	case 69: case 70: case 71: case 72: case 73: case 74: case 75: case 76:
	case 77: case 78: case 79: case 80: case 81: case 82: case 83: case 84:
	*/
	}
	
	return $type;
}

/**
 * Add a payment( positive ) 
 */
function ncn_report_payment_log($product_id, $status, $user, $member_id=0, $target_mid=0, $claim_id=0, $owner_id=0, $price=0) {
	$ptype = _ncn_report_product_type($product_id);

   	$mid = "0";
	$uid = 0;
	if ($user == null) {
		$mid = $member_id;
	} else {
		$puser = user_load($user->uid);
		$uid = $user->uid;
		if (isset($puser->profile_memberid)) {
			$mid = $puser->profile_memberid;
		}
	}	
	$node = node_load($product_id);
	$node->data = unserialize($node->data);
	if ($price == 0) {
        $price = $node->sell_price;
	}
	
	$timestamp = time();
	$ref_pid = 0;
	$refund  = 0;

	$result = db_query('INSERT INTO {payment_log} (ptype, product_id, cost, uid, member_id, target_mid, claim_id, timestamp, status, ref_pid, refund) VALUES(:a,:b,:c,:d,:e,:f,:g,:h,:i,:j,:k)',array(':a'=>$ptype,':b'=>$product_id,':c'=>$price,':d'=>$uid,':e'=>$mid,':f'=>$target_mid,':g'=>$claim_id,':h'=>$timestamp,':i'=>$status,':j'=>$ref_pid,':k'=>$refund));

	if (!$result) {
		watchdog( 'payment_log', "ptype: %ptype, product_id: %product_id, cost: %cost, uid: %uid, member_id: %member_id, target_mid:%target_mid, time: %timestamp, status:%status", array('%ptype'=>$ptype, '%product_id'=>$product_id, '%cost'=>$price, '%uid'=>$uid, '%member_id'=>$mid, '%target_mid'=>$target_mid, '%timestamp'=>date("m/d/Y H:i:s",$timestamp), '%status'=>$status));
	} else {
		$pid = db_query('SELECT pid FROM {payment_log} WHERE timestamp=:d AND member_id=:s', array(':d'=>$timestamp,':s'=>$mid))->fetchField();
		ncn_report_insert_payment_ncn($pid, $owner_id);		
		return $pid;
	}	
	return 0;
}

function ncn_report_insert_date_script($onSelect='on_change_report_time') {
	global $base_url;	
	$output = "
		<script>
		jQuery(function() {
		jQuery( '#datepicker' ).datepicker({
			showOn: \"button\",
			buttonImage: \"$base_url/".drupal_get_path('module', 'ncn_report')."/images/calendar.gif\",
			buttonImageOnly: true,
			dateFormat: 'yy/mm/dd',
			onSelect: ".$onSelect."
		});
	});
	</script>
	";
	
	return $output;
}

function ncn_report_daily() {
GLOBAL $base_url;

	$data = array();
	$total= array();
	
	$report_date = 0;
	if ( arg(4) == "" ) {
		$report_date = time();
	} else {
		$report_date = arg(4);
	}
	
	
	$next_day = strtotime("+1 day", $report_date);
	$last_day = strtotime("-1 day", $report_date);
	
	$url = $base_url."/admin/config/ncn_report/daily/";
	if (isset($_REQUEST['rsd'])) {
		$report_date = strtotime($_REQUEST['rsd']);
		$timezone = variable_get('date_default_timezone', 0);
		$report_date -= $timezone;
		drupal_goto($url.$report_date);
		exit;
	}
	$download_url = $base_url."/download/ncn_report/daily?date=$report_date";
	_ncn_report_get_data($data, $total, $report_date, "daily");
	$best_total = ncn_report_get_best_total_value($total['1'], $report_date, 'daily');
	ob_start();
?>
<div class="sales-report-header clear-block">
	<div class="report-date">
		<span><a href="<?php echo $url; ?>">[Today]</a></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span><a href="<?php echo $url.$last_day; ?>" title="<?php echo date("Y/m/d", $last_day); ?>">[Last]</a></span>&nbsp;&nbsp;
		<span><input type="text" id="datepicker" value="<?php echo date("Y/m/d", $report_date); ?>" size="10" readonly></span>&nbsp;
		<span><a href="<?php echo $url.$next_day; ?>" title="<?php echo date("Y/m/d", $next_day); ?>">[Next]</a></span>&nbsp;&nbsp;
	</div>
	<input type="hidden" id="report_url" value="<?php echo $url; ?>" />
	<?php echo ncn_report_insert_date_script(); ?>
	<div class="download-report">
		<a href="<?php echo $download_url; ?>">download report</a>
	</div>
</div>
<?php
	build_table($data, $total, $best_total, TRUE);
	$content = ob_get_contents();
	ob_end_clean();
	return $content;
}

function ncn_report_weekly() {
GLOBAL $base_url;

	$data = array();
	$total= array();
	
	$report_date = 0;
	if ( arg(4) == "" ) {
		$report_date = time();
	} else {
		$report_date = arg(4);
	}
	
	$next_week = strtotime("+1 week", $report_date);
	$last_week = strtotime("-1 week", $report_date);
	
	$url = $base_url."/admin/config/ncn_report/weekly/";
	if (isset($_REQUEST['rsd'])) {
		$report_date = strtotime($_REQUEST['rsd']);
		$timezone = variable_get('date_default_timezone', 0);
		$report_date -= $timezone;
		drupal_goto($url.$report_date);
		exit;
	}
	
	$download_url = $base_url."/download/ncn_report/weekly?date=$report_date";
	
	$to = strtotime("next monday", $report_date);
	$from = strtotime("last monday", $to);
	
	_ncn_report_get_data($data, $total, $report_date, "weekly");
	$best_total = ncn_report_get_best_total_value($total['1'], $report_date, 'weekly');
	
	ob_start();
?>
<div class="sales-report-header clear-block">
	<div class="report-date">
		<span><a href="<?php echo $url; ?>">[This Week]</a></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span><a href="<?php echo $url.$last_week; ?>" title="<?php echo date("Y/m/d", strtotime("-1 week", $from)); ?> to <?php echo date("Y/m/d", strtotime("-1 day", $from)); ?>">[Last]</a></span>&nbsp;&nbsp;
		<span><input type="text" id="datepicker" value="<?php echo date("Y/m/d", $from); ?> ~ <?php echo date("Y/m/d", strtotime("-1 day", $to)); ?>" size="25" readonly></span>&nbsp;
		<span><a href="<?php echo $url.$next_week; ?>" title="<?php echo date("Y/m/d", $to); ?> to <?php echo date("Y/m/d", strtotime("+6 day", $to)); ?>">[Next]</a></span>&nbsp;&nbsp;
	</div>
	<input type="hidden" id="report_url" value="<?php echo $url; ?>" />
	<?php echo ncn_report_insert_date_script(); ?>
	<div class="download-report">
		<a href="<?php echo $download_url; ?>">download report</a>
	</div>
</div>
<?php 			
	build_table($data, $total, $best_total, TRUE);
	$content = ob_get_contents();
	ob_end_clean();
	return $content;
}

function ncn_report_monthly() {
GLOBAL $base_url;

	$data = array();
	$total= array();
	
	$report_date = 0;
	if ( arg(4) == "" ) {
		$report_date = time();
	} else {
		$report_date = arg(4);
	}
	
	
	$next_month = strtotime("+1 month", $report_date);
	$last_month = strtotime("-1 month", $report_date);
	
	$url = $base_url."/admin/config/ncn_report/monthly/";
	if (isset($_REQUEST['rsd'])) {
		$report_date = strtotime($_REQUEST['rsd']);
		$timezone = variable_get('date_default_timezone', 0);
		$report_date -= $timezone;
		drupal_goto($url.$report_date);
		exit;
	}
	$download_url = $base_url."/download/ncn_report/monthly?date=$report_date";
	
	_ncn_report_get_data($data, $total, $report_date, "monthly");
	$best_total = ncn_report_get_best_total_value($total['1'], $report_date, 'monthly');
	
	ob_start();
?>
<div class="sales-report-header clear-block">
	<div class="report-date">
		<span><a href="<?php echo $url; ?>">[This Month]</a></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span><a href="<?php echo $url.$last_month; ?>" title="<?php echo date("F Y", $last_month); ?>">[Last]</a></span>&nbsp;&nbsp;
		<span><input type="text" id="datepicker" value="<?php echo date("F Y", $report_date); ?>" size="15" readonly></span>&nbsp;
		<span><a href="<?php echo $url.$next_month; ?>" title="<?php echo date("F Y", $next_month); ?>">[Next]</a></span>&nbsp;&nbsp;
	</div>
	<input type="hidden" id="report_url" value="<?php echo $url; ?>" />
	<?php echo ncn_report_insert_date_script(); ?>
	<div class="download-report">
		<a href="<?php echo $download_url; ?>">download report</a>
	</div>
</div>
<?php 			
	build_table($data, $total, $best_total, TRUE);
	$content = ob_get_contents();
	ob_end_clean();
	return $content;
}

function ncn_report_sales_summary() {
	$dist_asso = arg(4);
	
	if ($dist_asso == "") {
		$dist_asso = 'distributor';
	}
	if ($dist_asso == 'distributor') {
		return ncn_report_distributor();
	} else if ($dist_asso == 'associate') {
		return ncn_report_associate();
	}
}

function ncn_report_distributor() {
	$data = array();
	
	$report_date = 0;
	if ( arg(5) == "" ) {
		$report_date = time();
	} else {
		$report_date = arg(5);
	}
	
	
	$next_month = strtotime("+1 month", $report_date);
	$last_month = strtotime("-1 month", $report_date);
	
	global $base_url;
	
	$url_switch = $base_url."/admin/config/ncn_report/sales_summary";
	$url = $base_url."/admin/config/ncn_report/sales_summary/distributor/";
	if (isset($_REQUEST['rsd'])) {
		$report_date = strtotime($_REQUEST['rsd']);
		$timezone = variable_get('date_default_timezone', 0);
		$report_date -= $timezone;
		drupal_goto($url.$report_date);
		exit;
	}
	$download_url = $base_url."/download/distributor/ncn_report/?date=$report_date";
	
	_ncn_report_get_data_distributor($data, $report_date);
	
	ob_start();
?>
<script type="text/javascript">
jQuery(document).ready(function() {
	jQuery("#report_category").bind('change', function() {
		var url = jQuery("#report_category").val();
		window.location = url;
	});
});
</script>
<div class="sales-report-header clear-block column-3">
	<div class="report-category">
		<label for="report_category">Type: </label>
		<select id="report_category">
			<option value="<?php echo "$url_switch/distributor/$report_date"; ?>" selected>Distributor</option>
			<option value="<?php echo "$url_switch/associate/$report_date"; ?>">Associate</option>
		</select>
	</div>
	<div class="report-date">
		<span><a href="<?php echo $url; ?>">[This Month]</a></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span><a href="<?php echo $url.$last_month; ?>" title="<?php echo date("F Y", $last_month); ?>">[Last]</a></span>&nbsp;&nbsp;
		<span><input type="text" id="datepicker" value="<?php echo date("F Y", $report_date); ?>" size="15" readonly></span>&nbsp;
		<span><a href="<?php echo $url.$next_month; ?>" title="<?php echo date("F Y", $next_month); ?>">[Next]</a></span>&nbsp;&nbsp;
	</div>
	<input type="hidden" id="report_url" value="<?php echo $url; ?>" />
	<?php echo ncn_report_insert_date_script(); ?>
	<div class="download-report">
		<a href="<?php echo $download_url; ?>">download report</a>
	</div>
</div>
<?php 			
	build_table_distributor($data);
	$content = ob_get_contents();
	ob_end_clean();
	return $content;
}

function ncn_report_associate() {
	$data = array();
	
	$report_date = 0;
	if ( arg(5) == "" ) {
		$report_date = time();
	} else {
		$report_date = arg(5);
	}
	
	
	$next_month = strtotime("+1 month", $report_date);
	$last_month = strtotime("-1 month", $report_date);
	
	global $base_url;
	$url_switch = $base_url."/admin/config/ncn_report/sales_summary";
	$url = $base_url."/admin/config/ncn_report/sales_summary/associate/";
	if (isset($_REQUEST['rsd'])) {
		$report_date = strtotime($_REQUEST['rsd']);
		$timezone = variable_get('date_default_timezone', 0);
		$report_date -= $timezone;
		drupal_goto($url.$report_date);
		exit;
	}
	
	$download_url = $base_url."/download/associate/ncn_report/?date=$report_date";
	
	_ncn_report_get_data_associate($data, $report_date);
	
	ob_start();
?>
<script type="text/javascript">
jQuery(document).ready(function() {
	jQuery("#report_category").bind('change', function() {
		var url = jQuery("#report_category").val();
		window.location = url;
	});
});
</script>
<div class="sales-report-header clear-block column-3">
	<div class="report-category">
		<label for="report_category">Type: </label>
		<select id="report_category">
			<option value="<?php echo "$url_switch/distributor/$report_date"; ?>">Distributor</option>
			<option value="<?php echo "$url_switch/associate/$report_date"; ?>" selected>Associate</option>
		</select>
	</div>
	<div class="report-date">
		<span><a href="<?php echo $url; ?>">[This Month]</a></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span><a href="<?php echo $url.$last_month; ?>" title="<?php echo date("F Y", $last_month); ?>">[Last]</a></span>&nbsp;&nbsp;
		<span><input type="text" id="datepicker" value="<?php echo date("F Y", $report_date); ?>" size="15" readonly></span>&nbsp;
		<span><a href="<?php echo $url.$next_month; ?>" title="<?php echo date("F Y", $next_month); ?>">[Next]</a></span>&nbsp;&nbsp;
	</div>
	<input type="hidden" id="report_url" value="<?php echo $url; ?>" />
	<?php echo ncn_report_insert_date_script(); ?>
	<div class="download-report">
		<a href="<?php echo $download_url; ?>">download report</a>
	</div>
</div>
<?php 			
	build_table_associate($data);
	$content = ob_get_contents();
	ob_end_clean();
	return $content;
}

function ncn_report_sales_detailed() {
	$dist_asso = arg(4);
	
	if ($dist_asso == "") {
		$dist_asso = 'distributor';
	}
	if ($dist_asso == 'distributor') {
		return ncn_report_distributor_detailed();
	} else if ($dist_asso == 'associate') {
		return ncn_report_associate_detailed();
	}
}

function ncn_report_distributor_detailed() {
	$data = array();
	
	$report_date = 0;
	if ( arg(5) == "" ) {
		$report_date = time();
	} else {
		$report_date = arg(5);
	}
	
	
	$next_month = strtotime("+1 month", $report_date);
	$last_month = strtotime("-1 month", $report_date);
	
	$distributor_uid = intval(arg(6));
	$distributor_list = get_user_list(5);
	if (!empty($distributor_list)) {
		if ($distributor_uid == 0 || !array_key_exists($distributor_uid, $distributor_list)) {
			$keys = array_keys($distributor_list);
			$distributor_uid = $keys[0];
		}
	}
	if (array_key_exists($distributor_uid, $distributor_list)) {
		$distributor_list[$distributor_uid]['selected'] = true;
	}
	
	global $base_url;
	
	$url_switch = $base_url."/admin/config/ncn_report/sales_detailed";
	$url = $base_url."/admin/config/ncn_report/sales_detailed/distributor/";
	if (isset($_REQUEST['rsd'])) {
		$report_date = strtotime($_REQUEST['rsd']);
		$timezone = variable_get('date_default_timezone', 0);
		$report_date -= $timezone;
		drupal_goto($url.$report_date);
		exit;
	}
	$download_url = $base_url."/download/distributor/detailed/ncn_report/?date=$report_date&uid=$distributor_uid";
	
	_ncn_report_get_data_distributor_detailed($data, $report_date, $distributor_uid);
	
	if (user_access('ncn statement management')) {
		$statement = ncn_statement_get_statement($distributor_uid, $report_date);
		$statement_url = $base_url."/statement/create?date=$report_date&uid=$distributor_uid";
		$statement_all = $base_url."/statement/all_create?date=$report_date&uid=$distributor_uid";
	}
	
	ob_start();
?>
<script type="text/javascript">
jQuery(document).ready(function() {
	jQuery("#report_category").bind('change', function() {
		var url = jQuery("#report_category").val();
		window.location = url;
	});
	jQuery("#distributor_name").bind('change', function() {
		var url = jQuery("#distributor_name").val();
		window.location = url;
	});
});
</script>
<div class="sales-report-header clear-block column-3 type-a">
	<div class="report-category">
		<label for="report_category">Type: </label>
		<select id="report_category">
			<option value="<?php echo "$url_switch/distributor/$report_date"; ?>" selected>Distributor</option>
			<option value="<?php echo "$url_switch/associate/$report_date"; ?>">Associate</option>
		</select>
	</div>
	<div class="report-date">
		<span><a href="<?php echo $url.time()."/$distributor_uid"; ?>">[This Month]</a></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span><a href="<?php echo $url.$last_month."/$distributor_uid"; ?>" title="<?php echo date("F Y", $last_month); ?>">[Last]</a></span>&nbsp;&nbsp;
		<span><input type="text" id="datepicker" value="<?php echo date("F Y", $report_date); ?>" size="15" readonly></span>&nbsp;
		<span><a href="<?php echo $url.$next_month."/$distributor_uid"; ?>" title="<?php echo date("F Y", $next_month); ?>">[Next]</a></span>&nbsp;&nbsp;
	</div>
	<input type="hidden" id="report_url" value="<?php echo $url; ?>" />
	<?php echo ncn_report_insert_date_script(); ?>
	<div class="download-report">
		<?php if (user_access('ncn statement management')): ?>
			<?php if(empty($statement)): ?>
				<a href="<?php echo $statement_url; ?>">create statement</a>
				&nbsp;&nbsp;&nbsp;
			<?php endif; ?>
			<a href="<?php echo $statement_all; ?>">create all statements</a>
			&nbsp;&nbsp;&nbsp;
		<?php endif; ?>
		<a href="<?php echo $download_url; ?>">download report</a>
	</div>
</div>
<div class="sales-report-header-name">
	<label for="distributor_name">Distributor: </label>
	<select id="distributor_name">
		<?php foreach ($distributor_list as $uid=>$dist_user) :?>
		<option value="<?php echo "$url_switch/distributor/$report_date/$uid"; ?>" <?php if(isset($dist_user['selected'])) { echo "selected"; } ?> >
			<?php echo $dist_user['name']; ?>
		</option>
		<?php endforeach; ?>
	</select>
</div>
<?php
	if (user_access('ncn statement management')) {
		build_statement_block($statement, $statement_url);
	}
	build_table_distributor_detailed($data);
	$content = ob_get_contents();
	ob_end_clean();
	return $content;
}

function ncn_report_associate_detailed() {
	$data = array();
	
	$report_date = 0;
	if ( arg(5) == "" ) {
		$report_date = time();
	} else {
		$report_date = arg(5);
	}
	
	
	$next_month = strtotime("+1 month", $report_date);
	$last_month = strtotime("-1 month", $report_date);
	
	$associate_uid = intval(arg(6));
	$associate_list = get_user_list(7);
	if (!empty($associate_list)) {
		if ($associate_uid == 0 || !array_key_exists($associate_uid, $associate_list)) {
			$keys = array_keys($associate_list);
			$associate_uid = $keys[0];
		}
	}
	if (array_key_exists($associate_uid, $associate_list)) {
		$associate_list[$associate_uid]['selected'] = true;
	}
	
	global $base_url;
	
	$url_switch = $base_url."/admin/config/ncn_report/sales_detailed";
	$url = $base_url."/admin/config/ncn_report/sales_detailed/associate/";
	if (isset($_REQUEST['rsd'])) {
		$report_date = strtotime($_REQUEST['rsd']);
		$timezone = variable_get('date_default_timezone', 0);
		$report_date -= $timezone;
		drupal_goto($url.$report_date);
		exit;
	}
	$download_url = $base_url."/download/associate/detailed/ncn_report/?date=$report_date&uid=$associate_uid";
	
	_ncn_report_get_data_associate_detailed($data, $report_date, $associate_uid);
	
	if (user_access('ncn statement management')) {
		$statement = ncn_statement_get_statement($associate_uid, $report_date);
		$statement_url = $base_url."/statement/create?date=$report_date&uid=$associate_uid";
		$statement_all = $base_url."/statement/all_create?date=$report_date&uid=$associate_uid";
	}
	
	ob_start();
?>
<script type="text/javascript">
jQuery(document).ready(function() {
	jQuery("#report_category").bind('change', function() {
		var url = jQuery("#report_category").val();
		window.location = url;
	});
	jQuery("#associate_name").bind('change', function() {
		var url = jQuery("#associate_name").val();
		window.location = url;
	});
});
</script>
<div class="sales-report-header clear-block column-3 type-a">
	<div class="report-category">
		<label for="report_category">Type: </label>
		<select id="report_category">
			<option value="<?php echo "$url_switch/distributor/$report_date"; ?>">Distributor</option>
			<option value="<?php echo "$url_switch/associate/$report_date"; ?>" selected>Associate</option>
		</select>
	</div>
	<div class="report-date">
		<span><a href="<?php echo $url.time()."/$associate_uid"; ?>">[This Month]</a></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span><a href="<?php echo $url.$last_month."/$associate_uid"; ?>" title="<?php echo date("F Y", $last_month); ?>">[Last]</a></span>&nbsp;&nbsp;
		<span><input type="text" id="datepicker" value="<?php echo date("F Y", $report_date); ?>" size="15" readonly></span>&nbsp;
		<span><a href="<?php echo $url.$next_month."/$associate_uid"; ?>" title="<?php echo date("F Y", $next_month); ?>">[Next]</a></span>&nbsp;&nbsp;
	</div>
	<input type="hidden" id="report_url" value="<?php echo $url; ?>" />
	<?php echo ncn_report_insert_date_script(); ?>
	<div class="download-report">
		<?php if (user_access('ncn statement management')): ?>
			<?php if(empty($statement)): ?>
				<a href="<?php echo $statement_url; ?>">create statement</a>
				&nbsp;&nbsp;&nbsp;
			<?php endif; ?>
			<a href="<?php echo $statement_all; ?>">create all statements</a>
			&nbsp;&nbsp;&nbsp;
		<?php endif; ?>
		<a href="<?php echo $download_url; ?>">download report</a>
	</div>
</div>
<div class="sales-report-header-name">
	<label for="associate_name">Associate: </label>
	<select id="associate_name">
		<?php foreach ($associate_list as $uid=>$asso_user) :?>
		<option value="<?php echo "$url_switch/associate/$report_date/$uid"; ?>" <?php if(isset($asso_user['selected'])) { echo "selected"; } ?> >
			<?php echo $asso_user['name']; ?>
		</option>
		<?php endforeach; ?>
	</select>
</div>
<?php 			
	if (user_access('ncn statement management')) {
		build_statement_block($statement, $statement_url);
	}
	
	build_table_distributor_detailed($data);
	$content = ob_get_contents();
	ob_end_clean();
	return $content;
}

function get_user_list($role_number) {
	$data = array();
	//$result = db_query('SELECT uid FROM users WHERE status=1');
	$sql = "SELECT u.uid FROM users AS u
            JOIN users_roles AS ur ON (ur.uid = u.uid)
            WHERE ur.rid = ".$role_number." AND u.status=1 ";
    $result = db_query($sql);
    if ($result->rowCount()==0) {
        return $data;
    }
    else{
        foreach($result as $row)
        {
            $row = (array)$row;
            $_user = user_load($row['uid']);
            if (!isset($_user->roles[$role_number])) { continue; }
            $_user_name = $_user->profile_legalname; //$_user->profile_firstname." ".$_user->profile_lastname;
            $data[$row['uid']] = array('name'=>$_user_name);
        }
        return $data;
    }
}

///////////////////////////////////////////////////////////////////////////
/*function build_table($data, $total, $best_total='') {
?>

<?php if ($best_total != ''): ?>
<div class="report-best-total">
	<label>Best Total: </label><span><?php echo $best_total; ?></span>
</div>
<?php endif; ?>

<div class="report-content">
<table>
	<thead>
		<th>Product</th>
		<th>Total</th>
		<th>Total Revenue</th>
	</thead>
	<tbody>
	<tr class="odd">
			<td>Start-Up Fees (Full)</td>
			<td><?php echo $data['SUF-F'][0]; ?></td>
			<td><?php echo render_payment_cost($data['SUF-F'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Start-Up Fees (Partial)</td>
			<td><?php echo $data['SUF-P'][0]; ?></td>
			<td><?php echo render_payment_cost($data['SUF-P'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Start-Up Fees (Dist. Full)</td>
			<td><?php echo $data['SUF-DF'][0]; ?></td>
			<td><?php echo render_payment_cost($data['SUF-DF'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Start-Up Fees (Dist. Partial)</td>
			<td><?php echo $data['SUF-DP'][0]; ?></td>
			<td><?php echo render_payment_cost($data['SUF-DP'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Start-Up Fees (Gold Member Special)</td>
			<td><?php echo $data['SUF-GMS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['SUF-GMS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Start-Up Fees (Dist. Gold Member Special)</td>
			<td><?php echo $data['SUF-GMSD'][0]; ?></td>
			<td><?php echo render_payment_cost($data['SUF-GMSD'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Start-Up Fees (Gold Member 1st Special)</td>
			<td><?php echo $data['SUF-GMS-1ST'][0]; ?></td>
			<td><?php echo render_payment_cost($data['SUF-GMS-1ST'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Start-Up Fees (Gold Member Demo)</td>
			<td><?php echo $data['SUF-G-DEMO'][0]; ?></td>
			<td><?php echo render_payment_cost($data['SUF-G-DEMO'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Start-Up Fees (Gold Member Associate Special)</td>
			<td><?php echo $data['SUF-GMAS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['SUF-GMAS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Monthly Membership Fees (Gold)</td>
			<td><?php echo $data['MMF'][0]; ?></td>
			<td><?php echo render_payment_cost($data['MMF'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Monthly Membership Fees (Gold Lite)</td>
			<td><?php echo $data['MMF-GL'][0]; ?></td>
			<td><?php echo render_payment_cost($data['MMF-GL'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Monthly Membership Fees (Coach on Call)</td>
			<td><?php echo $data['MMF-COC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['MMF-COC'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Monthly Finance Fees</td>
			<td><?php echo $data['MFF'][0]; ?></td>
			<td><?php echo render_payment_cost($data['MFF'][1]); ?></td>
		</tr>
		
		<!-- Claim (Gold) -->
		<tr class="even">
			<td>Residential Water Claims (Gold)</td>
			<td><?php echo $data['RC-G-WATER'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-G-WATER'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Water Claims With Sketch (Gold)</td>
			<td><?php echo $data['RC-G-WATER-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-G-WATER-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Water Claims (Gold)</td>
			<td><?php echo $data['CC-G-WATER'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-G-WATER'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Water Claims With Sketch (Gold)</td>
			<td><?php echo $data['CC-G-WATER-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-G-WATER-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Residential Fire Claims (Gold)</td>
			<td><?php echo $data['RC-G-FIRE'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-G-FIRE'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Fire Claims With Sketch (Gold)</td>
			<td><?php echo $data['RC-G-FIRE-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-G-FIRE-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Fire Claims (Gold)</td>
			<td><?php echo $data['CC-G-FIRE'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-G-FIRE'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Fire Claims With Sketch (Gold)</td>
			<td><?php echo $data['CC-G-FIRE-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-G-FIRE-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Residential Mold Claims (Gold)</td>
			<td><?php echo $data['RC-G-MOLD'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-G-MOLD'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Mold Claims With Sketch (Gold)</td>
			<td><?php echo $data['RC-G-MOLD-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-G-MOLD-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Mold Claims (Gold)</td>
			<td><?php echo $data['CC-G-MOLD'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-G-MOLD'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Mold Claims With Sketch (Gold)</td>
			<td><?php echo $data['CC-G-MOLD-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-G-MOLD-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Residential Reconstruction Claims (Gold)</td>
			<td><?php echo $data['RC-G-RECON'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-G-RECON'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Reconstruction Claims With Sketch (Gold)</td>
			<td><?php echo $data['RC-G-RECON-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-G-RECON-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Reconstruction Claims (Gold)</td>
			<td><?php echo $data['CC-G-RECON'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-G-RECON'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Reconstruction Claims With Sketch (Gold)</td>
			<td><?php echo $data['CC-G-RECON-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-G-RECON-WS'][1]); ?></td>
		</tr>
		
		<!-- Claim (Silver) -->
		<tr class="even">
			<td>Residential Water Claims (Silver)</td>
			<td><?php echo $data['RC-S-WATER'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-S-WATER'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Water Claims With Sketch (Silver)</td>
			<td><?php echo $data['RC-S-WATER-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-S-WATER-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Water Claims (Silver)</td>
			<td><?php echo $data['CC-S-WATER'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-S-WATER'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Water Claims With Sketch (Silver)</td>
			<td><?php echo $data['CC-S-WATER-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-S-WATER-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Residential Fire Claims (Silver)</td>
			<td><?php echo $data['RC-S-FIRE'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-S-FIRE'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Fire Claims With Sketch (Silver)</td>
			<td><?php echo $data['RC-S-FIRE-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-S-FIRE-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Fire Claims (Silver)</td>
			<td><?php echo $data['CC-S-FIRE'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-S-FIRE'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Fire Claims With Sketch (Silver)</td>
			<td><?php echo $data['CC-S-FIRE-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-S-FIRE-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Residential Mold Claims (Silver)</td>
			<td><?php echo $data['RC-S-MOLD'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-S-MOLD'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Mold Claims With Sketch (Silver)</td>
			<td><?php echo $data['RC-S-MOLD-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-S-MOLD-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Mold Claims (Silver)</td>
			<td><?php echo $data['CC-S-MOLD'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-S-MOLD'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Mold Claims With Sketch (Silver)</td>
			<td><?php echo $data['CC-S-MOLD-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-S-MOLD-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Residential Reconstruction Claims (Silver)</td>
			<td><?php echo $data['RC-S-RECON'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-S-RECON'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Reconstruction Claims With Sketch (Silver)</td>
			<td><?php echo $data['RC-S-RECON-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-S-RECON-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Reconstruction Claims (Silver)</td>
			<td><?php echo $data['CC-S-RECON'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-S-RECON'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Reconstruction Claims With Sketch (Silver)</td>
			<td><?php echo $data['CC-S-RECON-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-S-RECON-WS'][1]); ?></td>
		</tr>
		
		<tr class="even">
			<td>Residential Fire/Smoke Contents Cleaning Claims (Gold)</td>
			<td><?php echo $data['RC-G-FIRE-SCC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-G-FIRE-SCC'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Fire/Smoke Structure Cleaning Claims (Gold)</td>
			<td><?php echo $data['RC-G-FIRE-SSC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-G-FIRE-SSC'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Fire/Smoke Contents Cleaning Claims (Gold)</td>
			<td><?php echo $data['CC-G-FIRE-SCC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-G-FIRE-SCC'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Fire/Smoke Structure Cleaning Claims (Gold)</td>
			<td><?php echo $data['CC-G-FIRE-SSC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-G-FIRE-SSC'][1]); ?></td>
		</tr>
		
		<tr class="even">
			<td>Residential Fire/Smoke Contents Cleaning Claims (Silver)</td>
			<td><?php echo $data['RC-S-FIRE-SCC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-S-FIRE-SCC'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Fire/Smoke Structure Cleaning Claims (Silver)</td>
			<td><?php echo $data['RC-S-FIRE-SSC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-S-FIRE-SSC'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Fire/Smoke Contents Cleaning Claims (Silver)</td>
			<td><?php echo $data['CC-S-FIRE-SCC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-S-FIRE-SCC'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Fire/Smoke Structure Cleaning Claims (Silver)</td>
			<td><?php echo $data['CC-S-FIRE-SSC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-S-FIRE-SSC'][1]); ?></td>
		</tr>
		
		<!-- Claim (Gold Lite) -->
		<tr class="even">
			<td>Residential Water Claims (Gold Lite)</td>
			<td><?php echo $data['RC-GL-WATER'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-GL-WATER'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Water Claims With Sketch (Gold Lite)</td>
			<td><?php echo $data['RC-GL-WATER-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-GL-WATER-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Water Claims (Gold Lite)</td>
			<td><?php echo $data['CC-GL-WATER'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-GL-WATER'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Water Claims With Sketch (Gold Lite)</td>
			<td><?php echo $data['CC-GL-WATER-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-GL-WATER-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Residential Fire/Smoke Contents Cleaning Claims (Gold Lite)</td>
			<td><?php echo $data['RC-GL-FIRE-SCC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-GL-FIRE-SCC'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Fire/Smoke Structure Cleaning Claims (Gold Lite)</td>
			<td><?php echo $data['RC-GL-FIRE-SSC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-GL-FIRE-SSC'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Fire/Smoke Contents Cleaning Claims (Gold Lite)</td>
			<td><?php echo $data['CC-GL-FIRE-SCC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-GL-SCC'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Fire/Smoke Structure Cleaning Claims (Gold Lite)</td>
			<td><?php echo $data['CC-GL-FIRE-SSC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-GL-FIRE-SSC'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Residential Mold Claims (Gold Lite)</td>
			<td><?php echo $data['RC-GL-MOLD'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-GL-MOLD'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Mold Claims With Sketch (Gold Lite)</td>
			<td><?php echo $data['RC-GL-MOLD-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-GL-MOLD-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Mold Claims (Gold Lite)</td>
			<td><?php echo $data['CC-GL-MOLD'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-GL-MOLD'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Mold Claims With Sketch (Gold Lite)</td>
			<td><?php echo $data['CC-GL-MOLD-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-GL-MOLD-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Residential Reconstruction Claims (Gold Lite)</td>
			<td><?php echo $data['RC-GL-RECON'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-GL-RECON'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Reconstruction Claims With Sketch (Gold Lite)</td>
			<td><?php echo $data['RC-GL-RECON-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-GL-RECON-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Reconstruction Claims (Gold Lite)</td>
			<td><?php echo $data['CC-GL-RECON'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-GL-RECON'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Reconstruction Claims With Sketch (Gold Lite)</td>
			<td><?php echo $data['CC-GL-RECON-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-GL-RECON-WS'][1]); ?></td>
		</tr>
		
		
		
		<!-- Claim (Coach on Call) -->
		<tr class="even">
			<td>Residential Water Claims (Coach on Call)</td>
			<td><?php echo $data['RC-COC-WATER'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-COC-WATER'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Water Claims With Sketch (Coach on Call)</td>
			<td><?php echo $data['RC-COC-WATER-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-COC-WATER-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Water Claims (Coach on Call)</td>
			<td><?php echo $data['CC-COC-WATER'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-COC-WATER'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Water Claims With Sketch (Coach on Call)</td>
			<td><?php echo $data['CC-COC-WATER-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-COC-WATER-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Residential Fire/Smoke Contents Cleaning Claims (Coach on Call)</td>
			<td><?php echo $data['RC-COC-FIRE-SCC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-COC-FIRE-SCC'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Fire/Smoke Structure Cleaning Claims (Coach on Call)</td>
			<td><?php echo $data['RC-COC-FIRE-SSC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-COC-FIRE-SSC'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Fire/Smoke Contents Cleaning Claims (Coach on Call)</td>
			<td><?php echo $data['CC-COC-FIRE-SCC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-COC-SCC'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Fire/Smoke Structure Cleaning Claims (Coach on Call)</td>
			<td><?php echo $data['CC-COC-FIRE-SSC'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-COC-FIRE-SSC'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Residential Mold Claims (Coach on Call)</td>
			<td><?php echo $data['RC-COC-MOLD'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-COC-MOLD'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Mold Claims With Sketch (Coach on Call)</td>
			<td><?php echo $data['RC-COC-MOLD-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-COC-MOLD-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Mold Claims (Coach on Call)</td>
			<td><?php echo $data['CC-COC-MOLD'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-COC-MOLD'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Mold Claims With Sketch (Coach on Call)</td>
			<td><?php echo $data['CC-COC-MOLD-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-COC-MOLD-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Residential Reconstruction Claims (Coach on Call)</td>
			<td><?php echo $data['RC-COC-RECON'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-COC-RECON'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Residential Reconstruction Claims With Sketch (Coach on Call)</td>
			<td><?php echo $data['RC-COC-RECON-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['RC-COC-RECON-WS'][1]); ?></td>
		</tr>
		<tr class="even">
			<td>Commercial Reconstruction Claims (Coach on Call)</td>
			<td><?php echo $data['CC-COC-RECON'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-COC-RECON'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Commercial Reconstruction Claims With Sketch (Coach on Call)</td>
			<td><?php echo $data['CC-COC-RECON-WS'][0]; ?></td>
			<td><?php echo render_payment_cost($data['CC-COC-RECON-WS'][1]); ?></td>
		</tr>
		
		<tr class="even">
			<td>Additional</td>
			<td><?php echo $data['ADDITIONAL'][0]; ?></td>
			<td><?php echo render_payment_cost($data['ADDITIONAL'][1]); ?></td>
		</tr>
		<tr class="odd">
			<td>Refund</td>
			<td><?php echo $data['REFUND'][0]; ?></td>
			<td><?php echo render_payment_cost($data['REFUND'][1]); ?></td>
		</tr>
		
		
		<tr class="even">
			<td></td>
			<td colspan="2"><div style="margin:10px 10px 0px 50px">Total:&nbsp;&nbsp; <?php echo render_payment_cost($total[1]); ?></div></td>
		</tr>
	</tbody>
</table>
</div>
<?php 
}*/

///////////////////////////////////////////////////////////////////////////
function build_table($data, $total, $best_total='', $grouping=FALSE) {
?>

<?php  if ($best_total != ''): ?>
<div class="report-best-total">
	<label>Best Total: </label><span><?php echo $best_total; ?></span>
</div>
<?php endif; ?>

<div class="report-content arp">
<?php
if ($grouping) {
	print build_table_grouping($data, $total);
} else {
	print build_table_mail($data, $total);
}
?>
</div>
<?php 
}

function build_table_distributor($data) {
?>
<div class="report-content">
<table>
	<thead>
		<th>Distributor Name</th>
		<th>Start-up Fees (Full)</th>
		<th>Start-up Fees (Partial)</th>
		<th>Start-up Fees (GMS)</th>
		<th>Monthly Membership Fees</th>
		<th>Total Residual Owed</th>
	</thead>
	<tbody>
	<?php 
		$index = 0;
		foreach($data as $key=>$data_part) { 
			$index++;
			$class_tr = "odd";
			if ($index % 2==0) { $class_tr = "even"; }
	?>
		<tr class="<?php echo $class_tr; ?>">
			<td><?php echo $data_part[0]; ?></td>
			<td><?php echo $data_part[1]; ?></td>
			<td><?php echo $data_part[2]; ?></td>
			<td><?php echo $data_part[3]; ?></td>
			<td><?php echo $data_part[4]; ?></td>
			<td><?php echo render_payment_cost($data_part[5]); ?></td>
		</tr>
	<?php } ?>
	</tbody>
</table>
</div>
<?php 
}

function build_table_associate($data) {
?>
<div class="report-content">
<table>
	<thead>
		<th>Associate Name</th>
		<th>Start-up Fees (Full)</th>
		<th>Start-up Fees (Partial)</th>
		<th>Start-up Fees (GMS)</th>
		<th>Monthly Membership Fees</th>
		<th>Total Start-Up Fees Owed</th>
		<th>Total Residual Owed</th>
	</thead>
	<tbody>
	<?php 
		$index = 0;
		foreach($data as $key=>$data_part) { 
			$index++;
			$class_tr = "odd";
			if ($index % 2==0) { $class_tr = "even"; }
	?>
		<tr class="<?php echo $class_tr; ?>">
			<td><?php echo $data_part[0]; ?></td>
			<td><?php echo $data_part[1]; ?></td>
			<td><?php echo $data_part[2]; ?></td>
			<td><?php echo $data_part[3]; ?></td>
			<td><?php echo $data_part[4]; ?></td>
			<td><?php echo render_payment_cost($data_part[5]); ?></td>
			<td><?php echo render_payment_cost($data_part[6]); ?></td>
		</tr>
	<?php } ?>
	</tbody>
</table>
</div>
<?php 
}

function build_table_distributor_detailed($data) {
?>
<div class="report-content">
<table>
	<thead>
		<th>Company Name</th>
		<th>Member Name</th>
		<th>Start-up Fee</th>
		<th>Monthly Membership Fee</th>
		<th>Date</th>
		<th>Total Earned</th>
	</thead>
	<tbody>
	<?php 
		$total = 0;
		$index = 0;
		foreach($data as $key=>$data_part) { 
			$index++;
			$class_tr = "odd";
			if ($index % 2==0) { $class_tr = "even"; }
	?>
		<tr class="<?php echo $class_tr; ?>">
			<td><?php echo $data_part[0]; ?></td>
			<td><?php echo $data_part[1]; ?></td>
			<td><?php echo render_payment_cost($data_part[2]); ?></td>
			<td><?php echo render_payment_cost($data_part[3]); ?></td>
			<td><?php echo date('d M Y H:i:s', $data_part[4]); ?></td>
			<td><?php echo render_payment_cost($data_part[5]); ?></td>
		</tr>
	<?php 
			$total += $data_part[5];
		}
		$index++;
		$class_tr = "odd";
		if ($index % 2==0) { $class_tr = "even"; }
	?>
		<tr class="<?php echo $class_tr; ?>">
			<td colspan="4"></td>
			<td colspan="2"><div style="font-weight: bold; margin: 5px;"><?php echo t('Total: ').render_payment_cost($total); ?></div></td>
		</tr>
	</tbody>
</table>
</div>
<?php 
}

function _ncn_report_get_data(&$data, &$total, $report_date, $type) {
	$data['SUF-F'] 	= array(0, 0);
	$data['SUF-P'] 	= array(0, 0);
	$data['SUF-DF'] = array(0, 0);
	$data['SUF-DP'] = array(0, 0);
	$data['MMF'] 	= array(0, 0);
	$data['MMF-GL'] 	= array(0, 0);
	$data['MMF-COC'] 	= array(0, 0);
	$data['MMF-GC'] = array(0, 0);
	$data['MFF'] 	= array(0, 0);
	
	/* GOLD MEMBER SPECIAL */
	$data['SUF-GMS'] 	= array(0, 0);
	$data['SUF-GMSD'] 	= array(0, 0);
	$data['SUF-GMS-1ST'] 	= array(0, 0);
	$data['SUF-G-DEMO'] 	= array(0, 0);
	$data['SUF-GMAS']	= array(0, 0);
	$data['SUF-GC']	= array(0, 0);
	$data['SUF-COC']	= array(0, 0);	
	$data['SUF-GTGCSF']	= array(0, 0);	
  $data['SUF-CPR']  = array(0, 0);  
	
	/* Claim Gold*/
	$data['RC-G-WATER'] 	= array(0, 0);
	$data['CC-G-WATER'] 	= array(0, 0);
	$data['RC-G-FIRE'] 		= array(0, 0);
	$data['CC-G-FIRE'] 		= array(0, 0);
	$data['RC-G-MOLD']	 	= array(0, 0);
	$data['CC-G-MOLD'] 		= array(0, 0);
	$data['RC-G-RECON'] 	= array(0, 0);
	$data['CC-G-RECON'] 	= array(0, 0);
  
  $data['RC-G-WATER-EXPEDITE']   = array(0, 0);
  $data['CC-G-WATER-EXPEDITE']   = array(0, 0);
  $data['RC-G-FIRE-EXPEDITE']    = array(0, 0);
  $data['CC-G-FIRE-EXPEDITE']    = array(0, 0);
  $data['RC-G-MOLD-EXPEDITE']    = array(0, 0);
  $data['CC-G-MOLD-EXPEDITE']    = array(0, 0);
  $data['RC-G-RECON-EXPEDITE']   = array(0, 0);
  $data['CC-G-RECON-EXPEDITE']   = array(0, 0);
	
	$data['RC-G-WATER-WS'] 	= array(0, 0);
	$data['CC-G-WATER-WS'] 	= array(0, 0);
	$data['RC-G-FIRE-WS'] 	= array(0, 0);
	$data['CC-G-FIRE-WS'] 	= array(0, 0);
	$data['RC-G-MOLD-WS']	 = array(0, 0);
	$data['CC-G-MOLD-WS'] 	= array(0, 0);
	$data['RC-G-RECON-WS'] 	= array(0, 0);
	$data['CC-G-RECON-WS'] 	= array(0, 0);
  
  $data['RC-G-WATER-WS-EXPEDITE']   = array(0, 0);
  $data['CC-G-WATER-WS-EXPEDITE']   = array(0, 0);
  $data['RC-G-FIRE-WS-EXPEDITE']    = array(0, 0);
  $data['CC-G-FIRE-WS-EXPEDITE']    = array(0, 0);
  $data['RC-G-MOLD-WS-EXPEDITE']    = array(0, 0);
  $data['CC-G-MOLD-WS-EXPEDITE']    = array(0, 0);
  $data['RC-G-RECON-WS-EXPEDITE']   = array(0, 0);
  $data['CC-G-RECON-WS-EXPEDITE']   = array(0, 0);
	
	/* Claim Silver*/
	$data['RC-S-WATER'] 	= array(0, 0);
	$data['CC-S-WATER'] 	= array(0, 0);
	$data['RC-S-FIRE'] 		= array(0, 0);
	$data['CC-S-FIRE'] 		= array(0, 0);
	$data['RC-S-MOLD']	 	= array(0, 0);
	$data['CC-S-MOLD'] 		= array(0, 0);
	$data['RC-S-RECON'] 	= array(0, 0);
	$data['CC-S-RECON'] 	= array(0, 0);
  
  $data['RC-S-WATER-EXPEDITE']    = array(0, 0);
  $data['CC-S-WATER-EXPEDITE']    = array(0, 0);
  $data['RC-S-FIRE-EXPEDITE']     = array(0, 0);
  $data['CC-S-FIRE-EXPEDITE']     = array(0, 0);
  $data['RC-S-MOLD-EXPEDITE']     = array(0, 0);
  $data['CC-S-MOLD-EXPEDITE']     = array(0, 0);
  $data['RC-S-RECON-EXPEDITE']    = array(0, 0);
  $data['CC-S-RECON-EXPEDITE']    = array(0, 0);
	
	$data['RC-S-WATER-WS'] 	= array(0, 0);
	$data['CC-S-WATER-WS'] 	= array(0, 0);
	$data['RC-S-FIRE-WS'] 	= array(0, 0);
	$data['CC-S-FIRE-WS'] 	= array(0, 0);
	$data['RC-S-MOLD-WS']	 = array(0, 0);
	$data['CC-S-MOLD-WS'] 	= array(0, 0);
	$data['RC-S-RECON-WS'] 	= array(0, 0);
	$data['CC-S-RECON-WS'] 	= array(0, 0);
  
  $data['RC-S-WATER-WS-EXPEDITE']   = array(0, 0);
  $data['CC-S-WATER-WS-EXPEDITE']   = array(0, 0);
  $data['RC-S-FIRE-WS-EXPEDITE']    = array(0, 0);
  $data['CC-S-FIRE-WS-EXPEDITE']    = array(0, 0);
  $data['RC-S-MOLD-WS-EXPEDITE']    = array(0, 0);
  $data['CC-S-MOLD-WS-EXPEDITE']    = array(0, 0);
  $data['RC-S-RECON-WS-EXPEDITE']   = array(0, 0);
  $data['CC-S-RECON-WS-EXPEDITE']   = array(0, 0);
	
	/////////
	$data['RC-G-FIRE-SCC'] 	= array(0, 0);
	$data['RC-G-FIRE-SSC'] 	= array(0, 0);
	$data['CC-G-FIRE-SCC'] 	= array(0, 0);
	$data['CC-G-FIRE-SSC'] 	= array(0, 0);
  
  $data['RC-G-FIRE-SCC-EXPEDITE']   = array(0, 0);
  $data['RC-G-FIRE-SSC-EXPEDITE']   = array(0, 0);
  $data['CC-G-FIRE-SCC-EXPEDITE']   = array(0, 0);
  $data['CC-G-FIRE-SSC-EXPEDITE']   = array(0, 0);
	
	$data['RC-S-FIRE-SCC'] 	= array(0, 0);
	$data['RC-S-FIRE-SSC'] 	= array(0, 0);
	$data['CC-S-FIRE-SCC'] 	= array(0, 0);
	$data['CC-S-FIRE-SSC'] 	= array(0, 0);
  
  $data['RC-S-FIRE-SCC-EXPEDITE']   = array(0, 0);
  $data['RC-S-FIRE-SSC-EXPEDITE']   = array(0, 0);
  $data['CC-S-FIRE-SCC-EXPEDITE']   = array(0, 0);
  $data['CC-S-FIRE-SSC-EXPEDITE']   = array(0, 0);
	
	/* Claim Gold Lite*/
	$data['RC-GL-WATER'] 	= array(0, 0);
	$data['CC-GL-WATER'] 	= array(0, 0);
	$data['RC-GL-FIRE'] = array(0, 0);
	$data['CC-GL-FIRE'] = array(0, 0);
	$data['RC-GL-FIRE-SCC'] = array(0, 0);
	$data['CC-GL-FIRE-SCC'] = array(0, 0);
	$data['RC-GL-MOLD']	 = array(0, 0);
	$data['CC-GL-MOLD'] 	= array(0, 0);
	$data['RC-GL-RECON'] 	= array(0, 0);
	$data['CC-GL-RECON'] 	= array(0, 0);
  
  $data['RC-GL-WATER-EXPEDITE']   = array(0, 0);
  $data['CC-GL-WATER-EXPEDITE']   = array(0, 0);
  $data['RC-GL-FIRE-EXPEDITE']    = array(0, 0);
  $data['CC-GL-FIRE-EXPEDITE']    = array(0, 0);
  $data['RC-GL-FIRE-SCC-EXPEDITE'] = array(0, 0);
  $data['CC-GL-FIRE-SCC-EXPEDITE'] = array(0, 0);
  $data['RC-GL-MOLD-EXPEDITE']    = array(0, 0);
  $data['CC-GL-MOLD-EXPEDITE']    = array(0, 0);
  $data['RC-GL-RECON-EXPEDITE']   = array(0, 0);
  $data['CC-GL-RECON-EXPEDITE']   = array(0, 0);
	
	$data['RC-GL-WATER-WS'] 	= array(0, 0);
	$data['CC-GL-WATER-WS'] 	= array(0, 0);
	$data['RC-GL-FIRE-WS'] 	= array(0, 0);
	$data['CC-GL-FIRE-WS'] 	= array(0, 0);
	$data['RC-GL-FIRE-SSC'] 	= array(0, 0);
	$data['CC-GL-FIRE-SSC'] 	= array(0, 0);
	$data['RC-GL-MOLD-WS']	 = array(0, 0);
	$data['CC-GL-MOLD-WS'] 	= array(0, 0);
	$data['RC-GL-RECON-WS'] 	= array(0, 0);
	$data['CC-GL-RECON-WS'] 	= array(0, 0);
  
  $data['RC-GL-WATER-WS-EXPEDITE']    = array(0, 0);
  $data['CC-GL-WATER-WS-EXPEDITE']    = array(0, 0);
  $data['RC-GL-FIRE-WS-EXPEDITE']     = array(0, 0);
  $data['CC-GL-FIRE-WS-EXPEDITE']     = array(0, 0);
  $data['RC-GL-FIRE-SSC-EXPEDITE']    = array(0, 0);
  $data['CC-GL-FIRE-SSC-EXPEDITE']    = array(0, 0);
  $data['RC-GL-MOLD-WS-EXPEDITE']     = array(0, 0);
  $data['CC-GL-MOLD-WS-EXPEDITE']     = array(0, 0);
  $data['RC-GL-RECON-WS-EXPEDITE']    = array(0, 0);
  $data['CC-GL-RECON-WS-EXPEDITE']    = array(0, 0);
	
	/* Claim Coach on Call*/
	$data['RC-COC-WATER'] 	= array(0, 0);
	$data['CC-COC-WATER'] 	= array(0, 0);
	$data['RC-COC-FIRE-SCC'] = array(0, 0);
	$data['CC-COC-FIRE-SCC'] = array(0, 0);
	$data['RC-COC-MOLD']	 = array(0, 0);
	$data['CC-COC-MOLD'] 	= array(0, 0);
	$data['RC-COC-RECON'] 	= array(0, 0);
	$data['CC-COC-RECON'] 	= array(0, 0);
  
  $data['RC-COC-WATER-EXPEDITE']   = array(0, 0);
  $data['CC-COC-WATER-EXPEDITE']   = array(0, 0);
  $data['RC-COC-FIRE-SCC-EXPEDITE'] = array(0, 0);
  $data['CC-COC-FIRE-SCC-EXPEDITE'] = array(0, 0);
  $data['RC-COC-MOLD-EXPEDITE']   = array(0, 0);
  $data['CC-COC-MOLD-EXPEDITE']   = array(0, 0);
  $data['RC-COC-RECON-EXPEDITE']   = array(0, 0);
  $data['CC-COC-RECON-EXPEDITE']   = array(0, 0);  
	
	$data['RC-COC-WATER-WS'] 	= array(0, 0);
	$data['CC-COC-WATER-WS'] 	= array(0, 0);
	$data['RC-COC-FIRE-SSC'] 	= array(0, 0);
	$data['CC-COC-FIRE-SSC'] 	= array(0, 0);
	$data['RC-COC-MOLD-WS']	 = array(0, 0);
	$data['CC-COC-MOLD-WS'] 	= array(0, 0);
	$data['RC-COC-RECON-WS'] 	= array(0, 0);
	$data['CC-COC-RECON-WS'] 	= array(0, 0);
  
  $data['RC-COC-WATER-WS-EXPEDITE']   = array(0, 0);
  $data['CC-COC-WATER-WS-EXPEDITE']   = array(0, 0);
  $data['RC-COC-FIRE-SSC-EXPEDITE']   = array(0, 0);
  $data['CC-COC-FIRE-SSC-EXPEDITE']   = array(0, 0);
  $data['RC-COC-MOLD-WS-EXPEDITE']   = array(0, 0);
  $data['CC-COC-MOLD-WS-EXPEDITE']   = array(0, 0);
  $data['RC-COC-RECON-WS-EXPEDITE']   = array(0, 0);
  $data['CC-COC-RECON-WS-EXPEDITE']   = array(0, 0);
  
	
	/* Claim Gold Coach*/
	$data['RC-GC-WATER'] 	= array(0, 0);
	$data['CC-GC-WATER'] 	= array(0, 0);
	$data['RC-GC-FIRE-SCC'] = array(0, 0);
	$data['CC-GC-FIRE-SCC'] = array(0, 0);
	$data['RC-GC-MOLD']	 = array(0, 0);
	$data['CC-GC-MOLD'] 	= array(0, 0);
	$data['RC-GC-RECON'] 	= array(0, 0);
	$data['CC-GC-RECON'] 	= array(0, 0);
  
  $data['RC-GC-WATER-EXPEDITE']   = array(0, 0);
  $data['CC-GC-WATER-EXPEDITE']   = array(0, 0);
  $data['RC-GC-FIRE-SCC-EXPEDITE'] = array(0, 0);
  $data['CC-GC-FIRE-SCC-EXPEDITE'] = array(0, 0);
  $data['RC-GC-MOLD-EXPEDITE']   = array(0, 0);
  $data['CC-GC-MOLD-EXPEDITE']   = array(0, 0);
  $data['RC-GC-RECON-EXPEDITE']   = array(0, 0);
  $data['CC-GC-RECON-EXPEDITE']   = array(0, 0);
	
	$data['RC-GC-WATER-WS'] 	= array(0, 0);
	$data['CC-GC-WATER-WS'] 	= array(0, 0);
	$data['RC-GC-FIRE-SSC'] 	= array(0, 0);
	$data['CC-GC-FIRE-SSC'] 	= array(0, 0);
	$data['RC-GC-MOLD-WS']	 = array(0, 0);
	$data['CC-GC-MOLD-WS'] 	= array(0, 0);
	$data['RC-GC-RECON-WS'] 	= array(0, 0);
	$data['CC-GC-RECON-WS'] 	= array(0, 0);
  
  $data['RC-GC-WATER-WS-EXPEDITE']   = array(0, 0);
  $data['CC-GC-WATER-WS-EXPEDITE']   = array(0, 0);
  $data['RC-GC-FIRE-SSC-EXPEDITE']   = array(0, 0);
  $data['CC-GC-FIRE-SSC-EXPEDITE']   = array(0, 0);
  $data['RC-GC-MOLD-WS-EXPEDITE']   = array(0, 0);
  $data['CC-GC-MOLD-WS-EXPEDITE']   = array(0, 0);
  $data['RC-GC-RECON-WS-EXPEDITE']   = array(0, 0);
  $data['CC-GC-RECON-WS-EXPEDITE']   = array(0, 0);

    $data['CSI']   = array(0, 0);
  
  //////////////////
	
	$data['COF'] 	= array(0, 0);
  
  $data['SUF-AR-SERVICES'] = array(0, 0);
  $data['AR-SERVICES']     = array(0, 0);
  $data['PEER-REVIEWS']    = array(0, 0);

	$from = $to = 0;
	if ($type == "daily") {
		$str = date("Y/m/d", $report_date);
		$from = strtotime($str);
		$to = strtotime("+1 day", $from);
	} else if ($type=="weekly") {
		$to = strtotime("next monday", $report_date);
		$from = strtotime("last monday", $to);
	} else if ($type == "monthly") {
		$str = date("Y/m/01", $report_date);
		$from = strtotime($str);
		$to = strtotime("+1 month", $from);
	}
	//echo date("Y/m/d H:i:s", $from);
	//echo date("Y/m/d H:i:s", $to);
	
	$where = " WHERE status=1 AND refund=0 AND timestamp>=$from AND timestamp<$to ";

	//echo $where;
	$total[0] = $total[1] = 0;
	foreach ($data as $key=>&$data_part) {

    if (strpos($key, '-EXPEDITE')) {
      $org_key = substr($key, 0, -9);
      $data_part[0] = _ncn_report_get_total_for_claim($where." AND payment_log.ptype='$org_key'", 1);
      $data_part[1] = _ncn_report_get_total_revenue_for_claim($where." AND payment_log.ptype='$org_key'", 1);
    } else if(isset($data[$key.'-EXPEDITE'])) {
      $data_part[0] = _ncn_report_get_total_for_claim($where." AND payment_log.ptype='$key'", 0);
      $data_part[1] = _ncn_report_get_total_revenue_for_claim($where." AND payment_log.ptype='$key'", 0);
    }else if($key=='CSI') {/*from here add user id condition here for csi member and remove ptype*/
        //echo "========";
        $user_query = "SELECT uid FROM users";
        $user_result = db_query($user_query);
    //    while ($object = mysql_fetch_assoc($user_result))
        foreach($user_result as $object)
        {
            $object = (array)$object;
            $member_type1 = get_member_type_name($object['uid']);
            if($member_type1=='CSI') $csi_mem[]=$object['uid'];
            $array[] = $object;
        }
        //echo "<pre>---";print_r($csi_mem);
        if(isset($csi_mem))
        {
            $csi_mem_str=implode(",",$csi_mem);
            $where = " WHERE timestamp>=$from AND timestamp<$to ";
            $data_part[0] = _ncn_report_get_total_for_csi($where." AND payment_log.uid in ($csi_mem_str)", 0);
            $total_for_csi=$data_part[0];
            $data_part[1] = _ncn_report_get_total_revenue_for_csi($where." AND payment_log.uid in ($csi_mem_str)", 0);
            $total_revenue_for_csi=$data_part[1];
        }

         //echo "<pre>---";print_r($csi_mem_str);exit;
        //$member_type = get_member_type_name(604);
        //echo "<pre>---";print_r($csi_mem);exit;

        /*$csi_query = "SELECT uid FROM member_id_pool where member_type=5 ";
        $csi_result = db_query($csi_query);
        while ($object = mysql_fetch_assoc($csi_result)) {
            $array[] = $object;
        }
        //echo "<pre>---";print_r($array);exit;*/


    } else {
		  $data_part[0] = _ncn_report_get_total($where." AND ptype='$key'");
		  $data_part[1] = _ncn_report_get_total_revenue($where." AND ptype='$key'");
    }

		$data_part[0] = intval($data_part[0]);
		$data_part[1] = doubleval($data_part[1]);
		
		$total[0] += $data_part[0];
		$total[1] += $data_part[1];
	}
    if(isset($total_for_csi)) $total[0] = $total[0]-$total_for_csi;
    if(isset($total_revenue_for_csi)) $total[1] = $total[1]-$total_revenue_for_csi;
    //echo "<pre>";print_r($data);exit;
	// total refund 
	$where = " WHERE status=1 AND refund< 0 AND timestamp>=$from AND timestamp<$to ";
	$refund[0] = _ncn_report_get_total($where);
	$refund[1] = _ncn_report_get_total_revenue($where);

	$data['REFUND'] = $refund;
	$total[0] += $refund[0];
	$total[1] += $refund[1];
	
	$where = " WHERE status=1 AND refund>=0 AND timestamp>=$from AND timestamp<$to AND ptype='ADDITIONAL'";
	$additional[0] = _ncn_report_get_total($where);
	$additional[1] = _ncn_report_get_total_revenue($where);

	$data['ADDITIONAL'] = $additional;
	$total[0] += $additional[0];
	$total[1] += $additional[1];
}

function _ncn_report_get_total($where) {
	$query = "SELECT COUNT(*) as total FROM payment_log " . $where;
	$result = db_query($query);
	if ($result!=FALSE && $result->rowCount()>0) {
		$row = $result->fetchAssoc();
		return $row['total'];
	}
	return 0;
}

function _ncn_report_get_total_revenue($where) {
	$query = "SELECT SUM(cost) as total FROM payment_log " . $where;
	$result = db_query($query);
	if ($result!=FALSE && $result->rowCount()>0) {
		$row = $result->fetchAssoc();
		return $row['total'];
	}
	return 0;
}
function _ncn_report_get_total_for_csi($where, $expedite=0) {
    //$where.= " AND claims.expedite=$expedite";
    $query = "SELECT COUNT(*) as total FROM payment_log " . $where;
    //echo $query;
    $result = db_query($query);
    if ($result!=FALSE && $result->rowCount()>0) {
        $row = $result->fetchAssoc();
        return $row['total'];
    }
}
function _ncn_report_get_total_revenue_for_csi($where, $expedite=0) {
    //$where.= " AND claims.expedite=$expedite";
    $query = "SELECT SUM(cost) as total FROM payment_log " . $where;
    //echo $query;
    $result = db_query($query);
    if ($result!=FALSE && $result->rowCount()>0) {
        $row = $result->fetchAssoc();
        return $row['total'];
    }
    return 0;
}

function _ncn_report_get_total_for_claim($where, $expedite=0) {
  $where.= " AND claims.expedite=$expedite";
  $query = "SELECT COUNT(*) as total FROM payment_log LEFT JOIN claims ON (payment_log.claim_id=claims.claim_id) " . $where;
    //echo $query;
  $result = db_query($query);
  if ($result!=FALSE && $result->rowCount()>0) {
    $row = $result->fetchAssoc();
    return $row['total'];
  }
}

function _ncn_report_get_total_revenue_for_claim($where, $expedite=0) {
  $where.= " AND claims.expedite=$expedite";
  $query = "SELECT SUM(cost) as total FROM payment_log LEFT JOIN claims ON (payment_log.claim_id=claims.claim_id) " . $where;
  $result = db_query($query);
  if ($result!=FALSE && $result->rowCount()>0) {
    $row = $result->fetchAssoc();
    return $row['total'];
  }
  return 0;
}

function ncn_report_company_sales_summary() {
	$data = array();
	
	$report_date = 0;
	if ( arg(4) == "" ) {
		$report_date = time();
	} else {
		$report_date = arg(4);
	}
	
	
	$next_month = strtotime("+1 month", $report_date);
	$last_month = strtotime("-1 month", $report_date);
	
	global $base_url;
	
	$url_switch = $base_url."/admin/config/ncn_report/company_sales_summary";
	$url = $base_url."/admin/config/ncn_report/company_sales_summary/";
	if (isset($_REQUEST['rsd'])) {
		$report_date = strtotime($_REQUEST['rsd']);
		$timezone = variable_get('date_default_timezone', 0);
		$report_date -= $timezone;
		drupal_goto($url.$report_date);
		exit;
	}
	$download_url = $base_url."/download/company_sales_summary/ncn_report/?date=$report_date";
	
	_ncn_report_get_data_company_sales($data, $report_date);
	$total = 0;
	foreach ($data as $key=>$row) {
		$total += $row[5];
	}
	ob_start();
?>
<div class="sales-report-header clear-block column-2">
	<div class="report-date">
		<span><a href="<?php echo $url; ?>">[This Month]</a></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
		<span><a href="<?php echo $url.$last_month; ?>" title="<?php echo date("F Y", $last_month); ?>">[Last]</a></span>&nbsp;&nbsp;
		<span><input type="text" id="datepicker" value="<?php echo date("F Y", $report_date); ?>" size="15" readonly></span>&nbsp;
		<span><a href="<?php echo $url.$next_month; ?>" title="<?php echo date("F Y", $next_month); ?>">[Next]</a></span>&nbsp;&nbsp;
	</div>
	<input type="hidden" id="report_url" value="<?php echo $url; ?>" />
	<?php echo ncn_report_insert_date_script(); ?>
	<div class="download-report">
		<a href="<?php echo $download_url; ?>">download report</a>
	</div>
</div>
<?php 			
	build_table_company_sales($data, $total);
	$content = ob_get_contents();
	ob_end_clean();
	return $content;
}

function _ncn_report_get_data_company_sales(&$data, $report_date) {
	$query = "SELECT * FROM member_id_pool";
	$result = db_query($query);
	if (!$result) {
		return;
	}
	
	$user_count = $result->rowCount();
	for ($i=0; $i<$user_count; $i++) {
		$row = $result->fetchAssoc();
		//$_user = user_load($row['uid']);
		//if (!isset($_user->roles[8])) { continue; }
		$_user_name = $row['legalname']." (". $row['first_name'].' '.$row['last_name'].")";
		$data[$row['member_id']] = array($_user_name, 0, 0, 0, 0, 0, 0);	//(Company Name, StartUp Fee, Monthly Membership Fee, RC, CC, Total, *remained)
	}
	
	//--------------------------------------------------------
	$str = date("Y/m/01", $report_date);
	$from = strtotime($str);
	$to = strtotime("+1 month", $from);
	
	$query = "SELECT * FROM payment_log WHERE status=1 AND timestamp>=$from AND timestamp<$to ";
	$where_ext = " ";
	$result = db_query($query.$where_ext);
	if (!$result) {
		return;
	}
	$log_count = $result->rowCount();
	
	for ($i=0; $i<$log_count; $i++) {
		$row = $result->fetchAssoc();
		$key = 0;
		if ($row['ptype'] == 'SUF-DF' || $row['ptype'] == 'SUF-DP' || $row['ptype'] == 'SUF-GMSD') {
			//$key = get_uid_from_memberid($row['target_mid']);
			$key = $row['target_mid'];
		} else if ($row['ptype'] == 'SUF-F' || $row['ptype'] == 'SUF-P' || $row['ptype'] == 'SUF-GMS' ) {	// uid means user id of member    //*
			//$key = get_uid_from_memberid($row['member_id']);
			$key = $row['member_id'];
		} else {
			$key = $row['member_id'];
		}
	
		
		if ($key != 0 && isset($data[$key])) {
			$data[$key][6] = 1;
			if ($row['ptype'] == 'SUF-DF' || $row['ptype'] == 'SUF-DP' || $row['ptype'] == 'SUF-GMSD' || 
					$row['ptype'] == 'SUF-F' || $row['ptype'] == 'SUF-P' || $row['ptype'] == 'SUF-GMS' || $row['ptype'] == 'SUF-GMS-1ST' || $row['ptype'] == 'SUF-GMAS' || $row['ptype'] == 'SUF-GC' || $row['ptype'] == 'SUF-COC' || $row['ptype'] == 'SUF-GTGCSF') {
				$data[$key][1] += $row['cost'];
			} else if ($row['ptype'] == 'MMF' || $row['ptype'] == 'MMF-GL' || $row['ptype'] == 'MMF-COC' || $row['ptype'] == 'MMF-GC') {
				$data[$key][2] += $row['cost'];
			} else if ( strpos($row['ptype'], 'RC-') === 0 ) {
				$data[$key][3] += $row['cost'];
			} else if ( strpos($row['ptype'], 'CC-') === 0 ) {
				$data[$key][4] += $row['cost'];
			}
		}
	}
	
	foreach ($data as $key=>$data_part) {
		
		if ($data[$key][6] == 0) {
			unset( $data[$key] );
		} else {
			$data[$key][5] = $data[$key][1] + $data[$key][2] + $data[$key][3] + $data[$key][4];
		}
	}
}

function get_uid_from_memberid($memberid) {
	/*$query = "SELECT uid FROM users";
	$result = db_query($query);
	$count = mysql_num_rows($result);
	for ($i=0; $i<$count; $i++) {
		$row = mysql_fetch_assoc($result);
		$_user = user_load($row['uid']);
		if ($_user->profile_memberid == $memberid) {
			return $row['uid'];
		}
	}*/
	
	$result = db_query('
			SELECT u.uid FROM {users} u 
			LEFT JOIN {profile_value} pf ON (u.uid = pf.uid AND pf.fid=48)
			LEFT JOIN {member_id_pool} mip ON (pf.value = mip.member_id) 
			WHERE mip.member_id =:a',array(':a'=>$memberid));

    if($result)
    {
        foreach($result as $row)
        {
            $row = (array)$row;
            return $row['uid'];
        }
        return 0;
    }

//
//	if ($result && $row = db_fetch_array($result)) {
//		return $row['uid'];
//	}
//
//	return 0;
}

function build_table_company_sales($data, $total) {
?>
<div class="report-content">
<table>
	<thead>
		<th>Company Name</th>
		<th>Start-up Fee</th>
		<th>Monthly Membership Fee</th>
		<th>Residential Claims</th>
		<th>Commercial Claims</th>
		<th>Total</th>
	</thead>
	<tbody>
	<?php 
		$index = 0;
		foreach($data as $key=>$data_part) { 
			$index++;
			$class_tr = "odd";
			if ($index % 2==0) { $class_tr = "even"; }
	?>
		<tr class="<?php echo $class_tr; ?>">
			<td><?php echo $data_part[0]; ?></td>
			<td><?php echo $data_part[1]; ?></td>
			<td><?php echo $data_part[2]; ?></td>
			<td><?php echo $data_part[3]; ?></td>
			<td><?php echo $data_part[4]; ?></td>
			<td><?php echo render_payment_cost($data_part[5]); ?></td>
		</tr>
	<?php } 
		$class_tr = "odd";	
		
		if (($index+1) % 2==0) { $class_tr = "even"; }
	?>
		<tr class="<?php echo $class_tr; ?>">
			<td colspan="4"></td>
			<td style="text-align:right;">Total:</td>
			<td>$<?php echo $total; ?></td>
		</tr>
	</tbody>
</table>
</div>
<?php 
}


















///////////////////////////////////////////////////////////////////////////////
function ncn_report_download() {
	$type = arg(2);
	require_once 'sites/all/libraries/php_xls/Classes/PHPExcel.php';
	
	$demo_file = "sales_report.xls";
	$objReader = PHPExcel_IOFactory::createReader("Excel5");
	$objPHPExcel = $objReader->load($demo_file);

	//$objPHPExcel = new PHPExcel(); //PHPExcel_IOFactory->load($demo_file);
	
	$data = array();
	$total= array();
	
	$report_date = intval($_REQUEST['date']);
	if ($report_date == 0) {
		$report_date = time();
	}
	
	$str_date = "";
	if ($type == "daily") {
		$str_date = date("M d, Y", $report_date);
	} else if ($type == "weekly") {
		$to = strtotime("next monday", $report_date);
		$from = strtotime("last monday", $to);
		$str_date =  date("M d, Y", $from)." ~ ".date("M d, Y", strtotime("-1 day", $to));
		
	} else if ($type == "monthly") {
		$str_date = date("F Y", $report_date);
	}
	
	$objPHPExcel->setActiveSheetIndex(0)->setCellValue("B3" , "Date: ".$str_date);
	
	_ncn_report_get_data($data, $total, $report_date, $type);
	
	foreach ($data as $key=>&$data_part) {
		if ($data_part[0] == 0) {
			$data_part[0] = "";
		}
	}
	
	if ($type == "daily") { $report_title = "Daily Sales Summary Report"; }
	else if ($type == "weekly") { $report_title = "Weekly Sales Summary Report"; }
	else if ($type == "monthly") { $report_title = "Monthly Sales Summary Report"; }
	
	$objPHPExcel->setActiveSheetIndex(0)->setCellValue("A5" , $report_title);
	
  $table_data = ncn_report_get_sale_report_table_data();
  $count_data = count($table_data);
  if ($count_data>0) {
    $objPHPExcel->getActiveSheet()->insertNewRowBefore(9, $count_data);  
  }
  for ($i=0; $i<$count_data; $i++) {
    $source = "A7:B7";
    if ($i%2 == 1) {
      $source = "A8:B8";
    }
    $row_index = $i+9;
    $dest = "A$row_index:B$row_index";
    $objPHPExcel->getActiveSheet()->duplicateStyle( $objPHPExcel->getActiveSheet()->getStyle($source), $dest );
    
    $source = "C7";
    if ($i%2 == 1) {
      $source = "C8";
    }
    $dest = "C$row_index";
    
    $objPHPExcel->getActiveSheet()->duplicateStyle( $objPHPExcel->getActiveSheet()->getStyle($source), $dest );
    
  }
  $objPHPExcel->getActiveSheet()->removeRow(7+$count_data, 2);
  
  $row = 7;
  foreach ($table_data as $key=>$i_data) {
    $objPHPExcel->setActiveSheetIndex(0)->setCellValue("A$row" , $i_data['title']);
    $objPHPExcel->setActiveSheetIndex(0)->setCellValue("B$row" , $data[$key][0]);
    $objPHPExcel->setActiveSheetIndex(0)->setCellValue("C$row" , $data[$key][1]);
    $row++;
  }
	
  $row_index = $count_data+1+7;
  $objPHPExcel->setActiveSheetIndex(0)->setCellValue("C$row_index" , $total[1]);
  
  
	$report_name = ucfirst($type)." Sales Report ($str_date)";
	
	header('Content-Type: application/vnd.ms-excel');
	header('Content-Disposition: attachment;filename="'.$report_name.'"');
	header('Cache-Control: max-age=0');
	$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
	$objWriter->save('php://output');
		
	/*$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, "Excel5");
	$objWriter->save("daily.xls");*/
	exit;
}

function ncn_report_get_sale_report_table_data() {
  $data = array();
  $group_data = ncn_report_get_grouping_data();
  foreach ($group_data as $key=>$g_data) {
    if ($g_data['type'] == 'GROUP') {
      $data = array_merge($data, $g_data['child']);
    } else if ($g_data['type'] == 'ITEM') {
      $data[$key] = $g_data;
    }
  }
  
  return $data;
}

function _ncn_report_get_data_distributor(&$data, $report_date) {	
//	$query = "SELECT uid FROM users WHERE status=1; ";
	$result = db_query('SELECT uid FROM {users} WHERE status=1');
	if (!$result) {
		return;
	}
	
	$user_count = $result->rowCount();
	for ($i=0; $i<$user_count; $i++) {
		$row = $result->fetchAssoc();
		$_user = user_load($row['uid']);
		if (!isset($_user->roles[5])) { continue; }
		$_user_name = $_user->profile_legalname;
		$data[$row['uid']] = array($_user_name, 0, 0, 0, 0, 0);	//(Distributor Name, SUF-DF, SUF-DP, SUF-GMSD, MMF, Total Residual Owed)
	}
	
	//--------------------------------------------------------
	$str = date("Y/m/01", $report_date);
	$from = strtotime($str);
	$to = strtotime("+1 month", $from);
	
	$query = "SELECT * FROM payment_log WHERE status=1 AND refund>=0 AND timestamp>=$from AND timestamp<$to ";
	$where_ext = " AND (ptype LIKE 'SUF-%' OR ptype LIKE 'MMF%')";
	$result = db_query($query.$where_ext);
	if (!$result) {
		return;
	}
	$log_count = $result->rowCount();
	for ($i=0; $i<$log_count; $i++) {
		$row = $result->fetchAssoc();
		$key = 0;
		if ($row['ptype'] == 'SUF-DF' || $row['ptype'] == 'SUF-DP' || $row['ptype'] == 'SUF-GMSD' ) {	// uid means user id of distributor
			$key = $row['uid'];
		} else {
			// search for owner of member_id
			$query1 = "SELECT owner FROM member_id_pool WHERE member_id='".$row['member_id']."'";
			$result1 = db_query('SELECT owner FROM {member_id_pool} WHERE member_id=:a',
                array(':a'=>$row['member_id']));
			if ($result1 && $result1->rowCOunt()>0) {
				$row1 = $result1->fetchAssoc();
				$key = $row1['owner'];
			}
		}
		if (isset($data[$key])) {
			$n_count = 1;
			//if ($row['refund'] < 0) { $n_count = -1; } 
			if ($row['ptype'] == 'SUF-F' || $row['ptype'] == 'SUF-DF' || $row['ptype'] == 'SUF-GC' || $row['ptype'] == 'SUF-COC') {
				$data[$key][1] += $n_count;
			} else if ($row['ptype'] == 'SUF-P' || $row['ptype'] == 'SUF-DP') {
				$data[$key][2] += $n_count;
			} else if ($row['ptype'] == 'SUF-GMS' || $row['ptype'] == 'SUF-GMSD' || $row['ptype'] == 'SUF-GMS-1ST' ) {
				$data[$key][3] += $n_count;
			} else if (strpos($row['ptype'], "MMF")===0 && _ncn_report_get_payment_ncn_type($row['ptype'])) {
				$data[$key][4] += $n_count;
			}
		}
	}
	foreach ($data as $key=>$data_part) {
		$_remove = true;
		for ($j=1; $j<5; $j++) {
			if ($data[$key][$j] != 0) {
				$_remove = false; break;
			}
		}
		if ($_remove) {
			unset( $data[$key] );
		} else {
			$data[$key][5] = $data[$key][4] * 10;	// calculate "Total Residual Owed" : $10 Per charging membber monthly fee, 
		}
	}
}

function _ncn_report_get_data_associate(&$data, $report_date) {
//	$query = "SELECT uid FROM users WHERE status=1; ";
	$result = db_query('SELECT uid FROM {users} WHERE status=1');
	if (!$result) {
		return;
	}
	
	$user_count = $result->rowCount();
	for ($i=0; $i<$user_count; $i++) {
		$row = $result->fetchAssoc();
		$_user = user_load($row['uid']);
		if (!isset($_user->roles[7])) { continue; }
		$_user_name = $_user->profile_legalname;
		$data[$row['uid']] = array($_user_name, 0, 0, 0, 0, 0, 0);	//(Associate Name, SUF-F, SUF-P, SUF-GMS, MMF, Total Start-Up Fees Owed, Total Residual Owed)
	}
	
	//--------------------------------------------------------
	$str = date("Y/m/01", $report_date);
	$from = strtotime($str);
	$to = strtotime("+1 month", $from);
	
	$query = "SELECT * FROM payment_log WHERE status=1 AND timestamp>=$from AND timestamp<$to ";
	$where_ext = " AND (ptype LIKE 'SUF-%' OR ptype LIKE 'MMF%')";
	$result = db_query($query.$where_ext);
	if (!$result) {
		return;
	}
	$log_count = $result->rowCount();
	for ($i=0; $i<$log_count; $i++) {
		$row = $result->fetchAssoc();
		
		$key = 0;
		// search for owner of member_id
	//	$query1 = "SELECT owner FROM member_id_pool WHERE member_id='".$row['member_id']."'";
		$result1 = db_query('SELECT owner FROM {member_id_pool} WHERE member_id=:a',array(':a'=>$row['member_id']));
		if ($result1 && $result1->rowCount()>0) {
			$row1 = $result1->fetchAssoc();
			$key = $row1['owner'];
		}

		if (isset($data[$key])) {
			$n_count = 1;
			//if ($row['refund'] < 0) { $n_count = -1; } 
			
			if ($row['ptype'] == 'SUF-F' || $row['ptype'] == 'SUF-GC' || $row['ptype'] == 'SUF-COC') {
				$data[$key][1] += $n_count;
			} else if ($row['ptype'] == 'SUF-P') {
				$data[$key][2] += $n_count;
			} else if ($row['ptype'] == 'SUF-GMS' || $row['ptype'] == 'SUF-GMAS' || $row['ptype'] == 'SUF-GMS-1ST') {
				$data[$key][3] += $n_count;
			} else if (strpos($row['ptype'], "MMF")===0) {
				$data[$key][4] += $n_count;
			}
		}
	}
	foreach ($data as $key=>$data_part) {
		$_remove = true;
		for ($j=1; $j<5; $j++) {
			if ($data[$key][$j] != 0) {
				$_remove = false; break;
			}
		}
		if ($_remove) {
			unset( $data[$key] );
		} else {
			$data[$key][5] = ($data[$key][1]+$data[$key][2]+$data[$key][3]) * 50;	// calculate "Total Start-Up Fees Owed" : $50 Per start-up fee, 
			$data[$key][6] = $data[$key][4] * 10;	// calculate "Total Residual Owed" : $10 Per charging membber monthly fee, 
		}
	}
}

function _ncn_report_get_data_distributor_detailed(&$data, $report_date, $distributor_uid) {

	//--------------------------------------------------------
	$str = date("Y/m/01", $report_date);
	$from = strtotime($str);
	$to = strtotime("+1 month", $from);
	
//	$query = "SELECT * FROM payment_ncn WHERE status=1 AND uid=$distributor_uid AND timestamp>=$from AND timestamp<$to ";
	$result = db_query('SELECT * FROM {payment_ncn} WHERE status=1 AND uid=:a AND timestamp>=:b AND timestamp<:c',
        array(':a'=>$distributor_uid,':b'=>$from,':c'=>$to));
	if (!$result) {
		return;
	}
	$pn_count = $result->rowCount();
	for ($i=0; $i<$pn_count; $i++) {
		$row = $result->fetchAssoc();
		$payment = ncn_report_get_payment_from_pid($row['ref_pid']);
		
		$key = '0';
		if ($payment['ptype'] == 'SUF-DF' || $payment['ptype'] == 'SUF-DP' || $payment['ptype'] == 'SUF-GMSD') {	// uid means user id of distributor
			$key = $payment['target_mid'];
		} else {
			$key = $payment['member_id'];
		}
		
		if ($key != '0') {
			if (!isset($data[$key])) {
				$member = get_member_from_id($key);
				$_user_name = $member['first_name']." ".$member['last_name'];
				$_company_name = $member['legalname'];
				
				$data[$key] = array($_company_name, $_user_name, 0, 0, 0, 0);	//(Company Name, Member Name, Start-Up Fee, Monthly Membership Fee, Date, Total Earned)
			}
			
			$n_count = 1;
			if ($row['type'] == 'SUF' || $row['type'] == 'SUF-GMS-1ST') {
				$data[$key][2] += $row['cost'];//$n_count;
			} else if ($row['type'] == 'MMF') {
				$data[$key][3] += $row['cost'];//$n_count;
			}
			if ($row['cost']) {
				$data[$key][5] += $row['cost'];
			}
			$data[$key][4] = $row['timestamp'];
		}
		
	}
}

function _ncn_report_get_data_associate_detailed(&$data, $report_date, $associate_uid) {
	//--------------------------------------------------------
	$str = date("Y/m/01", $report_date);
	$from = strtotime($str);
	$to = strtotime("+1 month", $from);
	
//	$query = "SELECT * FROM payment_ncn WHERE status=1 AND uid=$associate_uid AND timestamp>=$from AND timestamp<$to ";
	//drupal_set_message($query);
	
	$result = db_query('SELECT * FROM {payment_ncn} WHERE status=1 AND uid=:a AND timestamp>=:b AND timestamp<:c',
        array(':a'=>$associate_uid,':b'=>$from,':c'=>$to));
	if (!$result) {
		return;
	}
	$pn_count = $result->rowCount();
	for ($i=0; $i<$pn_count; $i++) {
		$row = $result->fetchAssoc();
		$payment = ncn_report_get_payment_from_pid($row['ref_pid']);
		
		$key = '0';
		if ($payment['ptype'] == 'SUF-DF' || $payment['ptype'] == 'SUF-DP' || $payment['ptype'] == 'SUF-GMSD') {	// uid means user id of distributor
			$key = $payment['target_mid'];
		} else {
			$key = $payment['member_id'];
		}
		
		if ($key != 0) {
			if (!isset($data[$key])) {
				$member = get_member_from_id($key);
				$_user_name = $member['first_name']." ".$member['last_name'];
				$_company_name = $member['legalname'];
				
				$data[$key] = array($_company_name, $_user_name, 0, 0, 0, 0);	//(Company Name, Member Name, Start-Up Fee, Monthly Membership Fee, Date, Total Earned)
			}
			
			$n_count = 1;
			if ($row['type'] == 'SUF' || $row['type'] == 'SUF-GMS-1ST') {
				$data[$key][2] += $row['cost'];//$n_count;
			} else if ($row['type'] == 'MMF') {
				$data[$key][3] += $row['cost'];//$n_count;
			}
			if ($row['cost']) {
				$data[$key][5] += $row['cost'];
			}
			$data[$key][4] = $row['timestamp'];
		}
		
	}
}

function ncn_report_download_distributor() {
require_once 'sites/all/libraries/php_xls/Classes/PHPExcel.php';
	
	$demo_file = "sales_report_distributor.xls";
	$objReader = PHPExcel_IOFactory::createReader("Excel5");
	$objPHPExcel = $objReader->load($demo_file);
	
	$data = array();
	$total= array();
	
	$report_date = intval($_REQUEST['date']);
	if ($report_date == 0) {
		$report_date = time();
	}
	
	$str_date = date("F Y", $report_date);
	
	$objPHPExcel->setActiveSheetIndex(0)->setCellValue("F3" , "Date: ".$str_date);
	_ncn_report_get_data_distributor($data, $report_date);
	
	$count_data = count($data);
	if ($count_data>0) {
		$objPHPExcel->getActiveSheet()->insertNewRowBefore(9, $count_data);	
	}
	for ($i=0; $i<$count_data; $i++) {
		$source = "A7:E7";
		if ($i%2 == 1) {
			$source = "A8:E8";
		}
		$row_index = $i+9;
		$dest = "A$row_index:E$row_index";
		$objPHPExcel->getActiveSheet()->duplicateStyle( $objPHPExcel->getActiveSheet()->getStyle($source), $dest );
		
		$source = "F7";
		if ($i%2 == 1) {
			$source = "F8";
		}
		$dest = "F$row_index";
		
		$objPHPExcel->getActiveSheet()->duplicateStyle( $objPHPExcel->getActiveSheet()->getStyle($source), $dest );
		
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("F$row_index" , "=E$row_index*10");
		
	}
	$objPHPExcel->getActiveSheet()->removeRow(7+$count_data, 2);
	
	$i = 0;
	foreach($data as $key=>$data_part) {
		$row_index = $i+7;
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("A$row_index" , $data_part[0]);
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("B$row_index" , $data_part[1]);
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("C$row_index" , $data_part[2]);
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("D$row_index" , $data_part[3]);
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("E$row_index" , $data_part[4]);
		$i++;
	}
	
	$report_name = "Monthly Distributor Sales Summary Report ($str_date)";
	
	header('Content-Type: application/vnd.ms-excel');
	header('Content-Disposition: attachment;filename="'.$report_name.'"');
	header('Cache-Control: max-age=0');
	$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
	$objWriter->save('php://output');
		
	/*$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, "Excel5");
	$objWriter->save("daily.xls");*/
	exit;
}

function ncn_report_download_associate() {
	require_once 'sites/all/libraries/php_xls/Classes/PHPExcel.php';
	
	$demo_file = "sales_report_associate.xls";
	$objReader = PHPExcel_IOFactory::createReader("Excel5");
	$objPHPExcel = $objReader->load($demo_file);
	
	$data = array();
	$total= array();
	
	$report_date = intval($_REQUEST['date']);
	if ($report_date == 0) {
		$report_date = time();
	}
	
	$str_date = date("F Y", $report_date);
	
	$objPHPExcel->setActiveSheetIndex(0)->setCellValue("G3" , "Date: ".$str_date);
	_ncn_report_get_data_associate($data, $report_date);
	
	$count_data = count($data);
	if ($count_data>0) {
		$objPHPExcel->getActiveSheet()->insertNewRowBefore(9, $count_data);	
	}
	for ($i=0; $i<$count_data; $i++) {
		$source = "A7:E7";
		if ($i%2 == 1) {
			$source = "A8:E8";
		}
		$row_index = $i+9;
		$dest = "A$row_index:E$row_index";
		$objPHPExcel->getActiveSheet()->duplicateStyle( $objPHPExcel->getActiveSheet()->getStyle($source), $dest );
		
		$source = "F7";
		if ($i%2 == 1) {
			$source = "F8";
		}
		$dest = "F$row_index";
		$objPHPExcel->getActiveSheet()->duplicateStyle( $objPHPExcel->getActiveSheet()->getStyle($source), $dest );
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("F$row_index" , "=((B$row_index+C$row_index+D$row_index)*50)");
		
		$source = "G7";
		if ($i%2 == 1) {
			$source = "G8";
		}
		$dest = "G$row_index";
		$objPHPExcel->getActiveSheet()->duplicateStyle( $objPHPExcel->getActiveSheet()->getStyle($source), $dest );
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("G$row_index" , "=E$row_index*10");
		
		
	}
	$objPHPExcel->getActiveSheet()->removeRow(7+$count_data, 2);
	
	$i = 0;
	foreach($data as $key=>$data_part) {
		$row_index = $i+7;
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("A$row_index" , $data_part[0]);
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("B$row_index" , $data_part[1]);
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("C$row_index" , $data_part[2]);
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("D$row_index" , $data_part[3]);
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("E$row_index" , $data_part[4]);
		$i++;
	}
	
	$report_name = "Monthly Associate Sales Summary Report ($str_date)";
	
	header('Content-Type: application/vnd.ms-excel');
	header('Content-Disposition: attachment;filename="'.$report_name.'"');
	header('Cache-Control: max-age=0');
	$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
	$objWriter->save('php://output');
		
	/*$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, "Excel5");
	$objWriter->save("daily.xls");*/
	exit;
}

function ncn_report_download_monthly_detailed($type) {
	require_once 'sites/all/libraries/php_xls/Classes/PHPExcel.php';
	
	$demo_file = "sales_report_detailed.xls";
	$objReader = PHPExcel_IOFactory::createReader("Excel5");
	$objPHPExcel = $objReader->load($demo_file);
	
	$data = array();
	$total= array();
	
	$report_date = intval($_REQUEST['date']);
	if ($report_date == 0) {
		$report_date = time();
	}
	$uid = intval($_REQUEST['uid']);
	
	$str_date = date("F Y", $report_date);
	
	$objPHPExcel->setActiveSheetIndex(0)->setCellValue("F3" , "Date: ".$str_date);
	$_user = user_load($uid);
	
	$objPHPExcel->setActiveSheetIndex(0)->setCellValue("A5" , "[".$_user->profile_firstname." ".$_user->profile_lastname."] Detailed Monthly Sales Report");
	if ($type == 'distributor') {
		_ncn_report_get_data_distributor_detailed($data, $report_date, $uid);
	} else {
		_ncn_report_get_data_associate_detailed($data, $report_date, $uid);
	}
	
	$count_data = count($data);
	if ($count_data>0) {
		$objPHPExcel->getActiveSheet()->insertNewRowBefore(9, $count_data);	
	}
	for ($i=0; $i<$count_data; $i++) {
		$source = "A7:E7";
		if ($i%2 == 1) {
			$source = "A8:E8";
		}
		$row_index = $i+9;
		$dest = "A$row_index:E$row_index";
		$objPHPExcel->getActiveSheet()->duplicateStyle( $objPHPExcel->getActiveSheet()->getStyle($source), $dest );
		
		$source = "F7";
		if ($i%2 == 1) {
			$source = "F8";
		}
		$dest = "F$row_index";
		
		$objPHPExcel->getActiveSheet()->duplicateStyle( $objPHPExcel->getActiveSheet()->getStyle($source), $dest );
		
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("F$row_index" , "=(C$row_index*50)+(D$row_index*10)");
		
	}
	$objPHPExcel->getActiveSheet()->removeRow(7+$count_data, 2);
	
	$i = 0;
	$total = 0;
	foreach($data as $key=>$data_part) {
		$row_index = $i+7;
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("A$row_index" , $data_part[0]);
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("B$row_index" , $data_part[1]);
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("C$row_index" , $data_part[2]);
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("D$row_index" , $data_part[3]);
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("E$row_index" , date('d M Y H:i:s', $data_part[4]));
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("F$row_index" , $data_part[5]);
		
		$total += $data_part[5];
		$i++;
	}
	
	$row_index += 2;
	$objPHPExcel->setActiveSheetIndex(0)->setCellValue("F$row_index" , $total);
	
	$report_name = "[".$_user->profile_firstname." ".$_user->profile_lastname."]Detailed Monthly Sales Report ($str_date)";
	
	header('Content-Type: application/vnd.ms-excel');
	header('Content-Disposition: attachment;filename="'.$report_name.'"');
	header('Cache-Control: max-age=0');
	$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
	$objWriter->save('php://output');
		
	/*$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, "Excel5");
	$objWriter->save("daily.xls");*/
	exit;
}

function ncn_report_download_company_sales_summary() {
	require_once 'sites/all/libraries/php_xls/Classes/PHPExcel.php';
	
	$demo_file = "company_sales_report.xls";
	$objReader = PHPExcel_IOFactory::createReader("Excel5");
	$objPHPExcel = $objReader->load($demo_file);
	
	$data = array();
	$total= array();
	
	$report_date = intval($_REQUEST['date']);
	if ($report_date == 0) {
		$report_date = time();
	}
	
	$str_date = date("F Y", $report_date);
	
	$objPHPExcel->setActiveSheetIndex(0)->setCellValue("F3" , "Date: ".$str_date);
	_ncn_report_get_data_company_sales($data, $report_date);
	
	$count_data = count($data);
	if ($count_data>0) {
		$objPHPExcel->getActiveSheet()->insertNewRowBefore(9, $count_data);	
	}
	for ($i=0; $i<$count_data; $i++) {
		$source = "A7:E7";
		if ($i%2 == 1) {
			$source = "A8:E8";
		}
		$row_index = $i+9;
		$dest = "A$row_index:E$row_index";
		$objPHPExcel->getActiveSheet()->duplicateStyle( $objPHPExcel->getActiveSheet()->getStyle($source), $dest );
		
		$source = "F7";
		if ($i%2 == 1) {
			$source = "F8";
		}
		$dest = "F$row_index";
		
		$objPHPExcel->getActiveSheet()->duplicateStyle( $objPHPExcel->getActiveSheet()->getStyle($source), $dest );
		
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("F$row_index" , "=SUM(B$row_index:E$row_index)");
		
	}
	$objPHPExcel->getActiveSheet()->removeRow(7+$count_data, 2);
	
	$i = 0;
	foreach($data as $key=>$data_part) {
		$row_index = $i+7;
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("A$row_index" , $data_part[0]);
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("B$row_index" , $data_part[1]);
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("C$row_index" , $data_part[2]);
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("D$row_index" , $data_part[3]);
		$objPHPExcel->setActiveSheetIndex(0)->setCellValue("E$row_index" , $data_part[4]);
		$i++;
	}
	
	$total = 0;
	foreach ($data as $key=>$row) {
		$total += $row[5];
	}
	$row_index = $i+1+7;
	$objPHPExcel->setActiveSheetIndex(0)->setCellValue("E$row_index" , 'Total:  $ '.$total);
	$report_name = "Company Sales Summary Report ($str_date)";
	
	header('Content-Type: application/vnd.ms-excel');
	header('Content-Disposition: attachment;filename="'.$report_name.'"');
	header('Cache-Control: max-age=0');
	$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, 'Excel5');
	$objWriter->save('php://output');
		
	/*$objWriter = PHPExcel_IOFactory::createWriter($objPHPExcel, "Excel5");
	$objWriter->save("daily.xls");*/
	exit;
}






/**
 * Refund (model)
 * @return : TRUE/FALSE
 */
function ncn_report_refund_payment($pid, $timestamp=0) {
	if ($timestamp == 0) {
		$timestamp = date('U');
	}
	
//	$query = "SELECT * FROM payment_log WHERE pid=$pid AND status=1 AND refund=0";
	$result = db_query('SELECT * FROM {payment_log} WHERE pid=:a AND status=1 AND refund=0',array(':a'=>$pid));
	if (!$result) {
		handle_mysql_syntax_error('60650-NCN-REPORT', $query);
		return FALSE;
	}
	if ($result->rowCount()==0) {
		drupal_set_message(t('Payment(#!pid) couldn\'t be refunded.', array('!pid'=>$pid)), 'error');
		return FALSE;
	}
	$payment = $result->fetchAssoc();


	
	// Add refund payment
	$status = 1;
	$refund = -1;
//	$query = "INSERT INTO payment_log(ptype, product_id, cost, uid, member_id, target_mid, claim_id, timestamp, status, ref_pid, refund) VALUES(
//				'".$payment['ptype']."', ".$payment['product_id'].", ".($payment['cost']*-1).", ".$payment['uid'].",
//				'".$payment['member_id']."', '".$payment['target_mid']."', ".$payment['claim_id'].", $timestamp, $status,
//				"."$pid, $refund)";
	$result = db_query('INSERT INTO payment_log(ptype, product_id, cost, uid, member_id, target_mid, claim_id, timestamp, status, ref_pid, refund)
	VALUES(:a,:b,:c,:d,:e,:f,:g,:h,:i,:j,:k)',array(':a'=>$payment['ptype'],':b'=>$payment['product_id'],':c'=>($payment['cost']*-1),
    ':d'=>$payment['uid'],':e'=>$payment['member_id'],':f'=>$payment['target_mid'],':g'=>$payment['claim_id'],
    ':h'=>$timestamp,':i'=>$status,':j'=>$pid,':k'=>$refund));


	if (!$result) {
		handle_mysql_syntax_error('60651-NCN-REPORT', $query);
		return FALSE;
	}
	
	// Update payment as refunded
//	$query = "UPDATE payment_log SET refund=1 WHERE pid=$pid";
	$result = db_query('UPDATE {payment_log} SET refund=1 WHERE pid=:a',array(':a'=>$pid));
	if (!$result) {
		handle_mysql_syntax_error('60652-NCN-REPORT', $query);
		return FALSE;
	}
	
	// Refund Payment NCN
	//ncn_report_refund_payment_ncn($pid);
	
	return TRUE;
}


















/*****************************************************************************/
/*					Report Mail												 */
/*****************************************************************************/

function ncn_report_mail($key, &$message, $params) {
	$headers = array(
    'MIME-Version' => '1.0',
    'Content-Type' => 'text/html; charset=UTF-8; format=flowed',
    'Content-Transfer-Encoding' => '8Bit',
    'X-Mailer' => 'Drupal'
  );
  foreach ($headers as $key => $value) {
    $message['headers'][$key] = $value;
  }
  $message['subject'] = $params['subject'];
  $message['body'][] = $params['body'];
}


///////////////////////////////////////////////////
function send_daily_mail() {
	$report_date = time();
	
	$subject = 'NCN Daily Sales Report ('.date('D, d M Y', $report_date).')';
	$msg = compose_daily_mail($report_date);
	
	$to = 'reports@netclaimsnow.com';
	drupal_mail('ncn_report', 'daily_report', $to, language_default(), array('subject'=>$subject, 'body'=>$msg));
}

function compose_daily_mail($report_date){
	$data = array();
	$total= array();
	
	_ncn_report_get_data($data, $total, $report_date, "daily");
	
	ob_start();
	
	mail_css();
	build_table($data, $total);
	$msg = ob_get_contents();
	ob_end_clean();
	return $msg;
}


function send_weekly_mail() {
	$report_date = time();
	
	
	$to_date = strtotime("next monday", $report_date);
	$from_date = strtotime("last monday", $to_date);
	
	$subject = 'NCN Weekly Sales Report ('.date("Y/m/d", $from_date).'~'.date("Y/m/d", strtotime("-1 day", $to_date)).')';
	$msg = compose_weekly_mail($report_date);
	
	$to = 'reports@netclaimsnow.com';
	drupal_mail('ncn_report', 'weekly_report', $to, language_default(), array('subject'=>$subject, 'body'=>$msg));
}

function compose_weekly_mail($report_date){
	$data = array();
	$total= array();
	
	_ncn_report_get_data($data, $total, $report_date, "weekly");
	
	ob_start();
	
	mail_css();
	build_table($data, $total);
	$msg = ob_get_contents();
	ob_end_clean();
	return $msg;
}

function send_monthly_mail() {
	$report_date = time();
	
	$subject = 'NCN Monthly Sales Report ('.date('F Y', $report_date).')';
	$msg = compose_monthly_mail($report_date);
	
/*	$to = 'elight.haha@gmail.com';
	drupal_mail('ncn_report', 'monthly_report', $to, language_default(), array('subject'=>$subject, 'body'=>$msg));*/
	
	if($_SERVER['REMOTE_ADDR']=='103.240.34.101'){

		var_dump($msg);
		exit;
	}	
	
	$to = 'reports@netclaimsnow.com';
	drupal_mail('ncn_report', 'monthly_report', $to, language_default(), array('subject'=>$subject, 'body'=>$msg));
}

function compose_monthly_mail($report_date){
	$data = array();
	$total= array();
	
	_ncn_report_get_data($data, $total, $report_date, "monthly");
	
	ob_start();
	
	mail_css();
	build_table($data, $total);
	$msg = ob_get_contents();
	ob_end_clean();
	return $msg;
}


function mail_css() {
?>
<style type="text/css">
body{
	font: 12px Verdana,sans-serif;
}
.report-content {
	margin-top: 15px; 
}

table {
    margin: 1em 0;
    width: 100%;
    border-collapse: collapse;
}
td, th {
    padding: 0.3em 0.5em;
}

thead th {
    border-bottom: 2px solid #D3E7F4;
    color: #494949;
    font-weight: bold;
	padding: 0.3em 0.5em;
    padding-right: 1em;
    text-align: left;
}

tbody {
    border-top: 1px solid #CCCCCC;
}

tr.odd, tr.info {
    background-color: #EDF5FA;
}
tr.even {
    background-color: #FFFFFF;
}

tr.even, tr.odd, tbody th {
    -moz-border-bottom-colors: none;
    -moz-border-image: none;
    -moz-border-left-colors: none;
    -moz-border-right-colors: none;
    -moz-border-top-colors: none;
    border-color: #D3E7F4;
    border-style: solid;
    border-width: 1px 0;
}

tr.even, tr.odd {
    border-bottom: 1px solid #CCCCCC;
    padding: 0.1em 0.6em;
}

.refunded-price{
	color: red;
}
</style>
<?php 
}


function render_payment_cost($cost) {
	if (intval($cost)<0) {
		$str_cost = '<span class="refunded-price">- $'.number_format(-$cost, 2).'</span>'; 
	} else {
		$str_cost = '$'.number_format($cost, 2, '.', ',');
	}
	return $str_cost;
}

function ncn_report_get_best_while() {
	ncn_report_get_best_total_global(strtotime("10 June 2011"));
}

function ncn_report_get_best_cron_daily() {
	$today = date('U');
	ncn_report_get_best_total_global(strtotime('-2 months', $today));
}

/**
 * Implentation of hook_cron function
 */
function ncn_report_cron() {
    ncn_report_get_best_cron_daily();
}

function ncn_report_get_best_total_global($from) {
	$max_month = variable_get('best_total_monthly', 0);
	$max_week = variable_get('best_total_weekly', 0);
	$max_day = variable_get('best_total_daily', 0);
	
	$max_month = ncn_report_get_best_total_from($ts_max_month, $max_month, $from, 'monthly');
	$max_week = ncn_report_get_best_total_from($ts_max_week, $max_week, $from, 'weekly');
	$max_day = ncn_report_get_best_total_from($ts_max_day, $max_day, $from, 'daily');
	
	if ($max_month && $ts_max_month) {
		variable_set('best_total_monthly', $max_month);
		variable_set('best_total_monthly_ts', $ts_max_month);
	}
	if ($max_week && $ts_max_week) {
		variable_set('best_total_weekly', $max_week);
		variable_set('best_total_weekly_ts', $ts_max_week);
	}
	if ($max_day && $ts_max_day) {
		variable_set('best_total_daily', $max_day);
		variable_set('best_total_daily_ts', $ts_max_day);
	}
}

/**
 * ts_max : return value (ref)
 * max_total : current max total
 * from: from when
 * type : monthly/weekly/daily
 */
function ncn_report_get_best_total_from(&$ts_max, $max_total, $from, $type='daily') {
	$max = $max_total;
	$ts_max = 0;
	$unit = 'day';
	if ($type == 'weekly') { $unit = 'week'; }
	else if ($type == 'monthly') { $unit = 'month'; }
	
	$index_ts = $from;
	$today_ts = strtotime("+1 unit", date('U'));
	
	
	while ($index_ts < $today_ts) {
		$data = array();
		$total = array();
		
		_ncn_report_get_data($data, $total, $index_ts, $type);
		if ($total[1] > $max) {
			$max = $total[1];
			$ts_max = $index_ts;
		}
		
		$index_ts = strtotime("+1 $unit", $index_ts);
	}
	
	if ($ts_max == 0) {
		return 0;
	}
	
	return $max;
}

function ncn_report_get_best_total_value($report_total, $report_date, $type) {
	$variable_total = 'best_total_'.$type;
	$variable_ts = 'best_total_'.$type.'_ts';
	
	$max_total = variable_get($variable_total, 0);
	$max_ts = variable_get($variable_ts, 0);
	
	if ($report_total>$max_total) {
		variable_set($variable_total, $report_total);
		variable_set($variable_ts, $report_date);
		$max_total = $report_total;
		$max_ts = $report_date;
	}
	
	if ($type == "monthly") { $max_ts_str = date('F Y', $max_ts);	} 
	else if ($type == "weekly") { 
		$to = strtotime("next monday", $max_ts);
		$from = strtotime("last monday", $to);
		$max_ts_str = date("Y/m/d", $from)." ~ ".date("Y/m/d", strtotime("-1 day", $to));
	}
	else {$max_ts_str = date('Y/m/d', $max_ts); }
	
	return render_payment_cost($max_total). "&nbsp;&nbsp;&nbsp;($max_ts_str)";
}