<?php

/*
to the right of "Service Invoice"
 lets add a new column
 "Final Approval"
 under it is "Yes | No" buttons
 or "Do you appove this invoice"
 "Yes or No"
 this allows the member to make the final decision
 if yes > move to receivables
 if no... pop message box so member can explain problem with invoice.... the claim goes back in out for review status
 
*/

require_once('ncn_claims_manager.page.inc');
require_once('ncn_claims_manager.note.inc');

function ncn_claims_manager_init()
{
    drupal_add_js(drupal_get_path('module', 'ncn_claims_manager') . '/jquery.tinyscrollbar.js');
    drupal_add_js(drupal_get_path('module', 'ncn_claims_manager') . '/ncn_claims_manager.js');
    drupal_add_js(drupal_get_path('module', 'ncn_claims_manager') . '/jquery.maskedinput-1.2.2.js');
}

//------------------------------------------------------------------------------
function ncn_claims_manager_menu()
{
    // user account edit
    $items['account/my-account.html'] = array(
        'page callback' => 'ncn_edit_my_account',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );
    $items['account/my-extra-profile.html'] = array(
        'page callback' => 'ncn_edit_extra_profile',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );

    // complete distributor control page
    $items['account/distributor.html'] = array(
        'page callback' => 'ncn_distributor_page',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );

    // complete associate control page
    $items['account/associate.html'] = array(
        'page callback' => 'ncn_associate_page',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );

    // ajax call back for updating clains preview list
    $items['account/update_claim_preview'] = array(
        'page callback' => 'ncn_claims_manager_update_handler',
        'template' => 'page-inline',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );

    // ajax call to save the file note
    $items['account/save_file_note'] = array(
        'page callback' => 'ncn_claims_manager_save_file_note',
        'template' => 'page-inline',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );

    // ajax call back for sending to archives
    $items['account/send_to_archive'] = array(
        'page callback' => 'ncn_claims_manager_send_to_archive',
        'template' => 'page-inline',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );

    // ajax call back for defining a partial payment
    $items['account/set_partial_payment'] = array(
        'page callback' => 'ncn_claims_manager_set_partial_payment',
        'template' => 'page-inline',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );

    // approve invoice and bounce to receivables
    $items['account/approve_invoice/%'] = array(
        'page callback' => 'ncn_claims_manager_approve_invoice',
        'template' => 'page-inline',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );

    // purchase invoice and bounce to receivables
    $items['account/purchase_invoice'] = array(
        'page callback' => 'ncn_claims_manager_purchase_invoice',
        'template' => 'page-inline',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );

    // reject invoice and bounce to thread reply
    $items['account/reject_invoice'] = array(
        'page callback' => 'ncn_claims_manager_reject_invoice',
        'template' => 'page-inline',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );

    $items['account/serve_invoice_file'] = array(
        'page callback' => 'ncn_claims_manager_serve_invoice_file',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );

    $items['account/delete_invoice_file'] = array(
        'page callback' => 'ncn_claims_manager_delete_invoice_file',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );

    $items['account/submit_claim'] = array(
        'page callback' => 'ncn_claims_manager_submit_claim_outforreview',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );

    $items['account/confirm_submit_claim'] = array(
        'page callback' => 'ncn_claims_manager_submit_claim_confirm',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );

    $items['account/additional_claim_info/%'] = array(
        'page callback' => 'ncn_claims_manager_additional_claim_info',
        'page arguments' => array(2),
        'access callback' => 'ncn_claims_manager_check_access_additional_page',
        'access arguments' => array(2),
    );
    $items['account/additional_claim_info_view/%'] = array(
        'page callback' => 'ncn_claims_manager_additional_claim_info_view',
        'page arguments' => array(2),
        'access callback' => 'ncn_claims_manager_check_access_additional_page',
        'access arguments' => array(2),
    );

    $items['account/scope_sheet/%/%'] = array(
        'page callback' => 'ncn_claims_manager_scope_sheet',
        'page arguments' => array(2, 3),
        'access callback' => 'ncn_claims_manager_check_access_scopesheet_page',
        'access arguments' => array(2, 3),
    );
    $items['account/scope_sheet_view/%/%'] = array(
        'page callback' => 'ncn_claims_manager_scope_sheet_view',
        'page arguments' => array(2, 3),
        'access callback' => 'ncn_claims_manager_check_access_scopesheet_page',
        'access arguments' => array(2, 3),
    );
    $items['account/approve_invoice'] = array(
        'title' => 'approve invoice notification',
        'description' => 'approve invoice notification(claim moved from "Out for Review" to "Receivables").',
        'page callback' => 'dblog_top',
        'page arguments' => array('invoice_notification'),
        'access arguments' => array('access invoice notification'),
        'file' => 'dblog.admin.inc',
        'file path' => drupal_get_path('module', 'dblog'),
    );
  

    ncn_claims_manager_menu_note($items);

    return $items;
}

//------------------------------------------------------------------------------
// complete user account edit page
function ncn_claims_manager_get_account_header_menu()
{
    global $user;
    $menu_data = menu_navigation_links('menu-account-header');
    if (isset($_SESSION['admin_sandbox']) && $_SESSION['admin_sandbox'] == $user->uid) {
        $menu_data['menu-310']['href'] = 'user/back_to_admin';
        $menu_data['menu-310']['title'] = 'Back to Admin';
    }
    return $menu_data;
}

function ncn_edit_my_account()
{
    GLOBAL $user;

    ob_start();
    ?>
    <div id="my_account_page">
        <div class="map-content">
            <div class="map-header">
                <div class="title">Edit My Profile</div>
                <div class="help"><a href="#">Help</a></div>
            </div>
            <div class="map-content-wrapper">
                <?php user_edit_new(false, $user->uid); // function from ncn_admin.module ?>
            </div>
        </div>
    </div>
    <?php
    $contents = ob_get_contents();
    ob_end_clean();

    return $contents;

}

function ncn_edit_extra_profile()
{
    GLOBAL $user;

    ob_start();
    ?>
    <div id="my_account_page">
        <div class="map-content">
            <div class="map-header">
                <div class="title">Edit My Extra Profile</div>
                <div class="help"><a href="#">Help</a></div>
            </div>
            <div class="map-content-wrapper">
                <?php user_edit_extra_profile($user->uid, false); // function from ncn_admin.module ?>
            </div>
        </div>
    </div>
    <?php
    $contents = ob_get_contents();
    ob_end_clean();

    return $contents;
}

//------------------------------------------------------------------------------
function ncn_distributor_page()
{
    return theme('ncn_dist_page', 1);
}

function ncn_associate_page()
{
    return theme('ncn_asso_page', 1);
}

//------------------------------------------------------------------------------
// assigns new account manager
function get_account_manager_id($distributor_id)
{
  //  $query = "SELECT * FROM users_parent WHERE parent=" . $distributor_id;
    $result = db_query('SELECT * FROM {users_parent} WHERE parent=:a',array(':a'=>$distributor_id));
    $row_count = $result->rowCount();

    $lowest_val = 1000000;
    $lowest_key = -1;


    for ($i = 0; $i < $row_count; $i++) 
	foreach($result as $row)
	{
        $row = (array)$row;

//        $query2 = "SELECT * FROM member_id_pool WHERE owner=" . $row['uid'];
        $result2 = db_query('SELECT * FROM {member_id_pool} WHERE owner=:a',array(':a'=>$row['uid']));
        $row_count2 = $result2->rowCount();

        if ($row_count2 < $lowest_val) {
            $lowest_val = $row_count2;
            $lowest_key = $row['uid'];
        }
    }

    // check for errors
    if ($lowest_key == -1) {
        return false;
    }

    return $lowest_key;
}

//------------------------------------------------------------------------------
function charge_distributor($owner, $product_nid, $target_mid)
{
    // get cim details (for distributor)
    $user = user_load($owner);

    // check for free
    if ($user->profile_credit_card_number == '5424000000000015') {
        return true;
    }

//    $query = "SELECT * FROM member_distributor_cim WHERE username=\"" . AddSlashes($user->name) . "\";";
    $result = db_query('SELECT * FROM {member_distributor_cim} WHERE username=:a',array(':a'=>$user->name));
    $row_count = $result->rowCount();
    $cim_profile = $result->fetchAssoc();


    /*
    [customerProfileId] => 3031071
    [customerPaymentProfileId] => 2620455
*/

    set_time_limit(59);
    // get product details
    //$node = node_load(33);
    $node = node_load($product_nid);
    $node->data = unserialize($node->data);

    if ($node->sell_price != 0) {
        // attempt payment
        $content =
            "<?xml version=\"1.0\" encoding=\"utf-8\"?>" .
            "<createCustomerProfileTransactionRequest xmlns=\"AnetApi/xml/v1/schema/AnetApiSchema.xsd\">" .
            MerchantAuthenticationBlock() .
            "<transaction>" .
            "<profileTransAuthCapture>" .
            "<amount>" . (string)$node->sell_price . "</amount>" . // should include tax, shipping, and everything.
            "<shipping>" .
            "<amount>0.00</amount>" .
            "<name>" . (string)$node->title . "</name>" .
            "<description>" . (string)$node->title . "</description>" .
            "</shipping>" .

            "<lineItems>" .
            "<itemId>123456</itemId>" .
            "<name>" . (string)$node->title . "</name>" .
            "<description>" . (string)$node->title . "</description>" .
            "<quantity>1</quantity>" .
            "<unitPrice>" . (string)$node->sell_price . "</unitPrice>" .
            "<taxable>false</taxable>" .
            "</lineItems>" .

            "<customerProfileId>" . $cim_profile["customerProfileId"] . "</customerProfileId>" .
            "<customerPaymentProfileId>" . $cim_profile["customerPaymentProfileId"] . "</customerPaymentProfileId>" .
            "<order>" .
            "<invoiceNumber>" . get_unique_auth_profile_id() . "</invoiceNumber>" .
            "</order>" .
            "</profileTransAuthCapture>" .
            "</transaction>" .
            "</createCustomerProfileTransactionRequest>"; // <?php

//			"<customerShippingAddressId>" . $_POST["customerShippingAddressId"] . "</customerShippingAddressId>".

        $response = send_xml_request($content);
        $parsedresponse = parse_api_response($response);

        $auth_successful = true;
        if ("Ok" == $parsedresponse->messages->resultCode) {
//			echo "A transaction was successfully created for customerProfileId <b>"
//				. htmlspecialchars($_POST["customerProfileId"])
//				. "</b>.<br><br>";

            $auth_successful = true;
            $response_code = 1; // success

            ncn_debug_message("Distributor charge successful.");

        } else {

            $auth_successful = false;
            $response_code = 3;

            $response_reason_text = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $parsedresponse->messages->message->text);

            ncn_debug_message("Distributor charge failed:" . $response_reason_text);
        }

    } else {
        $auth_successful = true;
    }
    //*** payment log ***//
    $payment_success = ($auth_successful) ? 1 : 0;
    ncn_report_payment_log($product_nid, $payment_success, $user, 0, $target_mid, 0, $user->uid);

    return $auth_successful;
}

//------------------------------------------------------------------------------
// preprocess function
function template_preprocess_ncn_dist_page(&$vars)
{
    // check create step
    if (!isset($_POST['create_step']) || $_POST['create_step'] == '') {
        $create_step = 'input';
    } else {
        $create_step = $_POST['create_step'];
    }

    GLOBAL $user;
    if (isset($_POST['tfunction'])) {
        switch ($_POST['tfunction']) {
            case "authorize_report":
                if (ncn_dist_authorize_report() == true) {
                    drupal_goto('account/distributor.html/sales_report');
                } else {
                    drupal_set_message('Authorization is failed. Please try again.', 'error');
                }
                break;
            case "change_report_pass":
                if (ncn_dist_change_report_pass()) {
                    drupal_goto("account/distributor.html/sales_report");
                }
                break;
            // ---- add a new member ----
            case "paste_ids":

                // sanitize input
                $member_id = $new_string = preg_replace("/[^a-zA-Z0-9\s]/", "", $_POST['member_id']);
                //$member_id = generate_member_id();
                $first_name = $new_string = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $_POST['first_name']);
                $last_name = $new_string = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $_POST['last_name']);
                $legalname = $new_string = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $_POST['legalname']);
                $address = $new_string = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $_POST['address']);
                $city = $new_string = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $_POST['city']);
                $state = $new_string = preg_replace("/[^a-zA-Z0-9\s]/", "", $_POST['state']);
                $country = $new_string = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $_POST['country']);
                $zip = $new_string = preg_replace("/[^a-zA-Z0-9\s]/", "", $_POST['zip']);
                $officephone = $new_string = preg_replace("/[^a-zA-Z0-9\s]/", "", $_POST['officephone']);
                $contactemail = $new_string = preg_replace("/[^a-zA-Z0-9\/:@\.\+-s]/", "", $_POST['contactemail']);
                $sales_rep = $new_string = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $_POST['sales_rep']);

                $card_number = trim($_POST['card_number']); //if ($card_number == "") {$card_number = '5424000000000015'; }
                $expiration_date = trim($_POST['expiration_date']);
                $security_code = trim($_POST['security_code']);

                //* validation */
                if ((trim($member_id) == "") || (trim($first_name) == "") || (trim($last_name) == "") || (trim($legalname) == "") ||
                    (trim($country) == "") || (trim($address) == "") || (trim($city) == "") || (trim($state) == "") ||
                    (trim($zip) == "") || (trim($officephone) == "") || (trim($contactemail) == "") || (trim($sales_rep) == "") ||
                    (trim($card_number) == "") || (trim($expiration_date) == "") || (trim($security_code) == "")

                ) {
                    drupal_set_message("You need to input all fields.", "error");
                    break;
                }

                if (!valid_email_address($contactemail)) {
                    drupal_set_message('Contact email address is invalid. Please retry to input email address.', 'error');
                    break;
                }
                // get distributor name
                $dist = user_load($_POST['distributor']);
                $distributor_name = $dist->profile_firstname . ' ' . $dist->profile_lastname;

                // calculate the owner
                $owner = $_POST['distributor'];

                // check to see if the id is in range
                /*				$query = "SELECT * FROM member_id_ranges WHERE distributor=".$GLOBALS['user']->uid." AND start<=".$member_id." AND end >= ".$member_id;
				$result = db_query($query);
				$row_count = $result->rowCount();*/

//				if ($row_count > 0)
//				{
                // check first existing member id
           //     $query = "SELECT * FROM member_id_pool WHERE member_id=\"" . AddSlashes($member_id) . "\" AND used=1;";
                $result = db_query('SELECT * FROM {member_id_pool} WHERE member_id=:a AND used=:b',array(':a'=>$member_id,':b'=>1));
                $found_used = $result->rowCount();

 //               $query = "SELECT * FROM member_id_pool WHERE member_id=\"" . AddSlashes($member_id) . "\" AND used=0;";
                $result = db_query('SELECT * FROM {member_id_pool} WHERE member_id=:a AND used=0',array(':a'=>$member_id));
                $found_unused = $result->rowCount();

                // Progress to Next Step ( input -> create )
                if ($create_step == 'input') {
                    $create_step = 'create';
                    break;
                } else if ($create_step == 'create') {
                    $create_step = 'input';
                } else {
                    //error
                    break;
                }

                // allow add
                /*if (isset($_POST['overwrite_existing']))
				{
					if (($found_unused > 0) && ($found_used == 0))
					{
						$allow_add = true;
						$ignore_distributor_charge = true;	// do not charge distributor for member id again
					}
					else
					{	$allow_add = false;
					}
				}
				else
				{
					$allow_add = false;
				}*/
                $allow_add = false;
                if ($found_used == 0 && $found_unused == 0) {
                    $allow_add = true;
                }

                if ($allow_add == true) {
                    //* Add for payment options *//
                    // get member type - 0: Gold Member, 1: Silver Member
                    $member_type = 0;
                    if (isset($_POST['member_type'])) {
                        $member_type = $_POST['member_type'];
                    }
                    // get singup fee type
                    $product_nid = 33;
                    if (isset($_POST['retail_kit'])) {
                        $product_nid = $_POST['retail_kit'];
                    }
                    $signup_fee_type = get_signup_fee_type($product_nid);

                    // check credit card
                    $add_cim_profile = false;
                    $error = false; // ***

                    if (($card_number != '') && ($card_number != '5424000000000015')) {

                        // attempt to add the customer profile to auth.net for this member
                        $date = explode("/", $expiration_date);

                        if (sizeof($date) == 2) {
                            $date = "20" . $date[1] . "-" . $date[0];
                        } else {
                            $date = '';
                        }

                        // add the user to cim
                        $content =
                            "<?xml version=\"1.0\" encoding=\"utf-8\"?>" .
                            "<createCustomerProfileRequest xmlns=\"AnetApi/xml/v1/schema/AnetApiSchema.xsd\">" .
                            MerchantAuthenticationBlock() .
                            "<profile>" .
                            "<merchantCustomerId>" . $member_id . date("U") . "</merchantCustomerId>" . // Your own identifier for the customer.
                            "<description>" . $first_name . " " . $last_name . "</description>" .
                            "<email>" . $contactemail . "</email>" .
                            "</profile>" .
                            "</createCustomerProfileRequest>"; // <?php

                        $response = send_xml_request($content);
                        $parsedresponse = parse_api_response($response);

                        if ($parsedresponse->messages->resultCode == 'Error') {
                            drupal_set_message(t('Could not create user profile'), 'error');
                            $error = true;
                        } else {
                            set_time_limit(59);

                            $customerProfileId = $parsedresponse->customerProfileId;


                            // add a payment profile to cim
                            $content =
                                "<?xml version=\"1.0\" encoding=\"utf-8\"?>" .
                                "<createCustomerPaymentProfileRequest xmlns=\"AnetApi/xml/v1/schema/AnetApiSchema.xsd\">" .
                                MerchantAuthenticationBlock() .
                                "<customerProfileId>" . $customerProfileId . "</customerProfileId>" .
                                "<paymentProfile>" .
                                "<billTo>" .
                                "<firstName>" . $first_name . "</firstName>" .
                                "<lastName>" . $last_name . "</lastName>" .
//								 "<country>".$country."</country>".
                                "<address>" . $address . "</address>" .
                                "<city>" . $city . "</city>" .
                                "<state>" . $state . "</state>" .
                                "<zip>" . $zip . "</zip>" .
                                "<phoneNumber>000-000-0000</phoneNumber>" .
                                "</billTo>" .
                                "<payment>" .
                                "<creditCard>" .
                                "<cardNumber>" . $card_number . "</cardNumber>" .
                                "<expirationDate>" . $date . "</expirationDate>" . // required format for API is YYYY-MM
                                "<cardCode>" . $security_code . "</cardCode>" .
                                "</creditCard>" .
                                "</payment>" .
                                "</paymentProfile>" .
                                "<validationMode>liveMode</validationMode>" . // or liveMode
                                "</createCustomerPaymentProfileRequest>"; // <?php

                            $response = send_xml_request($content);
                            $parsedresponse = parse_api_response($response);
                            $customerPaymentProfileId = $parsedresponse->customerPaymentProfileId;


                            // check for cc/details errors
                            if ($parsedresponse->messages->resultCode == 'Error') {
                                $msg = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $parsedresponse->messages->message->text);
                                $msg = 'Invalid credit/debit card details';

                                drupal_set_message($msg, 'error');
                                $error = true;
                                //$form_state['redirect'] = 'apply.html?id='.$_GET['id'];
                            } else {
                                $add_cim_profile = true;
                                ncn_debug_message("User card details were good, flagging to add cim_profile.");
                            }
                        } // END adding profile failed

                    } else
                        if ($card_number == '5424000000000015') // free card number
                        {
                            drupal_set_message('Adding new FREE member...', 'status');

                            $customerProfileId = "FREE";
                            $customerPaymentProfileId = "FREE";
                            $add_cim_profile = true;
                            $ignore_distributor_charge = true;
                        }

                    if ($error == false) {
                        // charge the distributor?
                        if (!isset($ignore_distributor_charge)) {
                            //ncn_debug_message("Charging distributor signup fee.");
                            $res = charge_distributor($owner, $product_nid, $member_id);

                            // charging distributor failed.
                            if ($res == false) {
                                $error = true;
                            }
                        } // do not charge distributor again (they are re-adding a existing member id)
                        else {
                            ncn_debug_message("Ignoring distributor charge for existing member id#.");
                        }
                    }

                    // do we add new cim profile?
                    if ($add_cim_profile == true) {
                     //   $query = "DELETE FROM member_cim WHERE member_id=\"" . AddSlashes($member_id) . "\";";
                        $result = db_query('DELETE FROM {member_cim} WHERE member_id=:a',array(':a'=>$member_id));

                      //  $query = "INSERT INTO member_cim VALUES(NULL, \"" . AddSlashes($member_id) . "\", \"" . AddSlashes($customerProfileId) . "\", \"" . AddSlashes($customerPaymentProfileId) . "\");";
                        $result = db_query('INSERT INTO {member_cim} VALUES(NULL,:a,:b,:c)',
                            array(':a'=>$member_id,':b'=>$customerProfileId,':c'=>$customerPaymentProfileId));
                    }

                    // email the user with access details
                    if ($error == false) {
                        $params = array(
                            '!firstname' => $first_name,
                            '!lastname' => $last_name,
                            '!member_id' => $member_id,
                        );

                        drupal_mail('ncn_claims_manager', 'id_to_member', $contactemail, language_default(), $params);


                        // insert into database
//                        $query = "DELETE FROM member_id_pool WHERE `member_id`=\"" . AddSlashes($member_id) . "\";";
                        $result = db_query('DELETE FROM {member_id_pool} WHERE member_id=:a',array(':a'=>$member_id));

                    //    $query = "INSERT INTO member_id_pool VALUES(NULL, \"" . AddSlashes($member_id) . "\", 1, \"" . AddSlashes($first_name) . "\", \"" . AddSlashes($last_name) . "\", \"" . AddSlashes($legalname) . "\", \"" . AddSlashes($country) . "\", \"" . AddSlashes($address) . "\", \"" . AddSlashes($city) . "\", \"" . AddSlashes($state) . "\", \"" . AddSlashes($zip) . "\", \"" . AddSlashes($officephone) . "\", \"" . AddSlashes($contactemail) . "\", \"" . AddSlashes($distributor_name) . "\", \"" . AddSlashes($sales_rep) . "\", \"" . AddSlashes($security_code) . "\", " . $owner . ", 0, 0, 0, 0, $member_type ,$signup_fee_type, " . date('U') . " )";
                        $result = db_query('INSERT INTO {member_id_pool} VALUES(NULL,:a,:b,:c,:d,:e,:f,:g,:h,:i,:j,:k,:l,:m,:n,:o,:p,:q,:r,:s,:t,:u,:v,:w)',
                            array(':a'=>$member_id,':b'=>1,':c'=>$first_name,':d'=>$last_name,':e'=>$legalname,':f'=>$country,':g'=>$address,
                            ':h'=>$city,':i'=>$state,':j'=>$zip,':k'=>$officephone,':l'=>$contactemail,':m'=>$distributor_name,':n'=>$sales_rep,
                            ':o'=>$security_code,':p'=>$owner,':q'=>0,':r'=>0,':s'=>0,':t'=>0,':u'=>$member_type ,':v'=>$signup_fee_type,':w'=>date('U')));

                        drupal_set_message('Added new member to the pool.', 'status');

                        //** NCN Gold Member 1st Special // ** IGNORE **
                        if ($_POST['retail_kit'] == 57) {
                            ncn_admin_insert_member_first_free($member_id);
                        }

                        // auto-assign account manager
                        ncn_admin_update_am_auto_assign();
                        ncn_admin_auto_assign_member_to_am($member_id);

                        if (module_exists('ncn_capsulecrm')) {
                            ncn_capsulecrm_create_member($member_id);
                        }
                        unset($_POST); // clear the form
                    } // END add member

                } // duplicate member id
                else {
                    drupal_set_message('That member id# is already in the database/being used.', 'error');
                }
                /*				}
				else
				{
					drupal_set_message('That member id# has not been assigned to this account.' , 'error');
				}
*/
                break;
        }
    }


    // ---- build content ----
    ob_start();

    switch (arg(2)) {
        // ---- create a new member ----
        default:
        case "create":
            $vars['title'] = "Create Member";
            $vars['page_class'] = "create-member";
            ?>

            <fieldset class="terms-wrapper" style="<?php if ($create_step == 'input') {
                echo 'display: none;';
            } ?>">
                <div class="term-conditions"><tt><p align="justify">
                            <?php echo nl2br(variable_get('ncn_terms_text_dist', '')); ?>
                        </p></tt></div>
                <br/>

                <div class="create-claim-agree-div">
                    <input type="submit" id="create_member_btn" class="create-claim-agree-btn"
                           onclick="dist_create_member_submit('create_member_btn')" value="I Agree"/>
                    <span>&nbsp; or &nbsp;<a href="<?= $GLOBALS['base_url']; ?>/account">cancel</a></span>
                </div>
            </fieldset>
            <fieldset style="<?php if ($create_step == 'create') {
                echo 'display: none;';
            } ?>">

                <p class="description">Input fields for a new member and click "submit" to add to the pool.</p>

                <form method="POST" id="create_member_submit_form">
                    <input type="hidden" name="tfunction" value="paste_ids"/>
                    <input type="hidden" name="create_step" value="<?php echo $create_step; ?>"/> <!-- STEP -->
                    <table style="width:100%;border:0;">
                        <tr>
                            <td class="td-label">Member ID#:</td>
                            <td><input type="text" name="member_id" value="<?= generate_member_id(); ?>" readonly></td>
                        </tr>
                        <tr>
                            <td class="td-label">First Name:</td>
                            <td><input type="text" name="first_name" value="<?= $_POST['first_name']; ?>"></td>
                        </tr>
                        <tr>
                            <td class="td-label">Last Name:</td>
                            <td><input type="text" name="last_name" value="<?= $_POST['last_name']; ?>"></td>
                        </tr>
                        <tr>
                            <td class="td-label">Company's Legal Name:</td>
                            <td><input type="text" name="legalname" value="<?= $_POST['legalname']; ?>"></td>
                        </tr>
                        <tr>
                            <td class="td-label">Country:</td>
                            <td><?php draw_countryform_part('country', false, false); ?></td>
                        </tr>
                        <tr>
                            <td class="td-label">Address:</td>
                            <td><input type="text" name="address" value="<?= $_POST['address']; ?>"></td>
                        </tr>
                        <tr>
                            <td class="td-label">City:</td>
                            <td><input type="text" name="city" value="<?= $_POST['city']; ?>"></td>
                        </tr>
                        <tr>
                            <td class="td-label">Province/State:</td>
                            <td><?php draw_stateform_part('state', false, false); ?></td>
                        </tr>
                        <tr>
                            <td class="td-label">Zip:</td>
                            <td><input type="text" name="zip" value="<?= $_POST['zip']; ?>"></td>
                        </tr>
                        <tr>
                            <td class="td-label">Office Phone:</td>
                            <td><input type="text" name="officephone" value="<?= $_POST['officephone']; ?>"></td>
                        </tr>
                        <tr>
                            <td class="td-label">Contact Email:</td>
                            <td><input type="text" name="contactemail" value="<?= $_POST['contactemail']; ?>"></td>
                        </tr>
                        <tr>
                            <td class="td-label">Sales Rep:</td>
                            <td><input type="text" name="sales_rep" value="<?= $_POST['sales_rep']; ?>"></td>
                        </tr>
                        <?php
                        if (is_distributor($GLOBALS['user']) == true) {
                            distributor_dropdown(); // It couldn't flow through this way.
                        } else {
                            ?>
                            <tr>
                                <td class="td-label">Distributor:</td>
                                <td><?php distributor_dropdown(); ?></td>
                            </tr>
                        <?php
                        }
                        ?>
                        <!-- <tr>
					<td class="td-label"></td>
					<td><input type="checkbox" name="overwrite_existing" style="width:15px;"> Overwrite existing unactivated member</td>
				</tr> -->
                        <tr>
                            <td class="td-label">Member Type:</td>
                            <td>
                                <?php
                                $member_type = 0;
                                if (isset($_POST['member_type'])) {
                                    $member_type = $_POST['member_type'];
                                }
                                ?>
                                <select id="member_type" name="member_type">
                                    <option value="0" <?php if ($member_type == 0) {
                                        echo "selected";
                                    } ?> >NCN Gold Member
                                    </option>
                                    <option value="1" <?php if ($member_type == 1) {
                                        echo "selected";
                                    } ?> >NCN Silver Member
                                    </option>
                                    <option value="2" <?php if ($member_type == 2) {
                                        echo "selected";
                                    } ?> >NCN Gold Lite Member
                                    </option>
                                    <option value="3" <?php if ($member_type == 3) {
                                        echo "selected";
                                    } ?> >NCN Coach on Call Member
                                    </option>
                                    <option value="4" <?php if ($member_type == 4) {
                                        echo "selected";
                                    } ?> >NCN Gold Coach Member
									<option value="5" <?php if ($member_type == 5) {
                                        echo "selected";
                                    } ?> >CSI Member
                                    </option>
                                </select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-label">SignUp Fee Type:</td>
                            <td>
                                <?php
                                $product_nid = 33;
                                if (isset($_POST['retail_kit'])) {
                                    $product_nid = $_POST['retail_kit'];
                                }
                                echo ncn_claims_manager_draw_signup_fee_select('retail_kit', $product_nid);
                                ?>
                            </td>
                        </tr>
                    </table>

                    <p>&nbsp;</p>
                    <!-- <p class="description">Credit/Debit Card Details (optional)</p> -->
                    <table style="width:100%; border:0;">
                        <tr>
                            <td class="td-label">Card Number:</td>
                            <td><input type="text" name="card_number" value="<?= $_POST['card_number']; ?>"></td>
                        <tr>
                        <tr>
                            <td class="td-label">Expiration Date (mm/yy):</td>
                            <td><input type="text" name="expiration_date" value="<?= $_POST['expiration_date']; ?>">
                            </td>
                        <tr>
                        <tr>
                            <td class="td-label">Security Code:</td>
                            <td><input type="text" name="security_code" value="<?= $_POST['security_code']; ?>"></td>
                        <tr>
                        <tr>
                            <td class="td-label"></td>
                            <td><input type="submit" id="create_member_btn" class="create-member-submit-btn"
                                       onclick="dist_create_member_submit('create_member_btn')" value="submit"/></td>
                        <tr>

                    </table>


                </form>
            </fieldset>

            <?php

            break;

        // ---- view member list ----
        case "view_member_list":
            drupal_add_css(drupal_get_path('module', 'ncn_message') . '/ncn_message.css', 'module', 'all', FALSE);
            drupal_add_js(drupal_get_path('module', 'ncn_message') . '/ncn_message.js');
            $page_records = 8;
            $vars['title'] = "View Member List";
            $vars['page_class'] = "view-member-list";
            ?>
            <div class="clear-block">
                <div class="ncn-pager-ranger" style="font-weight: bold; margin-bottom:5px;"></div>
            </div>
            <div class="table-header">
                <table>
                    <tr class="header">
                        <td class="td-member-id"><strong>Member ID</strong></td>
                        <td class="td-first-name"><strong>First Name</strong></td>
                        <td class="td-last-name"><strong>Last Name</strong></td>
                        <td class="td-company-name"><strong>Company Name</strong></td>
                        <td class="td-address"><strong>Address</strong></td>
                        <td class="td-city"><strong>City</strong></td>
                        <td class="td-state"><strong>State</strong></td>
                        <td class="td-zip"><strong>Zip</strong></td>
                        <td class="td-phone"><strong>Phone</strong></td>
                        <td class="td-contact"><strong>Contact Member</strong></td>
                    </tr>
                </table>
            </div>
            <div class="table-body">
                <?php
          //      $query = "SELECT * FROM member_id_pool WHERE owner=" . $GLOBALS['user']->uid . " AND used=1;";
                $result = db_query('SELECT * FROM {member_id_pool} WHERE owner=:a AND used=1',array(':a'=>$GLOBALS['user']->uid));
                $row_count = $result->rowCount();
                $page_num = 0;

                $result_1 = db_query('SELECT * FROM {profile_field} WHERE name=:a',array(':a'=>'profile_memberid'));
                $memberid_field = $result_1->fetchAssoc();

                $member_count = 0;
                for ($i = 0; $i < $row_count; $i++) {
                    $row = $result->fetchAssoc();

                    $result_1 = db_query('SELECT * FROM {profile_values} WHERE fid=:a AND value=:b ',
                    array(':a'=>$memberid_field['fid'],':b'=>$row['member_id']))->fetchField();
                    if ($result_1 == 0) {
                        continue;
                    }
                    ?>
                    <?php if ($member_count % $page_records == 0) {
                        $page_num++; ?>
                        <table class="ncn-pager ncn-pager-page-<?php echo $page_num; ?>">
                    <?php } ?>
                    <tr>
                        <td class="td-member-id"><?= $row['member_id']; ?></td>
                        <td class="td-first-name"><?= $row['first_name']; ?></td>
                        <td class="td-last-name"><?= $row['last_name']; ?></td>
                        <td class="td-company-name"><?= $row['legalname']; ?></td>
                        <td class="td-address"><?= $row['address']; ?></td>
                        <td class="td-city"><?= $row['city']; ?></td>
                        <td class="td-state"><?= $row['state']; ?></td>
                        <td class="td-zip"><?= $row['zip']; ?></td>
                        <td class="td-phone"><?= $row['officephone']; ?></td>
                        <td class="td-contact"><a
                                href="mailto:<?= $row['contactemail']; ?>"><?= $row['contactemail']; ?></a></td>
                    </tr>
                    <?php if ($member_count % $page_records == ($page_records - 1)): ?>
                        </table>
                    <?php endif; ?>
                    <?php
                    $member_count += 1;
                }
                if ($member_count == 0) {
                    ?>
                    <table class="">
                        <tr>
                            <td colspan="10">No Members</td>
                        </tr>
                    </table>
                <?php
                } else if (($member_count % $page_records) != 0) {
                    for ($i = $member_count; $i < (ceil($member_count / $page_records) * $page_records); $i++) {
                        ?>
                        <tr>
                            <td colspan="10">&nbsp;</td>
                        </tr>
                    <?php
                    }
                    echo "</table>";
                }
                ?>

            </div>
            <div class="ncn-pager-control clearfix">    <!-- pager_control -->
                <div style="float: right">
                    <a class="first" href="#" onclick="pm_page_action('first');">first</a>
                    <a class="prev" href="#" onclick="pm_page_action('prev');">prev</a>
                    <a class="next" href="#" onclick="pm_page_action('next');">next</a>
                    <a class="last" href="#" onclick="pm_page_action('last');">last</a>
                </div>
            </div>
            <script type="text/javascript">
                var total_records = <?php echo $member_count ?>;
                var page_records = <?php echo $page_records; ?>;
                var page_number = 1;	//global;
                var page_count = <?php echo $page_num; ?>;
                jQuery(document).ready(function () {
                    pm_select_page(page_number);
                    if (total_records <= page_records) {
                        jQuery('.ncn-pager-ranger').css('display', 'none');
                        jQuery('.ncn-pager-control').css('display', 'none');
                    }
                });
            </script>
            <?php
            break;

        case "sales_report":
            $vars['title'] = "Sales Report";
            $vars['page_class'] = "sales-report";
            render_sales_report_page($user->uid, $vars);
            break;
        case "authentication":
            $vars['title'] = "Authorize Distributor";
            $vars['page_class'] = "authentication";
            render_authorize_page($user->uid, 'dist');
            break;
        case "change_report_pass":
            $vars['title'] = "Change Distributor Password";
            $vars['page_class'] = "change-pass";
            render_change_report_pass_page($user->uid, 'dist');
            break;
        //edit users account
        case "my-account":
            $vars['title'] = "Edit My Profile";
            $vars['page_class'] = "my-account";
            user_edit_new(false, $user->uid); // function from ncn_admin.module
            /*print ncn_edit_my_account();*/
            break;

    }

    $vars['content'] = ob_get_contents();
    ob_end_clean();
}

/**
 */
function ncn_claims_manager_draw_signup_fee_select($name, $default)
{
    // #options
    $payments = array();
    $pnode = node_load(33);
    $pnode->data = unserialize($pnode->data);
    $payments['33'] = $pnode; // NCN Membership Kit ($279)
    $pnode = node_load(43);
    $pnode->data = unserialize($pnode->data);
    $payments['43'] = $pnode; // NCN Membership Kit Options ($99)

    /* NCN GOLD MEMBER SPECIAL  */
    $pnode = node_load(48);
    $pnode->data = unserialize($pnode->data);
    $payments['48'] = $pnode; // NCN Membership Kit Options ($49)

    /*$pnode = node_load(57);	$pnode->data = unserialize($pnode->data);
	$payments['57'] = $pnode;	// NCN Gold First Special($0)*/

    /* <!-- <input type="checkbox" name="retail_kit_329"> <?= $pnode->title; ?> ($<?= number_format($pnode->sell_price, 2); ?>) --> */
    //ob_start();
    $select_field = "<select id=\"$name\" name=\"$name\"> \r\n";
    foreach ($payments as $key => $product) {
        $selected = ($key == $default) ? "selected" : "";
        $select_field .= "<option value=\"$key\" $selected >" . $product->title . " ($" . number_format($product->cost, 2) . ")</option>";
    }
    $select_field .= "</select> \r\n";
    //$select_field = ob_get_contents();
    //ob_end_clean();

    return $select_field;
}

//------------------------------------------------------------------------------
// preprocess function
function template_preprocess_ncn_asso_page(&$vars)
{
    // check create step
    if (!isset($_POST['create_step']) || $_POST['create_step'] == '') {
        $create_step = 'input';
    } else {
        $create_step = $_POST['create_step'];
    }

    GLOBAL $user;
    if (isset($_POST['tfunction'])) {
        switch ($_POST['tfunction']) {
            // ---- add a new member ----
            case "paste_ids":

                // sanitize input
                $member_id = $new_string = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $_POST['member_id']);
                //$member_id = generate_member_id();
                $first_name = $new_string = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $_POST['first_name']);
                $last_name = $new_string = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $_POST['last_name']);
                $legalname = $new_string = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $_POST['legalname']);
                $country = $new_string = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $_POST['country']);
                $address = $new_string = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $_POST['address']);
                $city = $new_string = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $_POST['city']);
                $state = $new_string = preg_replace("/[^a-zA-Z0-9\s]/", "", $_POST['state']);
                $zip = $new_string = preg_replace("/[^a-zA-Z0-9\s]/", "", $_POST['zip']);
                $officephone = $new_string = preg_replace("/[^a-zA-Z0-9\s]/", "", $_POST['officephone']);
                $contactemail = $new_string = preg_replace("/[^a-zA-Z0-9\/:@\.\+-s]/", "", $_POST['contactemail']);
                $sales_rep = $new_string = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $_POST['sales_rep']);

                $card_number = trim($_POST['card_number']); //if ($card_number == "") {$card_number = '5424000000000015'; }
                $expiration_date = trim($_POST['expiration_date']);
                $security_code = trim($_POST['security_code']);

                //* validation */
                if ((trim($member_id) == "") || (trim($first_name) == "") || (trim($last_name) == "") || (trim($legalname) == "") ||
                    (trim($country) == "") || (trim($address) == "") || (trim($city) == "") || (trim($state) == "") ||
                    (trim($zip) == "") || (trim($officephone) == "") || (trim($contactemail) == "") || (trim($sales_rep) == "") ||
                    (trim($card_number) == "") || (trim($expiration_date) == "") || (trim($security_code) == "")
                ) {
                    drupal_set_message("You need to input all fields.", "error");
                    break;
                }

                if (!valid_email_address($contactemail)) {
                    drupal_set_message('Contact email address is invalid. Please retry to input email address.', 'error');
                    break;
                }

                // get associate name
                $dist = user_load($_POST['distributor']); // clone of distributor page
                $distributor_name = $dist->profile_firstname . ' ' . $dist->profile_lastname;

                // calculate the owner
                $owner = $_POST['distributor'];

                // check to see if the id is in range
                /*				$query = "SELECT * FROM member_id_ranges WHERE distributor=".$GLOBALS['user']->uid." AND start<=".$member_id." AND end >= ".$member_id;
				$result = db_query($query);
				$row_count = $result->rowCount();*/

//				if ($row_count > 0)
//				{
                // check first existing member id
//                $query = "SELECT * FROM member_id_pool WHERE member_id=\"" . AddSlashes($member_id) . "\" AND used=1;";
                $result = db_query('SELECT * FROM {member_id_pool} WHERE member_id=:a AND used=1',array(':a'=>$member_id));
                $found_used = $result->rowCount();

               // $query = "SELECT * FROM member_id_pool WHERE member_id=\"" . AddSlashes($member_id) . "\" AND used=0;";
                $result = db_query('SELECT * FROM {member_id_pool} WHERE member_id=:a AND used=0',array(':a'=>$member_id));
                $found_unused = $result->rowCount();

                // Progress to Next Step ( input -> create )
                if ($create_step == 'input') {
                    $create_step = 'create';
                    break;
                } else if ($create_step == 'create') {
                    $create_step = 'input';
                } else {
                    //error
                    break;
                }

                // allow add
                /*if (isset($_POST['overwrite_existing']))
				{
					if (($found_unused > 0) && ($found_used == 0))
					{
						$allow_add = true;
						$ignore_distributor_charge = true;	// do not charge distributor for member id again
					}
					else
					{	$allow_add = false;
					}
				}
				else
				{
					$allow_add = false;
				}*/
                $allow_add = false;
                if ($found_used == 0 && $found_unused == 0) {
                    $allow_add = true;
                }

                if ($allow_add == true) {
                    //* Add for payment options *//
                    // get member type - 0: Gold Member, 1: Silver Member, 2: Gold Lite Member, 3: Coach on Call Member, 4: Gold Coach Member, 5: CSI Member
                    $member_type = 0;
                    if (isset($_POST['member_type'])) {
                        $member_type = $_POST['member_type'];
                    }
                    // get singup fee type
                    $product_nid = 34;
                    if (isset($_POST['retail_kit'])) {
                        $product_nid = $_POST['retail_kit'];
                    }
                    $signup_fee_type = get_signup_fee_type($product_nid);

                    // check credit card
                    $add_cim_profile = false;
                    $error = false; // ***

                    if (($card_number != '') && ($card_number != '5424000000000015')) {
                        // attempt to add the customer profile to auth.net for this member
                        $date = explode("/", $expiration_date);

                        if (sizeof($date) == 2) {
                            $date = "20" . $date[1] . "-" . $date[0];
                        } else {
                            $date = '';
                        }

                        // add the user to cim
                        $content =
                            "<?xml version=\"1.0\" encoding=\"utf-8\"?>" .
                            "<createCustomerProfileRequest xmlns=\"AnetApi/xml/v1/schema/AnetApiSchema.xsd\">" .
                            MerchantAuthenticationBlock() .
                            "<profile>" .
                            "<merchantCustomerId>" . $member_id . date("U") . "</merchantCustomerId>" . // Your own identifier for the customer.
                            "<description>" . $first_name . " " . $last_name . "</description>" .
                            "<email>" . $contactemail . "</email>" .
                            "</profile>" .
                            "</createCustomerProfileRequest>"; // <?php

                        $response = send_xml_request($content);
                        $parsedresponse = parse_api_response($response);

                        if ($parsedresponse->messages->resultCode == 'Error') {
                            drupal_set_message(t('Could not create user profile'), 'error');
                            $error = true;
                        } else {

                            set_time_limit(59);

                            $customerProfileId = $parsedresponse->customerProfileId;


                            // add a payment profile to cim
                            $content =
                                "<?xml version=\"1.0\" encoding=\"utf-8\"?>" .
                                "<createCustomerPaymentProfileRequest xmlns=\"AnetApi/xml/v1/schema/AnetApiSchema.xsd\">" .
                                MerchantAuthenticationBlock() .
                                "<customerProfileId>" . $customerProfileId . "</customerProfileId>" .
                                "<paymentProfile>" .
                                "<billTo>" .
                                "<firstName>" . $first_name . "</firstName>" .
                                "<lastName>" . $last_name . "</lastName>" .
//								 "<country>".$country."</country>".
                                "<address>" . $address . "</address>" .
                                "<city>" . $city . "</city>" .
                                "<state>" . $state . "</state>" .
                                "<zip>" . $zip . "</zip>" .
                                "<phoneNumber>000-000-0000</phoneNumber>" .
                                "</billTo>" .
                                "<payment>" .
                                "<creditCard>" .
                                "<cardNumber>" . $card_number . "</cardNumber>" .
                                "<expirationDate>" . $date . "</expirationDate>" . // required format for API is YYYY-MM
                                "<cardCode>" . $security_code . "</cardCode>" .
                                "</creditCard>" .
                                "</payment>" .
                                "</paymentProfile>" .
                                "<validationMode>liveMode</validationMode>" . // or liveMode
                                "</createCustomerPaymentProfileRequest>"; // <?php

                            $response = send_xml_request($content);
                            $parsedresponse = parse_api_response($response);
                            $customerPaymentProfileId = $parsedresponse->customerPaymentProfileId;


                            // check for cc/details errors
                            if ($parsedresponse->messages->resultCode == 'Error') {
                                $msg = preg_replace("/[^a-zA-Z0-9\s\'\.]/", "", $parsedresponse->messages->message->text);
                                $msg = 'Invalid credit/debit card details';

                                drupal_set_message($msg, 'error');
                                $error = true;
                                //$form_state['redirect'] = 'apply.html?id='.$_GET['id'];
                            } else {
                                $add_cim_profile = true;
                                // charge a new user?
                                if (!isset($ignore_distributor_charge)) // ignore this
                                {
                                    //ncn_debug_message("Charging distributor signup fee.");
                                    $res = charge_retail_kit($customerProfileId, $customerPaymentProfileId, $product_nid, $member_id, $owner);


                                    // charging distributor failed.
                                    if ($res == false) {
                                        $error = true;
                                        $add_cim_profile = false;
                                    }
                                } // do not charge distributor again (they are re-adding a existing member id)
                                else {
                                    ncn_debug_message("Ignoring distributor charge for existing member id#.");
                                }

                                ncn_debug_message("User card details were good, flagging to add cim_profile.");
                            }
                        } // END adding profile failed

                    } else
                        if ($card_number == '5424000000000015') // free card number
                        {
                            drupal_set_message('Adding new FREE member...', 'status');

                            $customerProfileId = "FREE";
                            $customerPaymentProfileId = "FREE";
                            $add_cim_profile = true;
                            $ignore_distributor_charge = true;
                        }


                    // do we add new cim profile?
                    if ($add_cim_profile == true) {
                     //   $query = "DELETE FROM member_cim WHERE member_id=\"" . AddSlashes($member_id) . "\";";
                        $result = db_query('DELETE FROM {member_cim} WHERE member_id=:a',array(':a'=>$member_id));

                       // $query = "INSERT INTO member_cim VALUES(NULL, \"" . AddSlashes($member_id) . "\", \"" . AddSlashes($customerProfileId) . "\", \"" . AddSlashes($customerPaymentProfileId) . "\");";
                        $result = db_query('INSERT INTO {member_cim} VALUES(NULL,:a,:b,:c)',
                            array(':a'=>$member_id,':b'=>$customerProfileId,':c'=>$customerPaymentProfileId));
                    }


                    // email the user with access details
                    if ($error == false) {
                        $params = array(
                            '!firstname' => $first_name,
                            '!lastname' => $last_name,
                            '!member_id' => $member_id,
                        );

                        drupal_mail('ncn_claims_manager', 'id_to_member', $contactemail, language_default(), $params);


                        // insert into database
//                        $query = "DELETE FROM member_id_pool WHERE `member_id`=\"" . AddSlashes($member_id) . "\";";
                        $result = db_query('DELETE FROM {member_id_pool} WHERE member_id=:a',array(':a'=>$member_id));

                     //   $query = "INSERT INTO member_id_pool VALUES(NULL, \"" . AddSlashes($member_id) . "\", 1, \"" . AddSlashes($first_name) . "\", \"" . AddSlashes($last_name) . "\", \"" . AddSlashes($legalname) . "\", \"" . AddSlashes($country) . "\", \"" . AddSlashes($address) . "\", \"" . AddSlashes($city) . "\", \"" . AddSlashes($state) . "\", \"" . AddSlashes($zip) . "\", \"" . AddSlashes($officephone) . "\", \"" . AddSlashes($contactemail) . "\", \"" . AddSlashes($distributor_name) . "\", \"" . AddSlashes($sales_rep) . "\", \"" . AddSlashes($security_code) . "\", " . $owner . ",0, 0, 0, 0, $member_type ,$signup_fee_type, " . date('U') . " )";
                      //  $result = db_query($query);
                        $result = db_query('INSERT INTO {member_id_pool} VALUES(NULL,:a,:b,:c,:d,:e,:f,:g,:h,:i,:j,:k,:l,:m,:n,:o,:p,:q,:r,:s,:t,:u,:v,:w)',
                            array(':a'=>$member_id,':b'=>1,':c'=>$first_name,':d'=>$last_name,':e'=>$legalname,':f'=>$country,':g'=>$address,
                                ':h'=>$city,':i'=>$state,':j'=>$zip,':k'=>$officephone,':l'=>$contactemail,':m'=>$distributor_name,':n'=>$sales_rep,
                                ':o'=>$security_code,':p'=>$owner,':q'=>0,':r'=>0,':s'=>0,':t'=>0,':u'=>$member_type ,':v'=>$signup_fee_type,':w'=>date('U')));

                        drupal_set_message('Added new member to the pool.', 'status');

                        //** NCN Gold Member 1st Special	// ** IGNORE **
                        if ($_POST['retail_kit'] == 57) {
                            ncn_admin_insert_member_first_free($member_id);
                        }

                        // auto-assign account manager
                        ncn_admin_update_am_auto_assign();
                        ncn_admin_auto_assign_member_to_am($member_id);

                        if (module_exists('ncn_capsulecrm')) {
                            ncn_capsulecrm_create_member($member_id);
                        }
                        unset($_POST); // clear the form
                    } // END add member

                } // duplicate member id
                else {
                    drupal_set_message('That member id# is already in the database/being used.', 'error');
                }
                /*				}
				else
				{
					drupal_set_message('That member id# has not been assigned to this account.' , 'error');
				}
*/
                break;
        }
    }


    // ---- build content ----
    ob_start();

    switch (arg(2)) {
        // ---- create a new member ----
        default:
        case "create":
            $vars['title'] = "Create Member";
            $vars['page_class'] = "create-member";
            ?>
            <fieldset class="terms-wrapper" style="<?php if ($create_step == 'input') {
                echo 'display: none;';
            } ?>">
                <div class="term-conditions"><tt><p align="justify">
                            <?php echo nl2br(variable_get('ncn_terms_text_asso', '')); ?>
                        </p></tt></div>
                <br/>

                <div class="create-claim-agree-div">
                    <input type="submit" id="create_member_btn" class="create-claim-agree-btn"
                           onclick="dist_create_member_submit('create_member_btn')" value="I Agree"/>
                    <span>&nbsp; or &nbsp;<a href="<?= $GLOBALS['base_url']; ?>/account">cancel</a></span>
                </div>
            </fieldset>
            <fieldset style="<?php if ($create_step == 'create') {
                echo 'display: none;';
            } ?>">

                <p class="description">Input fields for a new member and click "submit" to add to the pool.</p>

                <form method="POST" id="create_member_submit_form">
                    <input type="hidden" name="tfunction" value="paste_ids"/>
                    <input type="hidden" name="create_step" value="<?php echo $create_step; ?>"/> <!-- STEP -->

                    <table style="width:100%;border:0;">
                        <tr>
                            <td class="td-label">Member ID#:</td>
                            <td><input type="text" name="member_id" value="<?= generate_member_id(); ?>" readonly></td>
                        </tr>
                        <tr>
                            <td class="td-label">First Name:</td>
                            <td><input type="text" name="first_name" value="<?= $_POST['first_name']; ?>"></td>
                        </tr>
                        <tr>
                            <td class="td-label">Last Name:</td>
                            <td><input type="text" name="last_name" value="<?= $_POST['last_name']; ?>"></td>
                        </tr>
                        <tr>
                            <td class="td-label">Company's Legal Name:</td>
                            <td><input type="text" name="legalname" value="<?= $_POST['legalname']; ?>"></td>
                        </tr>
                        <tr>
                            <td class="td-label">Country:</td>
                            <td><?php draw_countryform_part('country', false, false); ?></td>
                        </tr>
                        <tr>
                            <td class="td-label">Address:</td>
                            <td><input type="text" name="address" value="<?= $_POST['address']; ?>"></td>
                        </tr>
                        <tr>
                            <td class="td-label">City:</td>
                            <td><input type="text" name="city" value="<?= $_POST['city']; ?>"></td>
                        </tr>
                        <tr>
                            <td class="td-label">State:</td>
                            <td><?php draw_stateform_part('state', false, false); ?></td>
                        </tr>
                        <tr>
                            <td class="td-label">Zip:</td>
                            <td><input type="text" name="zip" value="<?= $_POST['zip']; ?>"></td>
                        </tr>
                        <tr>
                            <td class="td-label">Office Phone:</td>
                            <td><input type="text" name="officephone" value="<?= $_POST['officephone']; ?>"></td>
                        </tr>
                        <tr>
                            <td class="td-label">Contact Email:</td>
                            <td><input type="text" name="contactemail" value="<?= $_POST['contactemail']; ?>"></td>
                        </tr>
                        <tr>
                            <td class="td-label">Sales Rep:</td>
                            <td><input type="text" name="sales_rep" value="<?= $_POST['sales_rep']; ?>"></td>
                        </tr>
                        <?php
                        if (is_associate($GLOBALS['user']) == true) {
                            associate_dropdown(); // It couldn't flow through this way.
                        } else {
                            ?>
                            <tr>
                                <td class="td-label">Associate:</td>
                                <td><?php associate_dropdown(); ?></td>
                            </tr>
                        <?php
                        }
                        ?>
                        <!-- <tr>
					<td class="td-label"></td>
					<td><input type="checkbox" name="overwrite_existing" style="width:15px;"> Overwrite existing unactivated member</td>
				</tr> -->
                        <tr>
                            <td class="td-label">Member Type:</td>
                            <td>
                                <?php
                                $member_type = 0;
                                if (isset($_POST['member_type'])) {
                                    $member_type = $_POST['member_type'];
                                }
                                ?>
                                <select id="member_type" name="member_type">
                                    <option value="0" <?php if ($member_type == 0) {
                                        echo "selected";
                                    } ?> >NCN Gold Member
                                    </option>
                                    <option value="1" <?php if ($member_type == 1) {
                                        echo "selected";
                                    } ?> >NCN Silver Member
                                    </option>
                                    <option value="2" <?php if ($member_type == 2) {
                                        echo "selected";
                                    } ?> >NCN Gold Lite Member
                                    </option>
                                    <option value="3" <?php if ($member_type == 3) {
                                        echo "selected";
                                    } ?> >NCN Coach on Call Member
                                    </option>
                                    <option value="4" <?php if ($member_type == 4) {
                                        echo "selected";
                                    } ?> >NCN Gold Coach Member
                                    </option>
									<option value="5" <?php if ($member_type == 5) {
                                        echo "selected";
                                    } ?> >CSI Member
                                    </option>
                                </select>
                            </td>
                        </tr>
                        <tr>
                            <td class="td-label">SignUp Fee Type:</td>
                            <td>
                                <?php
                                $product_nid = 34;
                                if (isset($_POST['retail_kit'])) {
                                    $product_nid = $_POST['retail_kit'];
                                }
                                echo ncn_admin_draw_signup_fee_select('retail_kit', $product_nid, 'associate');
                                ?>
                            </td>
                        </tr>
                    </table>

                    <p>&nbsp;</p>
                    <!-- <p class="description">Credit/Debit Card Details (optional)</p> -->
                    <table style="width:100%; border:0;">
                        <tr>
                            <td class="td-label">Card Number:</td>
                            <td><input type="text" name="card_number" value="<?= $_POST['card_number']; ?>"></td>
                        <tr>
                        <tr>
                            <td class="td-label">Expiration Date (mm/yy):</td>
                            <td><input type="text" name="expiration_date" value="<?= $_POST['expiration_date']; ?>">
                            </td>
                        <tr>
                        <tr>
                            <td class="td-label">Security Code:</td>
                            <td><input type="text" name="security_code" value="<?= $_POST['security_code']; ?>"></td>
                        <tr>
                        <tr>
                            <td class="td-label"></td>
                            <td><input type="submit" id="create_member_btn" class="create-member-submit-btn"
                                       onclick="dist_create_member_submit('create_member_btn')" value="submit"/></td>
                        <tr>

                    </table>


                </form>
            </fieldset>

            <?php

            break;

        // ---- view member list ----
        case "view_member_list":
            drupal_add_css(drupal_get_path('module', 'ncn_message') . '/ncn_message.css', 'module', 'all', FALSE);
            drupal_add_js(drupal_get_path('module', 'ncn_message') . '/ncn_message.js');
            $page_records = 8;
            $vars['title'] = "View Member List";
            $vars['page_class'] = "view-member-list";
            ?>
            <div class="clear-block">
                <div class="ncn-pager-ranger" style="font-weight: bold; margin-bottom:5px;"></div>
            </div>
            <div class="table-header">
                <table>
                    <tr class="header">
                        <td class="td-member-id"><strong>Member ID</strong></td>
                        <td class="td-first-name"><strong>First Name</strong></td>
                        <td class="td-last-name"><strong>Last Name</strong></td>
                        <td class="td-company-name"><strong>Company Name</strong></td>
                        <td class="td-address"><strong>Address</strong></td>
                        <td class="td-city"><strong>City</strong></td>
                        <td class="td-state"><strong>State</strong></td>
                        <td class="td-zip"><strong>Zip</strong></td>
                        <td class="td-phone"><strong>Phone</strong></td>
                        <td class="td-contact"><strong>Contact Member</strong></td>
                    </tr>
                </table>
            </div>
            <div class="table-body">
                <?php
              //  $query = "SELECT * FROM member_id_pool member_id_pool WHERE owner=" . $GLOBALS['user']->uid . " AND used=1;";
                $result = db_query('SELECT * FROM {member_id_pool} WHERE owner=:a AND used=1',array(':a'=>$GLOBALS['user']->uid));
                $row_count = $result->rowCount();
                $page_num = 0;

                $result_1 = db_query('SELECT * FROM {profile_field} WHERE name=:a',array(':a'=>'profile_memberid'));
                $memberid_field =  $result_1->fetchAssoc();

                $member_count = 0;
                for ($i = 0; $i < $row_count; $i++) {
                    $row = $result->fetchAssoc();

                    $result_1 = db_query('SELECT * FROM {profile_value} WHERE fid=:a AND value=:b',
                        array(':a'=>$memberid_field['fid'],':b'=>$row['member_id']))->fetchField();
                    if ($result_1 == 0) {
                        continue;
                    }

                    ?>
                    <?php if ($member_count % $page_records == 0) {
                        $page_num++; ?>
                        <table class="ncn-pager ncn-pager-page-<?php echo $page_num; ?>">
                    <?php } ?>
                    <tr>
                        <td class="td-member-id"><?= $row['member_id']; ?></td>
                        <td class="td-first-name"><?= $row['first_name']; ?></td>
                        <td class="td-last-name"><?= $row['last_name']; ?></td>
                        <td class="td-company-name"><?= $row['legalname']; ?></td>
                        <td class="td-address"><?= $row['address']; ?></td>
                        <td class="td-city"><?= $row['city']; ?></td>
                        <td class="td-state"><?= $row['state']; ?></td>
                        <td class="td-zip"><?= $row['zip']; ?></td>
                        <td class="td-phone"><?= $row['officephone']; ?></td>
                        <td class="td-contact"><a
                                href="mailto:<?= $row['contactemail']; ?>"><?= $row['contactemail']; ?></a></td>
                    </tr>
                    <?php if ($member_count % $page_records == ($page_records - 1)): ?>
                        </table>
                    <?php endif; ?>
                    <?php
                    $member_count += 1;
                }
                if ($member_count == 0) {
                    ?>
                    <table class="">
                        <tr>
                            <td colspan="10">No Members</td>
                        </tr>
                    </table>
                <?php
                } else if (($member_count % $page_records) != 0) {
                    for ($i = $member_count; $i < (ceil($member_count / $page_records) * $page_records); $i++) {
                        ?>
                        <tr>
                            <td colspan="10">&nbsp;</td>
                        </tr>
                    <?php
                    }
                    echo "</table>";
                }
                ?>

            </div>
            <div class="ncn-pager-control clearfix">    <!-- pager_control -->
                <div style="float: right">
                    <a class="first" href="#" onclick="pm_page_action('first');">first</a>
                    <a class="prev" href="#" onclick="pm_page_action('prev');">prev</a>
                    <a class="next" href="#" onclick="pm_page_action('next');">next</a>
                    <a class="last" href="#" onclick="pm_page_action('last');">last</a>
                </div>
            </div>
            <script type="text/javascript">
                var total_records = <?php echo $member_count ?>;
                var page_records = <?php echo $page_records; ?>;
                var page_number = 1;	//global;
                var page_count = <?php echo $page_num; ?>;
                jQuery(document).ready(function () {
                    pm_select_page(page_number);
                    if (total_records <= page_records) {
                        jQuery('.ncn-pager-ranger').css('display', 'none');
                        jQuery('.ncn-pager-control').css('display', 'none');
                    }
                });
            </script>
            <?php
            break;
        case "sales_report":
            $vars['title'] = "Sales Report";
            $vars['page_class'] = "sales-report";
            render_sales_report_page_asso($user->uid, $vars);
            break;
        //e dit users account
        case "my-account":
            $vars['title'] = "Edit My Profile";
            $vars['page_class'] = "my-account";
            user_edit_new(false, $user->uid); // function from ncn_admin.module
            /*print ncn_edit_my_account();*/
            break;

    }

    $vars['content'] = ob_get_contents();
    ob_end_clean();
}

//------------------------------------------------------------------------------
function ncn_claims_manager_mail($key, &$message, $params)
{
    $language = $message['language'];
    $options = array('langcode' => $message['language']->language);
   // $variables = user_mail_tokens($params['account'], $language);

    switch ($key) {
        case "id_to_member":
            $message['subject'] = t(variable_get('ncn_id_to_member_subject', ''), $params, $options);
            $message['body'][] = ncn_admin_get_mail_body(t(variable_get('ncn_id_to_member_body', ''), $params, $options), $message, $params);
            $bcc = "newmembers@netclaimsnow.com";
            $message['headers']['Bcc'] = $bcc;
            break;

        case "create_my_invoice":
            $message['subject'] = t(variable_get('ncn_create_my_invoice_subject', ''), $params, $options);
            $message['body'][] = t(variable_get('ncn_create_my_invoice_body', ''), $params, $options);
            break;
    }
}


//------------------------------------------------------------------------------
function ncn_claims_manager_theme()
{
    return array(
        'ncn_confirm_submit_claim' => array(
            'arguments' => array('stat' => NULL),
            'template' => 'ncn_confirm_submit_claim',
        ),
        'ncn_dist_page' => array(
            'arguments' => array('stat' => NULL),
            'template' => 'ncn_dist_page',
        ),
        'ncn_asso_page' => array(
            'arguments' => array('stat' => NULL),
            'template' => 'ncn_asso_page',
        ),
    );


}

//------------------------------------------------------------------------------
function ncn_claims_manager_save_file_note()
{
    GLOBAL $user;

    $claim_id = arg(2);
    $file_note = $_REQUEST['note'];

    if ($user->uid == 1) {
        $user_id_sql = "";
    } else {
        $user_id_sql = " AND user_id=" . $user->uid . " ";
    }

    if (!is_numeric($claim_id)) {
        exit;
    }

    ncn_admin_add_claim_note($claim_id, $file_note);

    // set success message
    $log_message = "Notes on file updated by " . ncn_amin_get_user_role_and_name();
    ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);
}

//------------------------------------------------------------------------------
function ncn_claims_manager_send_to_archive($claim_id=0,$uid=0,$ret=false)
{
    // check numeric claim_id
    if (!is_numeric($claim_id)) {
        if($ret){
            return "error";
        }
        exit;
    }

    if($claim_id==0){
        $claim_id = arg(2);
    }

    if($uid!=0){
        $user = user_load($uid);
    } else {
        GLOBAL $user;
    }

    if ($user->uid == 1) {
        $user_id_sql = "";
    } else {
        $user_id_sql = " AND user_id=" . $user->uid . " ";
    }

    // update the claim status
    $query = "UPDATE `claims` SET claim_status='archived' WHERE claim_id=" . $claim_id . " AND claim_status='receivables' " . $user_id_sql;
    $result = db_query($query);

    // set the "payment received" tot he "claim amount"
    $query = "UPDATE `claims` SET payment_received=claim_amount WHERE claim_id=" . $claim_id . " " . $user_id_sql;
    $result = db_query($query);

    // send some data base
    if($ret){
        return "success";
    } else {
        print "success";
    }
}

//------------------------------------------------------------------------------
function ncn_claims_manager_set_partial_payment($claim_id=0,$amount=0,$uid=0,$ret=false)
{
	// check numeric amount & claim_id
    if (!is_numeric($amount) || !is_numeric($claim_id)) {
        if($ret){
            return "error";
        }
        exit;
    }

    if($claim_id==0){
        $claim_id = arg(2);
    }
    if($amount==0){
        $amount = trim(arg(3));
    }
    if($uid!=0){
        $user = user_load($uid);
    } else {
        GLOBAL $user;
    }

    if ($user->uid == 1) {
        $user_id_sql = "";
    } else {
        $user_id_sql = " AND user_id=" . $user->uid . " ";
    }

    // set the "payment received" amount
    //$query = "UPDATE `claims` SET payment_received=" . $amount . " WHERE claim_id = " . $claim_id . " " . $user_id_sql;
	$query = "UPDATE `claims` SET payment_received = ( payment_received + ".$amount." ) WHERE claim_id = " . $claim_id . " " . $user_id_sql;
    $result = db_query($query);

    // check claim amount is not 100%
    $query = "SELECT * FROM claims WHERE deleted=0 AND claim_id=" . $claim_id;
    $result = db_query($query);
    $row_count = $result->rowCount();
    $row = $result->fetchAssoc();

    if ($amount >= $row['claim_amount']) // 100%+, so make it archived
    {
        // update the claim status
        $query = "UPDATE `claims` SET claim_status='archived' WHERE claim_id=" . $claim_id . " AND claim_status='receivables' " . $user_id_sql;
        $result = db_query($query);

        if($ret){
            return "100%";
        } else {
            echo "100%";
        }
        exit;
    }

    // send some data base
    if($ret){
        return "success";
    } else {
        print "success";
    }
}

//------------------------------------------------------------------------------
function ncn_claims_manager_submit_claim_confirm()
{
    GLOBAL $user, $custom_theme;

    // add the css file (always required for this)
//    drupal_add_css(drupal_get_path('module', 'ncn_claims_manager') . '/ncn_claims_manager.css', 'module', 'all', FALSE);
    drupal_add_css(drupal_get_path('module', 'ncn_claims_manager') . '/ncn_claims_manager.css', array('group' => CSS_DEFAULT, 'type' => 'file'));
    //drupal_add_js(drupal_get_path('module', 'ncn_claims_manager') . '/ncn_claims_manager.js');

    $custom_theme = "ncn_account";
    $GLOBALS['in_edit'] = true;
    $GLOBALS['claim_id'] = arg(2);

    return theme('ncn_confirm_submit_claim', array('stat'=>1));
}

//------------------------------------------------------------------------------
// preprocess function for "ncn_add_room.tpl.php"
function template_preprocess_ncn_confirm_submit_claim(&$vars)
{
}

//------------------------------------------------------------------------------
function ncn_claims_manager_approve_invoice($claim_id=0,$uid=0,$ret=false)
{
    GLOBAL $base_url;

    if($uid!=0){
        $user = user_load($uid);
    } else {
        GLOBAL $user;
    }

    // get the user id for this claim
    if($claim_id==0){
        $claim_id = arg(2);
    }
    //echo $claim_id;exit;
    //echo '<pre>';print_r(ncn_amin_get_user_role_and_name());exit;
    

    if (!is_numeric($revision)) {
        $revision_sql = "";
    } else {
        $revision_sql = " AND claims_invoices.revision=" . $revision . " ";
    }
    $user_query = "SELECT users.mail FROM users as users inner join users_roles as users_roles  on users.uid = users_roles.uid and users_roles.rid=9";
    $user_result = db_query($user_query);
    foreach($user_result as $object)
    {
        $object = (array)$object;
        $to=$object['mail'];
        send_approve_invoice_mail($to,$claim_id);
    }
    $updated_user = $GLOBALS['user']->name;
    $log_message = "Status updated by " . ncn_amin_get_user_role_and_name() . " to 'approved'.Claim#'.$claim_id.' has been moved from 'Out for Review' to 'Receivables'";								
    ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);
//exit;
    watchdog('claim', 'approve invoice notification(claim moved from "Out for Review" to "Receivables") for %name.', array('%name' => $user->name));
    
    // get live/preview
    $query = "SELECT claim_status FROM claims WHERE claim_id=" . $claim_id . $user_id_sql;
    $result = db_query($query);
    $row_count = $result->rowCount();

    if ($row_count > 0) {
        $row = $result->fetchAssoc();

     //   $query = "UPDATE claims SET claim_status='receivables' WHERE claim_id=" . $claim_id;
        $result = db_query('UPDATE {claims} SET claim_status=:a WHERE claim_id=:b',array(':a'=>'receivables',':b'=>$claim_id));
        $msg = t('Your Claim has been moved to "Receivables".');
        if($ret){
            return "success__".$msg;
        } else {
            drupal_set_message($msg,'status');
        }
    } else {
        if($ret){
            return "error__No Claim Found.";
        }
    }
    if(!$ret){
        Header("Location:".$base_url."/account/receivables.html");
    }
    exit;

}
function send_approve_invoice_mail($to,$claim_id) {					
	$subject = 'Member Action Notification';
	$msg = 'Claim#'.$claim_id.' has been moved from "Out for Review" to "Receivables"';
	
	//$to = 'webdesigns@imageproz.com';
	//$to = 'kalpesh.thakkar@imobdevtech.com';
    //$to = 'nikhil.parmar@keyideasglobal.com';
    drupal_mail('ncn_report', 'approve_invoice_notification', $to, language_default(), array('subject'=>$subject, 'body'=>$msg));
}
function ncn_claims_manager_purchase_invoice()
{
    GLOBAL $user;
    $user = user_load($user->uid);

    $claim_id = arg(2);
    $member_id = $user->profile_memberid;

    $product_id = ncn_admin_get_member_first_free_claim_product_id($claim_id);
    if ($product_id != 0) {
        if (!ncn_do_payment($member_id, $product_id)) {
            drupal_set_message(t('Failed to purchase invoice. (claim_id: !claim_id)', array('!claim_id' => $claim_id)), 'error');
            drupal_goto('account/out-for-review.html');
            exit;
        } else {
            $arr_products[$product_id] = node_load($product_id);
            $pid = db_query('SELECT pid FROM {payment_log} WHERE member_id=:a AND product_id=:b',
                array(':a'=>$user->profile_memberid,':b'=>$product_id))->fetchField();

            if ($pid) {
                $this_user = $user;
                $mail_params = array(
                    'merchant' => 'Net Claims Now',
                    'invoice_number' => $pid,
                    'claim_id' => $claim_id,
                    'customer_id' => $this_user->profile_memberid,
                    'timestamp' => date('d-M-Y h:i:s A T', time()),

                    'member_name' => $this_user->profile_firstname . ' ' . $this_user->profile_lastname,
                    'member_address' => $this_user->profile_address,
                    'member_city' => $this_user->profile_city,
                    'member_state' => $this_user->profile_state,
                    'member_zip' => $this_user->profile_zip,
                    'member_email' => $this_user->mail,
                    'member_phone' => _get_format_phone_string($this_user->profile_officephone),

                    'products' => $arr_products,
                );
            }
            if (isset($mail_params)) {
                drupal_mail('ncn_admin', 'order_claim', $mail_params['member_email'], language_default(), $mail_params);
                //drupal_mail('ncn_admin', 'order_claim', 'elight.haha@gmail.com', language_default(), $mail_params);
            }
        }
    }

    // Unlocked
    $result = db_query("UPDATE {member_first_free} SET first_invoice_locked=0
						 WHERE first_claim_free=%d AND status=1", $claim_id);
    if (!$result) {
        drupal_set_message(t('Failed to unlock invoice. (claim_id: !claim_id)', array('!claim_id' => $claim_id)), 'error');
    } else if ($product_id != 0) {
        drupal_set_message(t('Unlocked Invoice. (claim: #!claim_id)', array('!claim_id' => $claim_id)));
    }
    ncn_claims_manager_approve_invoice();
}

//------------------------------------------------------------------------------
function ncn_claims_manager_reject_invoice()
{
    GLOBAL $user;

    // get the user id for this claim
    $claim_id = arg(2);


    if (!is_numeric($revision)) {
        $revision_sql = "";
    } else {
        $revision_sql = " AND claims_invoices.revision=" . $revision . " ";
    }

    // get live/preview
    $query = "SELECT claim_status FROM claims WHERE claim_id=" . $claim_id . $user_id_sql;
    $result = db_query($query);
    $row_count = $result->rowCount();

    if ($row_count > 0) {
        $_SESSION['reject_claim_invoice'] = array(
            'claim_id' => $claim_id,
        );
        /*		// update the claim
		$row = mysql_fetch_assoc($result);

		$query = "UPDATE claims SET claim_status='returned' WHERE claim_id=".$claim_id;
		$result = db_query($query);

		// log Timestamp to reject invoice.
		set_ncn_data_extra($claim_id, 'rejected_invoice_timestamp', date('U'));

		// claim workflow
		$workflow = 'rejected_invoices';
		$action = 'reset';
		if (!update_timer_trigger($claim_id, $workflow, $action)) {

		}
*/
        // get the last message admin sent
        /*$query2 = "SELECT * FROM pm_message WHERE claim_id=".$claim_id." AND in_reply_to=0 ORDER BY id DESC LIMIT 0,1";
		$result2 = db_query($query2);
		$row_count2 = $result2->rowCount();

		if ($row_count2 == 0)	// error - no message available
		{
			Header("Location:/account/out-for-review.html");
		}
		else	// message avilable to reply to
		{
			$row2 = mysql_fetch_assoc($result2);
		*/
        $desc = base64_encode("Change Order(Claim#" . $claim_id . ") Invoice");
        $claim_log = 'log';
        Header("Location:/account/message-center/send/c" . $claim_id . "/$desc/$claim_log");
        /*}*/

    }

    exit;
}

function ncn_claims_manager_reject_claim_invoice_action($claim_id)
{
   // $query = "SELECT claim_status FROM claims WHERE claim_id=" . $claim_id;
    $result = db_query('SELECT claim_status FROM {claims} WHERE claim_id=:a',array(':a'=>$claim_id));
    $row_count = $result->rowCount();

    if ($row_count > 0) {
        // update the claim
        $row = $result->fetchAssoc();
        if ($row['claim_status'] == 'out for review' || $row['claim_status'] == 'approved') {
           // $query = "UPDATE claims SET claim_status='returned' WHERE claim_id=" . $claim_id;
            $result = db_query('UPDATE {claims} SET claim_status=:a WHERE claim_id=:b',array(':a'=>'returned',':b'=>$claim_id));

            // log Timestamp to reject invoice.
            set_ncn_data_extra($claim_id, 'rejected_invoice_timestamp', date('U'));

            // claim workflow
            $workflow = 'rejected_invoices';
            $action = 'reset';
            if (!update_timer_trigger($claim_id, $workflow, $action)) {

            }
        }
    }
}


//------------------------------------------------------------------------------
function ncn_claims_manager_submit_claim_outforreview($claim_id=0,$uid=0,$ret=false)
{
    global $base_url;
    // get the user id for this claim
    if($claim_id==0){
        $claim_id = arg(2);
    }
    if($uid!=0){
        $user = user_load($uid);
    } else {
        GLOBAL $user;
    }

    $user = user_load($user->uid);
    $user_id = $user->uid;
    $actvt_user_id = $user_id;
    if (is_subuser($user)) {
        $parent_mid = ncn_subuser_get_memberid_from_subuid($user_id);
        $user_id = get_uid_from_memberid($parent_mid);
    }

    if ($user_id == 1) {
        $user_id_sql = "";
    } else {
        $user_id_sql = " AND user_id=" . $user_id . " ";
    }

    if (isset($user->roles[23])) {
        $user_id_sql = " AND leaduser=" . $user_id . " ";
    }

    // get the revision
    $revision = arg(3);
    if (!is_numeric($revision)) {
        $revision_sql = "";
    } else {
        $revision_sql = " AND claims_invoices.revision=" . $revision . " ";
    }

    // get live/preview
    $query = "SELECT claim_status FROM claims WHERE claim_id=" . $claim_id . $user_id_sql;
    $result = db_query($query);
    $row_count = $result->rowCount();

    if ($row_count > 0) {
        $row = $result->fetchAssoc();

        // ---- inform the admin and account manager about this claim ----
        $user_details = user_load($user_id);

        // get account manager + admin email
        //$query = "SELECT * FROM `member_id_pool` WHERE member_id=\"" . AddSlashes($user_details->profile_memberid) . "\";";
        $result = db_query('SELECT * FROM {member_id_pool} WHERE member_id=:a',array(':a'=>$user_details->profile_memberid));
        $row_count = $result->rowCount();
        $row = $result->fetchAssoc(); // we are grabbing distributor id from emebr id

//        $query = "SELECT * FROM  `users_parent` WHERE uid=" . $row['owner']; // get account manager from distributor
        $result = db_query('SELECT * FROM  {users_parent} WHERE uid=:a',array(':a'=>$row['owner']));
        $row_count = $result->rowCount();
        $row = $result->fetchAssoc(); // we are grabbing account manager id from distributor id (account managers "own" distributors)

        $am = user_load($row['am_uid']);
        $account_manager = user_load($row['parent']); // load the account manager profile
        $account_manager_email = $account_manager->mail; // grab the account manager email from their profile

        $admin_email = variable_get('site_mail', ini_get('sendmail_from')); // just take it from database for admin

        // send the email
        $params = array(
            '!claim_id' => $claim_id,
            '!firstname' => $user_details->profile_firstname,
            '!lastname' => $user_details->profile_lastname,
            '!legalname' => $user_details->profile_legalname,
        );


        drupal_mail('ncn_claims_manager', 'create_my_invoice', $admin_email, language_default(), $params);
        //drupal_mail('ncn_claims_manager', 'create_my_invoice', $account_manager_email, language_default(), $params);
        if (!empty($am->mail)) {
            drupal_mail('ncn_claims_manager', 'create_my_invoice', $am->mail, language_default(), $params);
        }

        if ($user_id != $user->uid) { // is_subuser($user)
            $parent_user = user_load($user_id);
            if (!empty($parent_user->mail)) {
                drupal_mail('ncn_claims_manager', 'create_my_invoice', $parent_user->mail, language_default(), $params);
            }
        }

        // update the claim status

      //  $query = "UPDATE claims SET claim_status='out for review' WHERE claim_id=" . $claim_id;
        $result = db_query('UPDATE {claims} SET claim_status=:a WHERE claim_id=:b',array(':a'=>'out for review',':b'=>$claim_id));

        // start timer
        update_timer_trigger($claim_id, 'all_doc_recieved', 'start', true);
        drupal_get_messages('error');

        // show success to the user
        $msg = t('Your Claim has been moved to "Out for Review" and has been submitted to admin for approval.');
        $log_message = t('!user_name moved claim to "Out for Review".', array('!user_name'=>ncn_amin_get_user_role_and_name($actvt_user_id)));
        ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);
        if($ret){
            return "success__".$msg;
        } else {
            drupal_set_message($msg);
        }
    } else // check invoice exists and user has permissions
    {
        $msg = t("Access denied to invoice file, or file not found.");
        if($ret){
            return "error__".$msg;
        } else {
            drupal_set_message($msg, 'error');
            return ("");
        }
    }
    if(!$ret){
        Header("Location:{$base_url}/account/my-active-claims.html");
        exit;
    }

}

//------------------------------------------------------------------------------
function ncn_claims_manager_serve_invoice_file()
{
    GLOBAL $user;

    $user = user_load($user->uid);
    // get the user id for this claim
    $claim_id = arg(2);

    /*
	if (($user->uid == 1) || ($user->uid == 6) )
	{	$user_id_sql = "";	}
	else
	{	$user_id_sql = " AND user_id=".$user->uid." ";	}
	*/

    $user_id_sql = "";

    // get the "live"
    $live = arg(3);

    // get the revision
    $revision = arg(4);
    $invoice_id = arg(5);


    if (!is_numeric($revision)) {
        $revision_sql = "";
    } else {
        $revision_sql = " AND claims_invoices.revision=" . $revision . " ";
    }

    if($live==11){
        $revision_sql .= " AND claims_invoices.invoice_id=" . $invoice_id . " ";
    }

    // get live/preview
    $query = "SELECT claim_status FROM claims WHERE claim_id=" . $claim_id . $user_id_sql;

    $result = db_query($query);
    $row_count = $result->rowCount();
    $row = $result->fetchAssoc();

    /*
	if (($row['claim_status'] == 'receivables') || ($row['claim_status'] == 'paid in full')  || ($row['claim_status'] == 'approved') || ($user->uid == 1) || ($user->uid == 6) )
	{	$live = $live;	}
	else
	{	exit;	}
	*/

    // setup data
    $query = "SELECT * FROM claims_invoices,claims WHERE claims_invoices.claim_id=claims.claim_id AND claims.claim_id=" . $claim_id . " AND claims_invoices.`live`=" . $live . " " . $user_id_sql . " " . $revision_sql . " ORDER BY claims_invoices.revision DESC LIMIT 0,1";
    $result = db_query($query);
    $row_count = $result->rowCount();

    // check invoice exists and user has permissions
    if ($row_count == 0) {
        return ("Access denied to invoice file, or file not found.");
    }

    // get data
    $row = $result->fetchAssoc();

    //if (isset($user->profile_memberid) && is_member($user->profile_memberid)) {
    if (ncn_admin_get_claim_first_free_locked($claim_id) == 'LOCKED') {
        if (is_file(ncn_admin_get_locked_invoice_filename($row['filepath']))) {
            $row['filename'] = ncn_admin_get_locked_invoice_filename($row['filename']);
            $row['filepath'] = ncn_admin_get_locked_invoice_filename($row['filepath']);
        }
    }
    //}

    // serve file
    header('Content-Type: ' . $row['filemime']);
    header('Content-Disposition: attachment;filename="' . StripSlashes($row['filename']) . '"');
    header('Cache-Control: max-age=0');

    readfile($row['filepath']);

    exit;
}

//------------------------------------------------------------------------------
function ncn_claims_manager_delete_invoice_file()
{
    GLOBAL $user;

    // get the user id for this claim
    $claim_id = arg(2);

    /*
	if (($user->uid == 1) || ($user->uid == 6) )
	{	$user_id_sql = "";	}
	else
	{	$user_id_sql = " AND user_id=".$user->uid." ";	}
	*/

    $user_id_sql = "";

    // get the "live"
    $live = arg(3);
	
    // get the revision
    $revision = arg(4);
    $invoice_id = arg(5);
    // get current scroll position
    $scroll_position = $_GET['current_scroll_position'];

//    $query = "SELECT * FROM claims_invoices WHERE `claim_id`=" . $claim_id . " AND `revision`=" . $revision . " AND `live`=" . $live;
        if($live==11){
            $result = db_query('SELECT * FROM {claims_invoices} WHERE claim_id=:a AND revision=:b AND live=:c AND invoice_id = :d',
                array(':a'=>$claim_id,':b'=>$revision,':c'=>$live,':d'=>$invoice_id));
        } else {
            $result = db_query('SELECT * FROM {claims_invoices} WHERE claim_id=:a AND revision=:b AND live=:c',
                array(':a'=>$claim_id,':b'=>$revision,':c'=>$live));
        }


    if ($result->rowCount() > 0) {
        $row = $result->fetchAssoc();
        //$delImg = DRUPAL_ROOT.'/'.$row['filepath'];

        /*Create File Object from File path*/
        $uri = str_replace("sites/default/files/","public://",$row['filepath']);
        $fileObj = createFileObject($uri);

        file_delete($fileObj);
        if ($live == 1) {
            $locked_file_uri = ncn_admin_get_locked_invoice_filename($row['filepath']);
			if(file_exists($locked_file_uri)){
				$lockedfileObj = createFileObject($locked_file_uri);
				file_delete($lockedfileObj);
			}
        }
    }
    // get live/preview
 //   $query = "DELETE  FROM claims_invoices WHERE `claim_id`=" . $claim_id . " AND `revision`=" . $revision . " AND `live`=" . $live;
    if($live==11){
        $result = db_query('DELETE  FROM {claims_invoices} WHERE claim_id=:a AND revision=:b  AND live=:c AND invoice_id = :d',
                            array(':a'=>$claim_id,':b'=>$revision,':c'=>$live,':d'=>$invoice_id));
    } else {
        $result = db_query('DELETE  FROM {claims_invoices} WHERE claim_id=:a AND revision=:b  AND live=:c',
            array(':a'=>$claim_id,':b'=>$revision,':c'=>$live));
    }

    // bounce back to claim
    header("Location:" . base_path() . "admin/config/ncn_admin/viewclaim/" . $claim_id . "?current_scroll_position=" . $scroll_position);

    exit;
}

//------------------------------------------------------------------------------
function ncn_claims_manager_update_handler()
{
    $page_title = base64_decode(arg(2));
    $class_name = base64_decode(arg(3));
    $order_by = base64_decode(arg(4));
    $additional_sql = base64_decode(arg(8));
    $editable = base64_decode(arg(5));
    $send_to_admin = base64_decode(arg(6));
    $approve_deny = base64_decode(arg(7));

    $claim_id = arg(9);

    /* Add by 2011-03-26  Remove unnecessary file*/
    foreach ($_SESSION['claim'][$claim_id]['scope'] as $key => $room) {
        foreach ($room as $image_id => $image_info) {
            if ($image_info['resize_image_path']) {
                $res = file_delete($image_info['path']);
                if ($res == true) {
                    unset($_SESSION['claim'][$claim_id]['scope'][$key][$image_id]['resize_image_path']);
                }
            }
        }
    }

    if (arg(2) == 'account-home') {
        echo ncn_claim_manager_homepage_innerpage();
    } else {

        if ($editable == 1) {
            $editable = true;
        } else {
            $editable = false;
        }

        if ($send_to_admin == 1) {
            $send_to_admin = true;
        } else {
            $send_to_admin = false;
        }

        if ($approve_deny == 1) {
            $approve_deny = true;
        } else {
            $approve_deny = false;
        }


        if ($editable == 1) {
            $editable = true;
        } else {
            $editable = false;
        }

        echo ncn_claim_manager_page_internal($page_title, $class_name, $order_by, $additional_sql, $editable, false, $send_to_admin, $approve_deny);
    }
}

//------------------------------------------------------------------------------
// overview/list page(s)
function ncn_claim_manager_page($page_title, $class_name, $order_by = "created", $additional_sql = "", $editable = true, $send_to_archive = false, $send_to_admin = false, $approve_deny = false)
{
	?>
    <div id="page_loading"></div>
    <div id="page_results">
    <div class="claims-detail <?php echo $class_name; ?>">
        <?php			
	        ncn_claim_manager_page_internal($page_title, $class_name, $order_by, $additional_sql, $editable, $send_to_archive, $send_to_admin, $approve_deny);
        ?></div></div><?php
}

//------------------------------------------------------------------------------
// overview/list page(s)
function ncn_claim_manager_page_internal($page_title, $class_name, $order_by = "created", $additional_sql = "", $editable = true, $send_to_archive = false, $send_to_admin = false, $approve_deny = false)
{
    GLOBAL $user;
    GLOBAL $base_url;

    $colcount = 10;
    if ($class_name == 'my-active-claims-detail') {
        $colcount = 9;
    } else if ($class_name == 'out-for-review-detail') {
        $colcount = 10;
    } elseif ($class_name == 'archived-claims-detail') {
        $colcount = 10;
    } elseif ($class_name == 'recievables-detail') {
        $colcount = 11;
    }


    if ($editable == true) {
        $_editable = 1;
    } else {
        $_editable = 0;
    }

    if ($send_to_admin == true) {
        $_send_to_admin = 1;
    } else {
        $_send_to_admin = 0;
    }

    if ($approve_deny == true) {
        $_approve_deny = 1;
    } else {
        $_approve_deny = 0;
    }
    drupal_add_css(drupal_get_path('module', 'ncn_claims_manager') . '/ncn_claims_manager.css', array('group' => CSS_DEFAULT, 'type' => 'file'));
    ?>
    <script type="text/javascript">
        var reload_url = "/account/update_claim_preview/<?= base64_encode($order_by); ?>/<?= base64_encode($_editable); ?>/<?= base64_encode($_send_to_admin); ?>/<?= base64_encode($_approve_deny); ?>/<?= base64_encode($additional_sql); ?>";
    </script>
    <div class="claims-section-wrapper <?php echo $class_name; ?>">
    <div class="clearfix">
        <div class="title"><?php echo $page_title; ?></div>
        <div class="help"><a href="#">Help</a></div>
    </div>
    <div class="table clearfix">
    <div class="table-header">
        <table>
            <tr>
                <td class="td-id">ID</td>
                <td class="td-date">Date of Loss</td>
                <td class="td-customer-name">Customer Name</td>
                <td class="td-claim-file">Claim File</td>

                <?php
                if ($editable == true) {
                    ?>
                    <td class="td-photo-album">Photo Album</td>
                <?php
                }
                ?>
                <td class="td-claim-status">Claim Status</td>

                <?php
                if ($send_to_archive == true) {
                    ?>
                    <td class="td-payment-function">Functions</td>
                <?php
                }
                ?>
                <?php if ($class_name != 'my-active-claims-detail'): ?>
                    <td class="td-claim-amount">Claim Amount</td>
                <?php endif; ?>

                <?php
                if (($send_to_archive == true) || ($editable == false)) {
                    ?>
                    <td class="td-payment-received">Payment Received</td>
                    <td class="td-file-notes">File Notes</td>
                <?php
                }
                ?>

                <td class="td-inbox">Inbox</td>
                <?php if ($class_name != 'my-active-claims-detail'): ?>
                    <td class="td-invoice">Service Invoice</td>
                <?php endif; ?>

                <?php
                if ($approve_deny == true) {
                    ?>
                    <td class="td-final-approval">Final Approval</td>
                <?php
                }
                ?>

                <?php
                if ($send_to_admin == true) {
                    ?>
                    <td class="td-create-my-invoice">Create My Invoice</td>
                    <td class="td-edit-additional-data">Claims Processing</td>
                <?php
                }
                ?>
            </tr>
        </table>
    </div>
    <div class="table-body">
    <table class="claims_manager">
    <?php

    $user_id = $user->uid;
	
    if (is_subuser($user)) {	
        $parent_mid = ncn_subuser_get_memberid_from_subuid($user_id);
        $user_id = get_uid_from_memberid($parent_mid);
	}
	
	if (isset($user->roles[23])) {
        $query = "SELECT * FROM claims WHERE leaduser=" . $user->uid . " AND deleted=0 AND claim_status!='unpurchased' ". $additional_sql." ORDER BY `$order_by` DESC";
    } else {
        $query = "SELECT * FROM claims WHERE user_id=" . $user_id . " AND deleted=0 AND claim_status!='unpurchased' ". $additional_sql." ORDER BY `$order_by` DESC";
    }
	
	$result = db_query($query);
	$row_count = $result->rowCount();

    $orders_total = 0;
    $payment_received_total = 0;

	$result_rec = $result->fetchAll();
    $i = 0;
	foreach($result_rec as $row)
	{
        // get data from sql
        $row = (array)$row;
        $claim_id = $row['claim_id'];

        // does the file note exists/not blank
        if ($row['file_note'] == '') // give the file notes some default value
        {
            $row['file_note'] = base64_encode('[no note]');
        }


        // does an invoice exist?
     //   $query2 = "SELECT * FROM claims_invoices WHERE claim_id=" . $claim_id . " AND `live`=2;";
        $result2 = db_query('SELECT * FROM {claims_invoices} WHERE claim_id=:a AND live=2',array(':a'=>$claim_id));
        $live_invoice_count = $result2->rowCount();

      //  $query2 = "SELECT * FROM claims_invoices WHERE claim_id=" . $claim_id . " AND `live`=1;";
        //echo "SELECT * FROM claims_invoices WHERE claim_id=".$claim_id." AND `live`=1";
        $result2 = db_query('SELECT * FROM {claims_invoices} WHERE claim_id=:a AND `live`=1',array(':a'=>$claim_id));
        $live_claim_count = $result2->rowCount();

        $claim_locked = false;
        if (ncn_admin_get_claim_first_free_locked($claim_id) == 'LOCKED') {
            $claim_locked = true;
        }
        // draw the row
        ?>
        <tr>
        <td class="td-id">
            <a href="#" onclick="toggle_slide('basic_<?= $claim_id; ?>', 1);return false;"><?= $claim_id; ?></a>
        </td>
        <td class="td-date"><?= render_claim_date(ncn_cd($claim_id, 'date_of_loss')) ?></td>
        <td class="td-customer-name">
            <a href="#" onclick="toggle_slide('basic_<?= $claim_id; ?>', 1);return false;"><?= ncn_cd($claim_id, 'customer_name'); ?></a>
        </td>
        <td class="td-claim-file">
            <?php
            //if ( (($live_invoice_count > 0) && ($row['claim_status']=='approved')) || ( ($live_invoice_count > 0) && (($row['claim_status']=='receivables') || ($row['claim_status']=='paid in full')) ) )
            if ($live_invoice_count > 0) {
                ?>
                <a href="serve_invoice_file/<?= $claim_id; ?>/2" class="pdf-icon-link"></a>
            <?php
            } else {
                echo "<span>Not Received<span>";
            }
            ?>
        </td>
        <?php
        // edit controls
        if ($editable == true && !isset($user->roles[23])) {
            ?>
            <!-- updated by *** -->
            <td class="td-photo-album">
                <?php    if (($row['claim_status'] != "receivables") && ($row['claim_status'] != "paid in full")) {
                    if ( ($row['claim_status'] == 'out for review') || ($row['claim_status'] == 'approved')){ // Uncommented by KEYiDEAS on 28.10.2014
                    /*if ($row['claim_status'] == 'approved') {*/  // Commented by KEYiDEAS on 28.10.2014
                        $disabled_string = 'disabled';
                    } else {
                        $disabled_string = 'enabled';
                    }
                } else {
                    $disabled_string = 'disabled';
                }
                ?>
                <div class="edit-album-btn clearfix">
                    <!-- <a href="#" class="<?php echo $disabled_string; ?>" <?php if ($row['claim_status'] == 'out for review') print 'disabled'; ?> <?php if($disabled_string!='disabled' && $row['claim_status'] != 'out for review') { ?> onclick='open_edit_box(<?php echo $claim_id; ?>)' <?php } ?>> -->
                    <a href="#" class="<?php echo $disabled_string; ?>" <?php if ($disabled_string == 'disabled') print 'disabled'; ?> <?php if ($disabled_string != 'disabled') { ?> onclick='open_edit_box(<?php echo $claim_id; ?>)' <?php } ?>> Edit Album </a>
                </div>
                <?php //} ?>
            </td>
        <?php
        } // end editable == true;
        else if ($editable == true) {
            ?>
            <td class="td-photo-album">
                <div class="edit-album-btn clearfix">
                    <a href="#" class="<?php echo $disabled_string; ?>">
                        Edit Album
                    </a>
                </div>
            </td>
        <?php
        }
        ?>

        <!-- <td><div class='status_<?= str_replace(' ', '_', $row['claim_status']); ?>'></div></td> -->
        <td class="td-claim-status"><?= ncn_claim_manager_claim_status_style($row['claim_status']); ?></td>

        <?php
        if ($send_to_archive == true && !isset($user->roles[23])) // payment received functions
        {
            ?>
            <td class="td-payment-function">
                <a href="#" class="pay-full"
                   onclick="archive_claim('<?= $base_url; ?>', <?= $claim_id; ?>, '<?= $row['payment_received']; ?>');return false;">Paid
                    In Full</a><br/>
                <a href="#" class="pay-partial"
                   onclick="partial_payment('<?= $base_url; ?>', <?= $claim_id; ?>);return false;">Partial Payment
                    Received</a>
            </td>
        <?php
        }else if ($send_to_archive == true){
        ?>
            <td class="td-payment-function">
                <a href="#" class="pay-full">Paid In Full</a><br/>
                <a href="#" class="pay-partial">Partial Payment Received</a>
            </td>
        <?php } ?>
        <?php if ($class_name != 'my-active-claims-detail'): ?>
            <td class="td-claim-amount">
                <?php
                if ($row['claim_amount'] > 0) // only show claim amount if > 0
                {
                    $orders_total += $row['claim_amount'];
                    print '$' . number_format($row['claim_amount'], 2);
                }
                ?>
            </td>
        <?php endif; ?>

        <?php
        if (($send_to_archive == true) || ($editable == false)) // payment received
        {
            ?>
            <td class="td-payment-received"><?php

                if ($row['payment_received'] > 0) // only show claim amount if > 0
                {
                    $payment_received_total += $row['payment_received'];
                    print '$' . number_format($row['payment_received'], 2);
                }

                ?></td>

            <td class="td-file-notes">
                <?php if (!isset($user->roles[23])) { ?>
                    <a class="file-notes" href="#" onclick="set_file_note('<?= $base_url; ?>', <?= $claim_id; ?>);return false;">Set File Notes</a>
                <?php }else{ ?>
                    <a class="file-notes" href="#">Set File Notes</a>
                <?php } ?>
            </td>

        <?php
        }
        ?>


        <td class="td-inbox">    <!-- Inbox -->
            <?php
            // get number of read messages in thread
         //  $query2 = "SELECT * FROM pm_message WHERE `claim_id`=" . $claim_id . " AND `read`=1 AND `to`=" . $user->uid . ";";
            $result2 = db_query('SELECT * FROM {pm_message} WHERE `claim_id`=:a AND `read`=1 AND `to`=:b',array(':a'=>$claim_id,':b'=>$user->uid));
            $read = $result2->rowCount();

            if ($read > 0) {
                $class = "message-icon-link-read";
            }

            // get number of read messages in thread
      //      $query2 = "SELECT * FROM pm_message WHERE `claim_id`=" . $claim_id . " AND `read`=0 AND `to`=" . $user->uid . ";";
            $result2 = db_query('SELECT * FROM {pm_message} WHERE `claim_id`=:a AND `read`=0 AND `to`=:b',
                array(':a'=>$claim_id,':b'=>$user->uid));
            $unread = $result2->rowCount();

            if ($unread > 0) {
                $class = "message-icon-link-unread";
            }


            // display the inbox button
            if (($unread > 0) || ($read > 0)) {
                ?>
                <a href="<?= $base_url; ?>/account/message-center/viewthread/<?= $claim_id; ?>"
                   class="<?= $class; ?>"></a>
            <?php
            }
            ?>
        </td>
        <?php if ($class_name != 'my-active-claims-detail'): ?>
            <td class="td-invoice">
                <?php
                // only show invoice download if an invoice exists
                if ($live_claim_count > 0) {
                    ?>
                    <a href="serve_invoice_file/<?= $claim_id; ?>/1" class="pdf-icon-link-32"></a>
                <?php
                }
                ?>
            </td>
        <?php endif; ?>

        <?php
        if ($approve_deny == true && $row['claim_status'] != 'returned') {
            print "<td class=\"td-final-approval\">";
            //var_dump($live_claim_count);
            if ($live_claim_count > 0) {
                if ($claim_locked == true) {
                    echo "<a href='#' class='purchase-btn' onclick=\"window.location = '".$base_url."/account/purchase_invoice/$claim_id';\">Purchase</a>";
                } else {
                    echo "<a href='#' class='approve-btn' onclick=\"window.location = '".$base_url."/account/approve_invoice/$claim_id';\">Approve</a>";
                }
                ?>
                <?php $_change_order_request_url = $base_url . "/account/ncn_change_order_request/" . $claim_id; ?>
                <a href="<?php echo $_change_order_request_url; ?>" class="reject-btn">Change Order</a>
                <!-- <a href="#" class="reject-btn" onclick="if (confirm('Please confirm you wish to change this invoice and notify the administrator.')) { window.location = '/account/reject_invoice/<?= $claim_id; ?>'; }">Reject</a> -->
            <?php
            }
            print "</td>";
        }
        ?>

        <?php

        if ($row['claim_status'] == "incomplete" && !isset($user->roles[23]) /*&& $live_invoice_count > 0*/) {
            ?>
            <td class="td-create-my-invoice">
                <!--<a href="#" class="create-invoice-btn enabled" onclick="open_submit_box(<?= $claim_id; ?>);return false;">Create My Invoice</a>-->
				<a class="create-invoice-btn enabled colorbox-node" href="<?php echo $base_url; ?>/account/confirm_submit_claim/<?= $claim_id; ?>?width=700&height=540">Create My Invoice</a>
            </td>
        <?php
        } else
            if ($send_to_admin == true) {
                ?>
                <td class="td-create-my-invoice">
                    <a href="#" class="create-invoice-btn disabled">Create My Invoice</a>
                </td>
            <?php
            } ?>
        <?php if ($send_to_admin == true && !isset($user->roles[23])) { ?>
            <td class="td-edit-additional-data">
                <a href="<?php echo base_path() . "account/additional_claim_info/$claim_id"; ?>"
                   class="edit-additional-data-btn">Edit</a>
            </td>
        <?php } else if ($send_to_admin == true) { ?>
            <td class="td-edit-additional-data">
                <a href="#" class="edit-additional-data-btn">Edit</a>
            </td>
        <?php } ?>
        </tr>
        <tr class="hidden-row">
            <td colspan="2" style="padding:0;"></td>
            <td colspan="<?php echo($colcount - 2); ?>" style="padding:0;">
                <div class="basic_info" id="basic_<?= $claim_id; ?>">
                    <table cellpadding="0" cellspacing="0" style="padding:0;margin:0;">
                        <tr>
                            <td width="150px"><span
                                    style="font-weight: bold;">Date of Loss:&nbsp;</span><?= ncn_cd($claim_id, 'date_of_loss'); ?>
                            </td>
                            <td width="150px"><span
                                    style="font-weight: bold;">Address:&nbsp;</span><?= ncn_cd($claim_id, 'insured_address'); ?>
                            </td>
                            <td width="100px"><span
                                    style="font-weight: bold;">State:&nbsp;</span><?= ncn_cd($claim_id, 'insured_state'); ?>
                            </td>
                            <td width="40px" rowspan="2" style="text-align:right;"><span style="font-weight: bold;">Notes:&nbsp;</span>
                            </td>
                            <td rowspan="2">
                                <?php
                                if (ncn_admin_note_check_mode($claim_id) == 'new') {
                                    print ncn_claims_manager_note_render_claim_notes_table($claim_id, $GLOBALS['user']->uid);
                                } else {
                                    $_file_note = str_replace("<br/>", "\n", base64_decode($row['file_note']));
                                    echo nl2br(htmlspecialchars($_file_note));
                                } ?>
                            </td>
                        </tr>
                        <tr>
                            <td><span
                                    style="font-weight: bold;">Insured's Name:&nbsp;</span><?= ncn_cd($claim_id, 'customer_name'); ?>
                            </td>
                            <td><span
                                    style="font-weight: bold;">City:&nbsp;</span><?= ncn_cd($claim_id, 'insured_city'); ?>
                            </td>
                            <td><span
                                    style="font-weight: bold;">Zip Code:&nbsp;</span><?= ncn_cd($claim_id, 'insured_zip'); ?>
                            </td>
                        </tr>
                    </table>
                </div>
            </td>
        </tr>
        <?php    
            $min_row = 9; //insert empty row
            if ($i == $row_count - 1) {
                for ($index = 0; $index < ($min_row - $row_count); $index++) {
                    print ('<tr>');
                    print ("	<td colspan=\"$colcount\">&nbsp</td>");
                    print ('</tr>');
                }
            } 
        ?>
        <?php    if ($i == $row_count - 1 && $orders_total > 0) {
            $colspan = 0;
            $colskip = 0;
            if ($class_name == 'out-for-review-detail') {
                $colspan = 5;
                $colskip = 1;
            } elseif ($class_name == 'archived-claims-detail') {
                $colspan = 4;
                $colskip = 2;
            } elseif ($class_name == 'recievables-detail') {
                $colspan = 5;
                $colskip = 2;
            }
            ?>
            <tr class="header">
                <td>Total:</td>
                <td colspan="<?php echo $colspan; ?>"></td>
                <td><?= '$' . number_format($orders_total, 2); ?></td>

                <?php
                if (($send_to_archive == true) || ($editable == false)) {
                    ?>
                    <td><?= '$' . number_format($payment_received_total, 2); ?></td>
                <?php
                }
                ?>

                <td colspan="<?php echo($colcount - $colspan - $colskip - 1); ?>"></td>
            </tr>
        <?php
        }
        $i++;
    } // end foreach
    ?>
    <?php    $min_row = 9; // insert empty row
    if ($row_count == 0) {
        for ($index = 0; $index < ($min_row - $row_count); $index++) {
            print ('<tr>');
            print ("	<td colspan=\"$colcount\">&nbsp</td>");
            print ('</tr>');
        }
    } ?>
    </table>
    </div>
    </div>
<?php
}

//------------------------------------------------------------------------------
// see: modules/ubercart/uc_cart/uc_cart.pages.inc
function ncn_process_completed_order($order)
{
    // get data
    $user_id = $order->uid;
    $claim_id = $order->products[0]->data['attributes']['Claim'][0];

    // check errors
    if ((!is_numeric($claim_id)) || (!is_numeric($user_id))) {
        drupal_set_message(t("We're sorry.  An error occurred (#100) while processing your order that prevents us from completing it at this time. Please contact us and we will resolve the issue as soon as possible."), 'error');
        return false;
    }

    // check order belongs to this user and status is "approved"
   // $query = "SELECT * FROM `claims` WHERE claim_id=" . $claim_id . " AND `user_id`=" . $user_id . " AND `claim_status`='approved';";
    $result = db_query('SELECT * FROM {claims} WHERE claim_id=:a AND user_id=:b AND claim_status=:c',
        array(':a'=>$claim_id,':b'=>$user_id,':c'=>'approved'));
    $row_count = $result->rowCount();

    if ($row_count == 0) // user attempted to buya  claim twice, or claim does not belong to user
    {
        drupal_set_message(t("We're sorry.  An error occurred (#200) while processing your order that prevents us from completing it at this time. Please contact us and we will resolve the issue as soon as possible."), 'error');
        return false;
    }

    // all is good - update the claim status
 //   $query = "UPDATE claims SET claim_status='receivables' WHERE claim_id=" . $claim_id . " AND `user_id`=" . $user_id . ";";
    $result = db_query('UPDATE {claims} SET claim_status=:a WHERE claim_id=:b AND user_id=:c',
        array(':a'=>'receivables',':b'=>$claim_id ,':c'=>$user_id));

    return true;
}

//------------------------------------------------------------------------------
function render_claim_time($time)
{

    $str = sprintf("%02d", $time['hour']) . ':' . sprintf("%02d", $time['minute']) . " " . $time['meridiem'];

    return $str;
}

//------------------------------------------------------------------------------
function render_claim_date($date)
{
    return date("F j Y", strtotime($date)); //return $date;

    if (!is_numeric($date)) {
        return '';
    }


    return date("m/d/Y", strtotime($date));
}

//------------------------------------------------------------------------------
// "collect data" about a particular claim
function ncn_cd($claim_id, $key)
{
//    $query = "SELECT * FROM claims_data WHERE `claim_id`=" . $claim_id . " AND `key`='" . AddSlashes($key) . "';";
    $result = db_query('SELECT * FROM {claims_data} WHERE claim_id=:a AND `key`=:b',array(':a'=>$claim_id,':b'=>$key));
    if ($result) {
        $row_count = $result->rowCount();
    } else {
        $row_count = 0;
    }	

    if ($row_count == 0) {
        return;
    }
    $row = $result->fetchAssoc();
	$res = unserialize($row['val']);

    if (is_array($res)) // check for array (new style)
    {
        if (is_array($res['val'])) {
            $res = implode(" ", $res['val']);
        } else {
            $res = $res['val'];
        }
    }
	
    /* Hack for Mobile App Data */
    if($key=='date_of_loss'){
        $res = date("F j Y", strtotime($res));
    }
    if($key=='insured_state'){
        preg_match('/\(([^\)]*)\)/', $res, $ins_match);
        if(isset($ins_match[1]) && trim($ins_match[1])!=''){
            $res = $ins_match[1];
        }
    }
    /* Hack for Mobile App Data */
    
    return $res;

}

//------------------------------------------------------------------------------
// main entry function - handles all the form input and sets up the display
function ncn_claims_manager_preprocess(&$vars)
{

    // check if this is an alias rewritten page
    if (!isset($vars['node']->field_theme_alias[0]['value'])) {
        return;
    }

//	if ($vars['node']->field_theme_alias[0]['value'] != 'create-new-claim')
//	{	return;		}

    // add the css file (always required for this)
//    drupal_add_css(drupal_get_path('module', 'ncn_claims_manager') . '/ncn_claims_manager.css', 'module', 'all', FALSE);
    drupal_add_css(drupal_get_path('module', 'ncn_claims_manager') . '/ncn_claims_manager.css', array('group' => CSS_DEFAULT, 'type' => 'file'));


}

//------------------------------------------------------------------------------
// Implementation of hook_perm().
function ncn_claims_manager_permission()
{
    //return array('access ncn_claims_manager content');
	return array(
			    	'access ncn_claims_manager content' =>  array(
				      'title' => t('access ncn_claims_manager content'),
    				),	
				);		
}

//------------------------------------------------------------------------------
function ncn_claims_manager_help($section)
{

    switch ($section) {
        case 'admin/modules#description':
            // This description is shown in the listing at admin/modules.
            return t('The ncn_claims_manager module multiplies two numbers together.');
    }
}

//------------------------------------------------------------------------------

function ncn_claim_manager_homepage()
{
    ?>
    <div id="page_loading"></div>
    <div id="page_results" class="clearfix">
        <?php ncn_claim_manager_homepage_innerpage(); ?>
    </div>
    <?php
    // Splash Page
    if (module_exists('ncn_splash')) {
        ncn_splash_open_prompt_pages();
    }
}

// -----------------------------------------------
function ncn_claim_manager_homepage_innerpage()
{
	GLOBAL $user;
    global $base_url;
    if(in_array("leaduser",$user->roles)===true){
        $GLOBALS['account_role'] = "leaduser";
    } else if (in_array("associate",$user->roles)===true) {
        $GLOBALS['account_role'] = "associate";
    } else {
        $GLOBALS['account_role'] = "user";
    }
    ?>
    <div class="page-content clearfix">
        <script type="text/javascript">
            var reload_url = "<?php echo $base_url; ?>/account/update_claim_preview/account-home";
        </script>
        <div>

            <?php
            if ($GLOBALS['account_role'] != "leaduser") {
                ?>
                <div class="add-claim-section clearfix"><?php _ncn_claim_manager_homepage_add_claim(); ?></div>
            <?php } ?>



            <?php if ($GLOBALS['account_role'] == "leaduser") { ?>
                <div class="claim-list-lead clearfix">
                    <div class="my-active-claims list"><?php _ncn_claim_manager_homepage_my_active_claims(4); ?></div>
                    <div class="out-for-review list"><?php _ncn_claim_manager_homepage_out_for_reviews(4); ?></div>
                    <div class="receivables list"><?php _ncn_claim_manager_homepage_receivables(3) ?></div>
                </div>
            <?php } else { ?>
                <div class="claim-list clearfix">
                    <div class="my-active-claims list"><?php _ncn_claim_manager_homepage_my_active_claims(4); ?></div>
                    <div class="out-for-review list"><?php _ncn_claim_manager_homepage_out_for_reviews(4); ?></div>
                    <div class="receivables list"><?php _ncn_claim_manager_homepage_receivables(3) ?></div>
                </div>
            <?php } ?>


        </div>
    </div>
    <div class="sponsor-section">
        <div class="sponsor-section-content">
            <div class="title">OUR SPONSOR</div>
            <?php _ncn_claim_manager_homepage_sponsor() ?>
        </div>
    </div>
<?php
}

//----------------------------------------------------------------------

function _ncn_claim_manager_homepage_sponsor()
{
    echo ncn_sponsor_section();
}


function _ncn_claim_manager_homepage_add_claim()
{
    GLOBAL $user;
    global $base_url;
    if (isset($user->roles[23])) {
        $GLOBALS['account_role'] = "leaduser";
    } else if (isset($user->roles[7])) {
        $GLOBALS['account_role'] = "associate";
    } else {
        $GLOBALS['account_role'] = "user";
    }

    ?>
    <div class="ahome-section-wrapper">
        <!--        KT start        -->
        <div>
            <a href="<?php echo  $base_url ?>/account/create-new-claim.html" id="ahome-addclaim-top-btn"
               class="clearfix"><span>Add a Claim</span></a>

            <div id="bottom-text">To create a new claim click the button above</div>
        </div>
        <div>
            <div id="message-title">Messages and Alerts</div>
            <div id="message-body" style="<?php if ($GLOBALS['account_role'] == "leaduser") {
                echo 'height:365px;';
            } ?>">
                <h2><?= nl2br(variable_get('ncn_msg_alert_title', '')); ?></h2>

                <p><?= nl2br(variable_get('ncn_msg_alert_text', '')); ?></p>
            </div>
        </div>
        <div>
        </div>
    </div>
<?php
}

//----------------------------------------------------------------------
function _ncn_claim_manager_homepage_my_active_claims($min_row) {

// param
    $order_by = "last_modified";
    //$additional_sql = ' AND `claim_status`!="out for review" AND `claim_status`!="returned" AND `claim_status`!="approved" AND `claim_status`!="archived" ';
    $additional_sql = " AND claim_status= 'incomplete' ";
    $editable = true;
    $send_to_archive = false;
    $send_to_admin = true;
    $approve_deny = false;

    ?>

<?php if ($GLOBALS['account_role'] == "leaduser"){ ?>
<div class="ahome-section-wrapper-lead">
<?php }else{ ?>
    <div class="ahome-section-wrapper">
        <?php } ?>
        <div class="clearfix">
            <div class="title">My Active Claims</div>
            <div class="help"><a href="#">Help</a></div>
        </div>
        <div class="table clearfix">
            <div class="table-header">
                <table>
                    <tr>
                        <td width="120px">Customer Name</td>
                        <td width="100px">Photo Album</td>
                        <td width="100px">Claims Processing</td>
                        <td>Create My Invoice</td>
                    </tr>
                </table>
            </div>
            <div class="table-body">
                <table>
                    <?php
                    GLOBAL $user;
                    GLOBAL $base_url;

                    if ($editable == true) {
                        $_editable = 1;
                    } else {
                        $_editable = 0;
                    }

                    if ($send_to_admin == true) {
                        $_send_to_admin = 1;
                    } else {
                        $_send_to_admin = 0;
                    }

                    if ($approve_deny == true) {
                        $_approve_deny = 1;
                    } else {
                        $_approve_deny = 0;
                    }
					//echo "<pre>";print_r($user->roles[23]);
                    if (isset($user->roles[23])) {
                        $query = "SELECT * FROM claims WHERE leaduser=" . $user->uid . " AND deleted=0 AND claim_status!='unpurchased' $additional_sql ORDER BY `$order_by` DESC limit 0, 4;";
                    } else {
                        $query = "SELECT * FROM claims WHERE user_id=" . $user->uid . " AND deleted=0 AND (claim_status!='unpurchased' ".$additional_sql.") ORDER BY `$order_by` DESC limit 0, 4;";
                    }
					//echo $query;exit;
                    $result = db_query($query);					
                    $row_count = $result->rowCount();
					
					$orders_total = 0;
                    $payment_received_total = 0;

					$result_rec = $result->fetchAll();
					foreach($result_rec as $row )
					{
                        // get data from sql
                        $row = (array)$row;						
                        $claim_id = $row['claim_id'];

                        // does the file note exists/not blank
                        if ($row['file_note'] == '') // give the file notes some default value
                        {
                            $row['file_note'] = base64_encode('[no note]');
                        }


                        // does an invoice exist?
                     //   $query2 = "SELECT * FROM claims_invoices WHERE claim_id=" . $claim_id . " AND `live`=2;";
                        $result2 = db_query('SELECT * FROM {claims_invoices} WHERE claim_id=:a AND live=2',
                            array(':a'=>$claim_id));
                        $live_invoice_count = $result2->rowCount();

                       // $query2 = "SELECT * FROM claims_invoices WHERE claim_id=" . $claim_id . " AND `live`=1;";
                        $result2 = db_query('SELECT * FROM {claims_invoices} WHERE claim_id=:a AND live=1',
                        array(':a'=>$claim_id));
                        $live_claim_count = $result2->rowCount();

                        // draw the row
                        ?>
                        <tr>
                            <td width="120px"><?php echo ncn_cd($claim_id, 'customer_name'); ?></td>

                            <?php // edit controls
                            if ($editable == true && !isset($user->roles[23])) {
                                ?>
                                <td width="100px">
                                    <?php    if (($row['claim_status'] != "receivables") && ($row['claim_status'] != "paid in full")) {
                                        /*if ( ($row['claim_status'] == 'out for review') || ($row['claim_status'] == 'approved'))	{*/
                                        $disabled_string = 'enabled';
                                    } else {
                                        $disabled_string = 'disabled';
                                    }
                                    ?>
                                    <div class="edit-album-btn clearfix">
                                        <a href="#"
                                           class="<?php echo $disabled_string; ?>" <?php if ($row['claim_status'] == 'out for review') print 'disabled'; ?> <?php if ($disabled_string != 'disabled' && $row['claim_status'] != 'out for review') { ?> onclick='open_edit_box(<?php echo $claim_id; ?>, true)' <?php } ?>>
                                            Edit Album
                                        </a>
                                    </div>
                                    <?php //} ?>
                                </td>
                            <?php
                            } //editable==true;
                            else {
                                ?>
                                <td width="100px">
                                    <div class="edit-album-btn clearfix">
                                        <a href="#"
                                           class="<?php echo $disabled_string; ?>" <?php if ($row['claim_status'] == 'out for review') print 'disabled'; ?> >
                                            Edit Album
                                        </a>
                                    </div>
                                </td>
                            <?php } ?>
                            <?php
                            if (!isset($user->roles[23])) {
                                ?>
                                <td width="100px">
                                    <a href="<?php echo base_path() . "account/additional_claim_info/$claim_id"; ?>"
                                       class="edit-additional-data-btn">Edit</a>
                                </td>
                            <?php
                            } else {
                                ?>
                                <td width="100px">
                                    <a href="#"
                                       class="edit-additional-data-btn">Edit</a>
                                </td>
                            <?php
                            }?>
                            <?php
                            if (!isset($user->roles[23])) {
                                ?>
                                <td>
									<!--<a href="#" class="create-invoice-btn enabled" onclick="open_submit_box(<?= $claim_id; ?>);return false;">Create My Invoice</a>-->
									<a class="create-invoice-btn enabled colorbox-node" href="<?php echo $base_url; ?>/account/confirm_submit_claim/<?= $claim_id; ?>?width=700&height=540">Create My Invoice</a>
                                </td>
                            <?php
                            } else {
                                ?>
                                <td><a href="#" class="create-invoice-btn enabled">Create My Invoice</a>
                                </td>
                            <?php
                            }?>
                        </tr>

                    <?php
                    } //end of for
                    for ($i = 0; $i < ($min_row - $row_count); $i++) {
                        print ('<tr>');
                        print ('<td colspan="4">&nbsp</td>');
                        print ('</tr>');
                    }
                    ?>
                </table>
            </div>
        </div>
        <div class="view-details clearfix">
            <a href="<?php echo $base_url ?>/account/my-active-claims.html">View Details</a>
        </div>
    </div>
<?php
}
//----------------------------------------------------------------------
function _ncn_claim_manager_homepage_out_for_reviews($min_row)
{

// param
    $order_by = "last_modified";
    $additional_sql = " AND (`claim_status`='out for review' OR `claim_status`='returned' OR `claim_status`='approved' ) ";
    $editable = true;
    $send_to_archive = false;
    $send_to_admin = false;
    $approve_deny = true;

    ?>

    <div class="ahome-section-wrapper">
        <div class="clearfix">
            <div class="title">Out for Review</div>
            <div class="help"><a href="#">Help</a></div>
        </div>
        <div class="table clearfix">
            <div class="table-header">
                <table>
                    <tr>
                        <td width="120px">Customer Name</td>
                        <td>Claim Status</td>
                    </tr>
                </table>
            </div>
            <div class="table-body">
                <table>
                    <?php
                    GLOBAL $user;
                    GLOBAL $base_url;

                    if ($editable == true) {
                        $_editable = 1;
                    } else {
                        $_editable = 0;
                    }

                    if ($send_to_admin == true) {
                        $_send_to_admin = 1;
                    } else {
                        $_send_to_admin = 0;
                    }

                    if ($approve_deny == true) {
                        $_approve_deny = 1;
                    } else {
                        $_approve_deny = 0;
                    }

                    if (isset($user->roles[23])) {
                        $query = "SELECT * FROM claims WHERE leaduser=" . $user->uid . " AND deleted=0 AND claim_status!='unpurchased' $additional_sql ORDER BY `$order_by` DESC limit 0, 4;;";
                    } else {
                        $query = "SELECT * FROM claims WHERE user_id=" . $user->uid . " AND deleted=0 AND claim_status!='unpurchased' $additional_sql ORDER BY `$order_by` DESC limit 0, 4;;";
                    }
                    $result = db_query($query);
                    $row_count = $result->rowCount();
					
                    $orders_total = 0;
                    $payment_received_total = 0;

					$result_rec = $result->fetchAll();
					foreach($result_rec as $row)
					{
                        // get data from sql
                        $row = (array)$row;
                        $claim_id = $row['claim_id'];

                        // does the file note exists/not blank
                        if ($row['file_note'] == '') // give the file notes some default value
                        {
                            $row['file_note'] = base64_encode('[no note]');
                        }


                        // does an invoice exist?
                      //  $query2 = "SELECT * FROM claims_invoices WHERE claim_id=" . $claim_id . " AND `live`=2;";
                        $result2 = db_query('SELECT * FROM {claims_invoices} WHERE claim_id=:a AND live=2',
                        array(':a'=>$claim_id));
                        $live_invoice_count = $result2->rowCount();

                      //  $query2 = "SELECT * FROM claims_invoices WHERE claim_id=" . $claim_id . " AND `live`=1;";
                        $result2 = db_query('SELECT * FROM {claims_invoices} WHERE claim_id=:a AND live=1',
                        array(':a'=>$claim_id));
                        $live_claim_count = $result2->rowCount();

                        // draw the row
                        ?>
                        <tr>
                            <td width="120px"><?php echo ncn_cd($claim_id, 'customer_name'); ?></td>
                            <td><?= ncn_claim_manager_claim_status_style($row['claim_status']); ?></td>
                        </tr>

                    <?php
                    } //end of for
                    for ($i = 0; $i < ($min_row - $row_count); $i++) {
                        print ('<tr>');
                        print ('<td colspan="2">&nbsp</td>');
                        print ('</tr>');
                    }
                    ?>
                </table>
            </div>
        </div>
        <div class="view-details clearfix">
            <a href="<?php echo $base_url ?>/account/out-for-review.html">View Details</a>
        </div>
    </div>
<?php
}

//----------------------------------------------------------------------
function _ncn_claim_manager_homepage_receivables($min_row) {

// param
    $order_by = "last_modified";
	$additional_sql = " AND claim_status= 'receivables' ";
    $editable = false;
    $send_to_archive = true;
    $send_to_admin = false;
    $approve_deny = false;

    ?>

<?php if ($GLOBALS['account_role'] == "leaduser"){ ?>
<div class="ahome-section-wrapper-lead">
<?php }else{ ?>
    <div class="ahome-section-wrapper">
        <?php } ?>
        <div class="clearfix">
            <div class="title">Receivables</div>
            <div class="help"><a href="#">Help</a></div>
        </div>
        <div class="table clearfix">
            <div class="table-header">
                <table>
                    <tr>
                        <td width="140px">Customer Name</td>
                        <td width="150px">Functions</td>
                        <td width="150px">Claim Amounts</td>
                        <td>File Notes</td>
                    </tr>
                </table>
            </div>
            <div class="table-body">
                <table>
                    <?php
                    GLOBAL $user;
                    GLOBAL $base_url;

                    if ($editable == true) {
                        $_editable = 1;
                    } else {
                        $_editable = 0;
                    }

                    if ($send_to_admin == true) {
                        $_send_to_admin = 1;
                    } else {
                        $_send_to_admin = 0;
                    }

                    if ($approve_deny == true) {
                        $_approve_deny = 1;
                    } else {
                        $_approve_deny = 0;
                    }

                    if (isset($user->roles[23])) {
                        $query = "SELECT * FROM claims WHERE leaduser=" . $user->uid . " AND deleted=0 AND claim_status!='unpurchased' $additional_sql ORDER BY `$order_by` DESC limit 0, 3;";
                    } else {
                        $query = "SELECT * FROM claims WHERE user_id=" . $user->uid . " AND deleted=0 AND claim_status!='unpurchased' $additional_sql ORDER BY `$order_by` DESC limit 0, 3;";
                    }
                    $result = db_query($query);
                    $row_count = $result->rowCount();

                    $orders_total = 0;
                    $payment_received_total = 0;

					$result_rec = $result->fetchAll();					
					foreach($result_rec as $row)
					{
                        // get data from sql
                        $row = (array)$row;
                        $claim_id = $row['claim_id'];

                        // does the file note exists/not blank
                        if ($row['file_note'] == '') // give the file notes some default value
                        {
                            $row['file_note'] = base64_encode('[no note]');
                        }


                        // does an invoice exist?
                      //  $query2 = "SELECT * FROM claims_invoices WHERE claim_id=" . $claim_id . " AND `live`=2;";
                        $result2 = db_query('SELECT * FROM {claims_invoices} WHERE claim_id=:a AND live=2',
                        array(':a'=>$claim_id));
                        $live_invoice_count = $result2->rowCount();

                      //  $query2 = "SELECT * FROM claims_invoices WHERE claim_id=" . $claim_id . " AND `live`=1;";
                        $result2 = db_query('SELECT * FROM {claims_invoices} WHERE claim_id=:a AND live=1',
                        array(':a'=>$claim_id));
                        $live_claim_count = $result2->rowCount();

                        // draw the row
                        ?>
                        <tr>
                            <td width="120px"><?php echo ncn_cd($claim_id, 'customer_name'); ?></td>
                            <td width="150px">
                                <?php    if ($send_to_archive == true && !isset($user->roles[23])) // payment received functions
                                {
                                    ?>
                                    <a href="#" class="pay-full"
                                       onclick="archive_claim('<?= $base_url; ?>', <?= $claim_id; ?>, '<?= $row['payment_received']; ?>');return false;">Pay
                                        in Full</a>
                                    <a href="#" class="pay-partial"
                                       onclick="partial_payment('<?= $base_url; ?>', <?= $claim_id; ?>);return false;">Partial
                                        Payment Received</a>
                                <?php }else if ($send_to_archive == true){
        ?>

                                <a href="#" class="pay-full">Paid In Full</a>
                                <a href="#" class="pay-partial">Partial Payment Received</a>

                            <?php } ?>
                            </td>
                            <td width="150px">
                                <?php    if ($row['claim_amount'] > 0) // only show claim amount if > 0
                                {
                                    //$orders_total += $row['claim_amount'];
                                    print '$' . number_format($row['claim_amount'], 2);
                                }
                                ?>
                            </td>
                            <td>
                                <!-- <a class="file-notes" href="#" onclick="set_file_note('<?= $base_url; ?>', <?= $claim_id; ?>, true);return false;">Set File Notes</a> -->
                                <!--<span class="file-notes">file-note</span>-->
                                <?php    if (!isset($user->roles[23])){ ?>
                                    <a class="file-notes" href="#" onclick="set_file_note('<?= $base_url; ?>', <?= $claim_id; ?>, true);return false;">Set File Notes</a>
                                <?php }else{ ?>
                                    <a class="file-notes" href="#">Set File Notes</a>
                                <?php } ?>
                            </td>
                        </tr>
                    <?php
                    } //end of for
                    for ($i = 0; $i < ($min_row - $row_count); $i++) {
                        print ('<tr>');
                        print ('	<td colspan="4">&nbsp</td>');
                        print ('</tr>');
                    }
                    ?>
                </table>
            </div>
        </div>
        <div class="view-details clearfix">
            <a href="<?php echo $base_url ?>/account/receivables.html">View Details</a>
        </div>
    </div>
<?php
}

function ncn_claim_manager_claim_status_style($claim_status)
{
    $str_status = ucwords($claim_status);
    return "<span class=\"claim_status $claim_status\">$str_status</span>";
}

/**
 *    Display Sales Report Page for Distributor
 */
function render_sales_report_page($dist_uid, &$vars)
{

// authentication for distributor report
    if (!ncn_dist_authentication($dist_uid)) {
        drupal_goto('account/distributor.html/authentication');
        return;
    }
/////////////////////////////////////////////////////////
    $data = array();
    $report_date = 0;
    if (isset($_GET['report_date'])) {
        $report_date = $_GET['report_date'];
    } else {
        $report_date = time();
    }

    _ncn_report_get_data_distributor_detailed($data, $report_date, $dist_uid);

    /* top body */
    $topbody = '<div class="content clearfix">';
    $topbody .= '<div class="date-links">';

    global $base_root;
    $url = $base_root . "/account/distributor.html/sales_report/";
    $next_month = strtotime("+1 month", $report_date);
    $last_month = strtotime("-1 month", $report_date);

    $topbody .= '<span><a href="' . $url . '?report_date=' . time() . '">[This Month]</a></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
    $topbody .= '<span><a href="' . $url . '?report_date=' . $last_month . '" title="' . date("F Y", $last_month) . '">[Last]</a></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
    $topbody .= '<span>' . date("F Y", $report_date) . '</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
    $topbody .= '<span><a href="' . $url . '?report_date=' . $next_month . '" title="' . date("F Y", $next_month) . '">[Next]</a></span>';
    $topbody .= '</div>';

    $total_monthly_earnings = 0;
    foreach ($data as $key => $data_part) {
        $total_monthly_earnings += $data_part[5];
    }

    $topbody .= '<div class="total-monthly-earnings">Total Monthly Earnings: &nbsp;<strong>' . render_payment_cost($total_monthly_earnings) . '</strong></div>';
    $topbody .= '</div>';
    $vars['topbody'] = $topbody;

    draw_sales_report_table($data);
}

function render_sales_report_page_asso($asso_uid, &$vars)
{
    /////////////////////////////////////////////////////////
    $data = array();
    $report_date = 0;
    if (isset($_GET['report_date'])) {
        $report_date = $_GET['report_date'];
    } else {
        $report_date = time();
    }

    _ncn_report_get_data_associate_detailed($data, $report_date, $asso_uid);

    /* top body */
    $topbody = '<div class="content clearfix">';
    $topbody .= '<div class="date-links">';

    global $base_root;
    $url = $base_root . "/account/distributor.html/sales_report/";
    $next_month = strtotime("+1 month", $report_date);
    $last_month = strtotime("-1 month", $report_date);

    $topbody .= '<span><a href="' . $url . '?report_date=' . time() . '">[This Month]</a></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
    $topbody .= '<span><a href="' . $url . '?report_date=' . $last_month . '" title="' . date("F Y", $last_month) . '">[Last]</a></span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
    $topbody .= '<span>' . date("F Y", $report_date) . '</span>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;';
    $topbody .= '<span><a href="' . $url . '?report_date=' . $next_month . '" title="' . date("F Y", $next_month) . '">[Next]</a></span>';
    $topbody .= '</div>';

    $total_monthly_earnings = 0;
    foreach ($data as $key => $data_part) {
        $total_monthly_earnings += $data_part[5];
    }

    $topbody .= '<div class="total-monthly-earnings">Total Monthly Earnings: &nbsp;<strong>' . render_payment_cost($total_monthly_earnings) . '</strong></div>';
    $topbody .= '</div>';
    $vars['topbody'] = $topbody;

    draw_sales_report_table($data);
}

function draw_sales_report_table($data)
{
    ?>
    <div class="clear-block">
        <div class="ncn-pager-ranger" style="font-weight: bold; margin-bottom:5px;"></div>
    </div>
    <div class="table-header">
        <table>
            <tr class="header">
                <td class="td-company-name"><strong>Company Name</strong></td>
                <td class="td-member-name"><strong>Member Name</strong></td>
                <td class="td-start-up-fee"><strong>Start-up Fee</strong></td>
                <td class="td-monthly-membership-fee"><strong>Monthly Membership Fee</strong></td>
                <td class="td-date"><strong>Date</strong></td>
                <td class="td-total-earned"><strong>Total Earned</strong></td>
            </tr>
        </table>
    </div>
    <div class="table-body">
        <?php
        drupal_add_css(drupal_get_path('module', 'ncn_message') . '/ncn_message.css', 'module', 'all', FALSE);
        drupal_add_js(drupal_get_path('module', 'ncn_message') . '/ncn_message.js');

        $page_records = 10;
        $row_count = count($data);
        $page_num = 0;

        $member_count = 0;
        foreach ($data as $key => $data_part) {
            if ($member_count % $page_records == 0) {
                $page_num++; ?>
                <table class="ncn-pager ncn-pager-page-<?php echo $page_num; ?>">
            <?php } ?>
            <tr>
                <td class="td-company-name"><?php echo $data_part[0]; ?></td>
                <td class="td-member-name"><?php echo $data_part[1]; ?></td>
                <td class="td-start-up-fee"><?php echo $data_part[2]; ?></td>
                <td class="td-monthly-membership-fee"><?php echo $data_part[3]; ?></td>
                <td class="td-date"><?php echo date('d M Y H:i:s', $data_part[4]); ?></td>
                <td class="td-total-earned"><?php echo render_payment_cost($data_part[5]); ?></td>
            </tr>
            <?php if ($member_count % $page_records == ($page_records - 1)): ?>
                </table>
            <?php endif; ?>
            <?php
            $member_count += 1;
        }
        if ($member_count == 0) {
            ?>
            <table class="">
                <?php
                for ($i = $member_count; $i < $page_records; $i++) {
                    ?>
                    <tr>
                        <td colspan="6">&nbsp;</td>
                    </tr>
                <?php } ?>
            </table>
        <?php
        } else if (($member_count % $page_records) != 0) {
            for ($i = $member_count; $i < (ceil($member_count / $page_records) * $page_records); $i++) {
                ?>
                <tr>
                    <td colspan="6">&nbsp;</td>
                </tr>
            <?php
            }
            echo "</table>";
        }
        ?>
    </div>
    <div class="ncn-pager-control clearfix">    <!-- pager_control -->
        <div style="float: right">
            <a class="first" href="#" onclick="pm_page_action('first');">first</a>
            <a class="prev" href="#" onclick="pm_page_action('prev');">prev</a>
            <a class="next" href="#" onclick="pm_page_action('next');">next</a>
            <a class="last" href="#" onclick="pm_page_action('last');">last</a>
        </div>
    </div>
    <script type="text/javascript">
        var total_records = <?php echo $member_count ?>;
        var page_records = <?php echo $page_records; ?>;
        var page_number = 1;	//global;
        var page_count = <?php echo $page_num; ?>;
        jQuery(document).ready(function () {
            pm_select_page(page_number);
            if (total_records <= page_records) {
                jQuery('.ncn-pager-ranger').css('display', 'none');
                jQuery('.ncn-pager-control').css('display', 'none');
            }
        });
    </script>
<?php
}

function ncn_dist_authentication($dist_uid)
{

    $_user = user_load($dist_uid);
    if (isset($_SESSION['auth_report']) && $_SESSION['auth_report'] == $_user->name) {
        return true;
    }

    unset($_SESSION['auth_report']);
    return false;
}

function _get_report_pass($username)
{
  //  $query = "SELECT * FROM auth_report WHERE username='$username'";
    $result = db_query('SELECT * FROM {auth_report} WHERE username=:a',array(':a'=>$username));
   // var_dump($result);
    if ($result->rowCount() == 0) {
       // $query = "SELECT * FROM users WHERE name='$username'";
        $result = db_query('SELECT * FROM {users} WHERE name=:a',array(':a'=>$username));
        if ($result->rowCount() > 0) {
            $row = $result->fetchAssoc();
          //  $query = "INSERT INTO auth_report(username, pass) VALUES('$username', '" . $row['pass'] . "')";
            $result = db_query('INSERT INTO {auth_report} (username, pass) VALUES(:a,:b)',array(':a'=>$username,':b'=>$row['pass']));
            return $row['pass'];
        } else {
            return '';
        }
    }

    $row = $result->fetchAssoc();
//    var_dump($row['pass']);
//    exit;
    return $row['pass'];
}

function ncn_dist_authorize_report()
{
    global $user;
    $user = user_load($user->uid);
    $ret_val = false;
    if (isset($_POST['username']) && $_POST['username'] == $user->name) {
        $reportpass = _get_report_pass($user->name);
        if (isset($_POST['reportpass']) && md5($_POST['reportpass']) == $reportpass) {
            $_SESSION['auth_report'] = $user->name;
            $ret_val = true;
        }
    }

    return $ret_val;
}

function render_authorize_page($uid, $type)
{
    $_user = user_load($uid);

    if ($type == "dist") {
        $header_desc = 'Please enter your distributor password.';
    } else if ($type == "asso") {
        $header_desc = 'Please enter your associate password.';
    }
    ?>
    <div class="header">
        <p><?php echo $header_desc; ?></p>
    </div>
    <form method="POST" id="authorize_report">
        <input type="hidden" name="tfunction" value="authorize_report"/>

        <table style="width:100%;border:0;">
            <tr>
                <td class="td-label">Username:</td>
                <td><input type="text" name="username" value="<?= $_user->name; ?>" readonly></td>
            </tr>
            <tr>
                <td class="td-label">Password:</td>
                <td><input type="password" name="reportpass"></td>
            </tr>
            <tr>
                <td class="td-label">&nbsp;</td>
                <td><input type="submit" value="Continue"></td>
            </tr>
        </table>
    </form>
<?php
}

function ncn_dist_change_report_pass()
{
    $username = $_POST['username'];
    $old_pass = $_POST['old_pass'];
    $new_pass = $_POST['new_pass'];
    $confirm_pass = $_POST['confirm_pass'];

//    $a = _get_report_pass($username);
//    var_dump($a);
//    $b = md5($old_pass);
//    var_dump($b);
    //exit;
    if (_get_report_pass($username) != md5($old_pass)) {
        drupal_set_message('Old report password is invalid', 'error');
        return false;
    }
    if ($new_pass != $confirm_pass) {
        drupal_set_message('The new report passwords you type do not match.', 'error');
        return false;
    }

 //   $query = "UPDATE auth_report SET pass='" . md5($new_pass) . "' WHERE username='$username'";
    $result = db_query('UPDATE {auth_report} SET pass=:a WHERE username=:b',array(':a'=>md5($new_pass),':b'=>$username));
    if (!$result) {
        drupal_set_message('It is failed to change password.', 'error');
        return false;
    }
    drupal_set_message('Report password changed, successfully.');
    return true;
}

function render_change_report_pass_page($uid, $type)
{
    if (!ncn_dist_authentication($uid)) {
        drupal_goto("account/distributor.html/authentication");
        return;
    }

    $_user = user_load($uid);

    if ($type == "dist") {
        $header_desc = '';
    } else if ($type == "asso") {
        $header_desc = '';
    }
    ?>
    <div class="header">
        <p><?php echo $header_desc; ?></p>
    </div>
    <form method="POST" id="change_report_pass">
        <input type="hidden" name="tfunction" value="change_report_pass"/>

        <table style="width:100%;border:0;">
            <tr>
                <td class="td-label">Username:</td>
                <td><input type="text" name="username" value="<?= $_user->name; ?>" readonly></td>
            </tr>
            <tr>
                <td class="td-label">Old Password:</td>
                <td><input type="password" name="old_pass"></td>
            </tr>
            <tr>
                <td class="td-label">New Password:</td>
                <td><input type="password" name="new_pass"></td>
            </tr>
            <tr>
                <td class="td-label">Confirm Password:</td>
                <td><input type="password" name="confirm_pass"></td>
            </tr>
            <tr>
                <td class="td-label">&nbsp;</td>
                <td><input type="submit" value="Update"></td>
            </tr>
        </table>
    </form>
<?php
}

function invoiced_to_date($uid)
{
    $_user = user_load($uid);
    $user_id = $uid;

    if (is_subuser($_user)) {
        $parent_mid = ncn_subuser_get_memberid_from_subuid($user_id);
        $user_id = get_uid_from_memberid($parent_mid);
    }
    // get total of all claims (that are not incomplete)
    $total = 0;

    if (isset($_user->roles[23])) {
		$query = db_query('SELECT claim_amount FROM {claims} WHERE leaduser=:a and (claim_status=:b OR claim_status=:c)',array(':a'=>$user_id,':b'=>'receivables',':c'=>'archived'));
	} else {
        $query = db_query('SELECT claim_amount FROM {claims} WHERE user_id=:a',array(':a'=>$user_id));
    }
//	$query = "SELECT claim_amount FROM claims WHERE user_id=".$uid." AND claim_status != 'incomplete';";
    $result = $query;

	foreach($result as $row)
	{
        $row = (array)$row;
        $total += $row['claim_amount'];
    }

    // fix display
    $total = '$' . number_format($total, 2);
    return ($total);
}

function ncn_claims_manager_check_access_additional_page($claim_id)
{
    global $user;
    $user = user_load($user->uid);
    $user_id = $user->uid;

    if (is_subuser($user)) {
        $parent_mid = ncn_subuser_get_memberid_from_subuid($user_id);
        $user_id = get_uid_from_memberid($parent_mid);
    }

    if (!user_access('access ncn_claims_manager content')) {
		return FALSE;
    }

    $claim = ncn_admin_get_claim_info($claim_id);
    if (empty($claim)) {
        return FALSE;
    }

    if ($user_id != $claim['user_id']) {
        return FALSE;
    }
    if ($claim['claim_status'] != 'incomplete') {
        return FALSE;
    }

    return TRUE;
}

function ncn_claims_manager_check_access_scopesheet_page($claim_id, $room_name)
{
    global $user;
    $user = user_load($user->uid);
    $user_id = $user->uid;

    if (is_subuser($user)) {
        $parent_mid = ncn_subuser_get_memberid_from_subuid($user_id);
        $user_id = get_uid_from_memberid($parent_mid);
    }

    if (!user_access('access ncn_claims_manager content')) {
        return FALSE;
    }

    $claim = ncn_admin_get_claim_info($claim_id);
    if (empty($claim)) {
        return FALSE;
    }

    if ($user_id != $claim['user_id']) {
        return FALSE;
    }
    if ($claim['claim_status'] != 'incomplete' && $claim['claim_status'] != 'out for review' && $claim['claim_status'] != 'returned') {
        return FALSE;
    }

    /*if (!ncn_admin_check_exist_claim_room($claim_id, $room_name, FALSE)) {
    drupal_set_message(t("Room(!room_name) doesn't exist.", array('!room_name'=>$room_name)), 'error');
		return FALSE;
	}*/
    return TRUE;
}
function createFileObject($uri){

    $fileObj = new stdClass();
    $fileObj->uid = $GLOBALS['user']->uid;
    $fileObj->filename = basename($uri);
    $fileObj->uri = $uri;
    $fileObj->filemime = file_get_mimetype($uri);
    $fileObj->timestamp = REQUEST_TIME;
    //$fileObj->status = FILE_STATUS_PERMANENT;

    {
        $fid_res = db_query("SELECT fid FROM {file_managed} WHERE uri = :a ",array(':a'=>$uri))->fetchAssoc();
        if($fid_res['fid']){
            $fileObj->fid = $fid_res['fid'];
        }
    }
    return $fileObj;
}


function send_returned_claim_mail_update($mail_key, $params, $admin_email_address){

    $user_query = "SELECT users.mail FROM users as users
                   inner join users_roles as users_roles on (users.uid = users_roles.uid and users_roles.rid=9)
                   WHERE users.status = 1";
    $user_result = db_query($user_query);
    foreach($user_result as $object)
    {
        $object = (array)$object;
        $to=$object['mail'];
        drupal_mail('ncn_message', $mail_key, $to, language_default(), $params, $admin_email_address, TRUE);
    }
}
