<?php

//------------------------------------------------------------------------------
// define the page url's
function ncn_create_claim_menu()
{
    $menu = array();
    $menu['account/create-new-claim.html'] = array(
        'title' => variable_get('site_name', 'Claim Process Form'),
        'page callback' => 'ncn_create_claim_page',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $menu['account/roomtab'] = array(
        'page callback' => 'ncn_create_claim_roomtab',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $menu['account/deleteroomtab'] = array(
        'page callback' => 'ncn_create_claim_deleteroomtab',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $menu['account/renameroomtab'] = array(
        'page callback' => 'ncn_create_claim_renameroomtab',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $menu['account/addroomtab'] = array(
        'page callback' => 'ncn_create_claim_addroomtab',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $menu['account/upload_room_image'] = array(
        'page callback' => 'ncn_create_claim_upload_roomimage',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );

    $menu['account/download_create_pdf'] = array(
        'page callback' => 'ncn_download_create_pdf',
        'access arguments' => array('access content'),
        'type' => MENU_CALLBACK,
    );
    $menu['ajax/ncn_create_claim/get_claim_invoice'] = array(
        'page callback' => 'ncn_create_claim_display_price',
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );

    $menu['ajax/ncn_create_claim/remove_photo/%'] = array(
        'page callback' => 'ncn_create_claim_remove_photo',
        'page arguments' => array(3),
        'type' => MENU_CALLBACK,
        'access arguments' => array('access content'),
    );

    return $menu;
}

//------------------------------------------------------------------------------
function ncn_download_create_pdf()
{

    $filename = drupal_get_path('module', 'ncn_create_claim') . "/pdfs/" . arg(2);

    header('Content-type: application/pdf');

    header('Content-Disposition: attachment; filename="' . arg(2) . '"');

    readfile($filename);
    exit;
}

//------------------------------------------------------------------------------
function ncn_create_claim_upload_roomimage()
{
	// check status
	//    $file = $_FILES['file'];
	$file = array();
	//print_r($_FILES);die;
	//	print "|error|";
	//	echo "<pre>";
	//	print_r($_FILES);
	//	echo "</pre>";
	//	exit;
    $claim_id = intval(arg(2));
    $url = "sites/default/files/user_files/$claim_id";
    if (!is_dir($url)) {
        mkdir($url, 0775);
    }

    $special_chars = array('#', '%', '&');
    $filename = preg_replace("/[^a-zA-Z0-9\s\.]/", "_", basename($_FILES['files']['name']['file']));

    $validTypeArr = array("image/jpeg", "image/jpg", "image/pjpeg", "image/gif", "image/png");

    if (in_array($_FILES['files']['type']['file'], $validTypeArr) || strtolower(substr($filename, -4)) == ".bmp") {
//        $res = file_move($file['tmp_name'], "sites/default/files/user_files/$claim_id/" . $filename, FILE_EXISTS_RENAME);
      $resOfFile = file_save_upload('file', array(), "public://user_files/".$claim_id, FILE_EXISTS_RENAME);

      if($resOfFile){
        $teURI = @explode('/', $resOfFile->uri);
        $filename = $teURI[count($teURI) - 1];
        $input_file = "sites/default/files/user_files/$claim_id/" . $filename;
        $quality = 70;
        $o_file = new stdClass();
        $o_file->filepath = $input_file;
        $o_file->filename = $filename;
        $o_file->filemime = "image/bmp";

        if (strtolower(substr($filename, -4)) == ".bmp") {
          $old_filepath = $o_file->filepath;
          $result_convert = convert_bmp_to_jpg($o_file);
          file_delete($old_filepath);
          if ($result_convert === FALSE) {
            $result['flag'] = 'error4';
            $result['msg'] = "Failed to convert uploaded bmp file to png file. ($roomname)";
          } else {
            $r_file = $result_convert;
            $input_file = "sites/default/files/user_files/$claim_id/" . $r_file->filename;
            drupal_set_message($r_file->filename);
          }
        }


        if (file_exists($input_file)) {
          $file['tmp_name'] = $input_file;

          $img_file = $input_file;
          $info = getimagesize($img_file);

          $img_info = array(
            'width' => $info[0],
            'height' => $info[1],
            'bits' => $info['bits'],
            'mime' => $info['mime']
          );

          $mime = $img_info['mime'];

          if ($mime == 'image/gif') {
            $image = imagecreatefromgif($img_file);
          } elseif ($mime == 'image/png') {
            $image = imagecreatefrompng($img_file);
          } elseif ($mime == 'image/jpeg' || $mime == 'image/jpg') {
            $image = imagecreatefromjpeg($img_file);
          }

          $info = pathinfo($img_file);
          $extension = strtolower($info['extension']);

          if ($extension == 'jpeg' || $extension == 'jpg') {
            imagejpeg($image, $img_file, $quality);
          } elseif ($extension == 'png') {
            imagepng($image, $img_file, 0);
          } elseif ($extension == 'gif') {
            imagegif($image, $img_file);
          }

          imagedestroy($image);
        }

        print "|success|";
        //print $GLOBALS['base_url'] . "/" . str_replace("default/files/", "default/files/imagecache/image_tab_upload/", $file['tmp_name']);
		print image_style_url('image_tab_upload',$resOfFile->uri);
        print "|" . $_POST['image_id'] . "|";
        //print $GLOBALS['base_url'] . "/" . str_replace("default/files/", "default/files/imagecache/photo_album/", $file['tmp_name']);
		print image_style_url('photo_album',$resOfFile->uri);
        print "|";
      }

    } else {
        print '|error|That is not a valid image file type|';
        return;
    }

    // now we save the image in the ['claim'] session
    $item_name = $_POST['image_id'];

    $_SESSION['claim'][$claim_id]["scope"][arg(3)][$item_name] = array(
        'type' => 'image',
        'filename' => basename($file['tmp_name']), /****/
        'path' => "public://user_files/".$claim_id."/".basename($file['tmp_name']), //"sites/default/files/user_files/$claim_id/" . basename($file['tmp_name']), /***/
        'weight' => 100,
        'resize_image_path' => $resOfFile,
		//str_replace('default/files/', "default/files/imagecache/photo_album/", $file['tmp_name']), // added by ***
    );

    global $user;
    $_SESSION['claim_log'][$claim_id] .= t("!user_name added a photo into the room(!roomname).", array('!user_name' => ncn_amin_get_user_role_and_name($user->uid), '!roomname' => arg(3)));
    $_SESSION['claim_log'][$claim_id] .= "\r\n";
}

//------------------------------------------------------------------------------
function ncn_create_claim_deleteroomtab()
{
    $claim_id = arg(2);
    // get room name
    $room_name = preg_replace("/[^a-zA-Z0-9\s]/", "", $_REQUEST['room_name']);

    // clear the page
    unset($_SESSION['claim'][$claim_id]['scope'][$room_name]);
    $_SESSION['claim_log'][$claim_id] .= t("!user_name remove a room(!roomname).", array('!user_name' => ncn_amin_get_user_role_and_name(), '!roomname' => $room_name));
    $_SESSION['claim_log'][$claim_id] .= "\r\n";
    // success
    echo $room_name;
    exit;
}

//------------------------------------------------------------------------------
function ncn_create_claim_renameroomtab()
{
    $claim_id = arg(2);
    $old_room_name = preg_replace("/[^a-zA-Z0-9\s]/", "", $_REQUEST['room_name']);
    $new_room_name = trim(preg_replace("/[^a-zA-Z0-9\s]/", "", $_REQUEST['new_name']));

    $j_result['code'] = 'success';
    $j_result['msg'] = '';
    if ($old_room_name == $new_room_name) {
        $j_result['code'] = 'NCN-CREATE-CLAIM-10011-SAME-ROOMNAME';
        $j_result['msg'] = '';
    } else if ($old_room_name != $new_room_name && isset($_SESSION['claim'][$claim_id]['scope'][$new_room_name])) {
        $j_result['code'] = 'NCN-CREATE-CLAIM-10012-DUPLICATED-ROOMNAME';
        $j_result['msg'] = t('Roomname(!roomname) is duplicated,', array('!roomname' => $new_room_name));
    } else {
        // clear the page
        $j_result['new_roomname'] = $new_room_name;
        $_SESSION['claim'][$claim_id]['scope'][$new_room_name] = $_SESSION['claim'][$claim_id]['scope'][$old_room_name];
        unset($_SESSION['claim'][$claim_id]['scope'][$old_room_name]);
        $_SESSION['claim_log'][$claim_id] .= t("!user_name rename a room(!roomname) to !new_roomname.", array('!user_name' => ncn_amin_get_user_role_and_name(), '!roomname' => $old_room_name, '!new_roomname' => $new_room_name));
        $_SESSION['claim_log'][$claim_id] .= "\r\n";

        //* queue rename actions
        if (!isset($_SESSION['claim_room_rename_actions'][$claim_id])) {
            $_SESSION['claim_room_rename_actions'][$claim_id] = array();
        }
        $_SESSION['claim_room_rename_actions'][$claim_id][] = array('old_name' => $old_room_name, 'new_name' => $new_room_name);
    }

    echo json_encode($j_result);

}

function ncn_create_claim_addroomtab()
{
    $claim_id = arg(2);
    $room_name = preg_replace("/[^a-zA-Z0-9\s]/", "", $_REQUEST['room_name']);
    $room_name = trim($room_name);

    $j_result['code'] = 'success';
    $j_result['msg'] = '';
    if (isset($_SESSION['claim'][$claim_id]['scope'][$room_name])) {
        $j_result['code'] = 'NCN-CREATE-CLAIM-10011-DUPLICATED-ROOMNAME';
        $j_result['msg'] = t('Roomname(!roomname) is duplicated.', array('!roomname' => $room_name));
    } else {
        $j_result['new_roomname'] = $room_name;
        $_SESSION['claim'][$claim_id]['scope'][$room_name] = array();

        $_SESSION['claim_log'][$claim_id] .= t("!user_name add a room(!roomname).", array('!user_name' => ncn_amin_get_user_role_and_name(), '!roomname' => $room_name));
        $_SESSION['claim_log'][$claim_id] .= "\r\n";
    }

    echo json_encode($j_result);
}

//------------------------------------------------------------------------------
// ajax function for loading certain rooms
function ncn_create_claim_roomtab()
{
    $claim_id = arg(2);
    $room_name = preg_replace("/[^a-zA-Z0-9\s]/", "", arg(3));
    $tab_index = arg(4);
    if (!$tab_index) {
        $tab_index = 1;
    }
    //$claim_id = $_SESSION['claim']['#data']['claim_id'];

    $default_name = preg_replace("/[^a-zA-Z0-9\s]/", "", $_SESSION['claim'][$claim_id]['customer_name']['val']);

    // default
    if ($default_name == $room_name) {
        $pic_count = 3;
        $pic_desc = array(
            0 => "Front of House",
            1 => "Cause of Origin",
            2 => "Driver's License",
        );

        $img_desc = array(
            0 => "fronhouse.png",
            1 => "origin.png",
            2 => "license.png",
        );
    } else {
        $pic_count = 6;
        $pic_desc = array();
        $img_desc = array();
    }

    // get room files data
    $fdata = array();
    $c = 0;

    // get the room id from the arg
    for ($i = 0; $i < $pic_count; $i++) {
        // image
        if (isset($img_desc[$i])) {
            $img_fname = $img_desc[$i];
        } else {
            $img_fname = "blank" . ($i + 1) . ".png";
        }

        // define defaults
        $image_id = "image" . $i;
        $img_src = $GLOBALS['base_url'] . "/" . drupal_get_path('module', 'ncn_create_claim') . "/images/" . $img_fname;
        $img_src_hidden = $GLOBALS['base_url'] . "/" . drupal_get_path('module', 'ncn_create_claim') . "/images/" . $img_fname;

        $file_value = '';

        if (isset($_SESSION['claim'][$claim_id]['scope'][$room_name][$image_id])) {
            
			/*$img_src = $GLOBALS['base_url'] . "/" . $_SESSION['claim'][$claim_id]['scope'][$room_name][$image_id]['path'];
            $img_src = str_replace('default/files/', "default/files/imagecache/image_tab_upload/", $img_src);*/
			
			/*$img_src_hidden = $GLOBALS['base_url'] . "/" . $_SESSION['claim'][$claim_id]['scope'][$room_name][$image_id]['path'];
            $img_src_hidden = str_replace('default/files/', "default/files/imagecache/photo_album/", $img_src_hidden);*/

			$img_path = str_replace('sites/default/files/', 'public://',$_SESSION['claim'][$claim_id]['scope'][$room_name][$image_id]['path']);
			$img_src = image_style_url('image_tab_upload',$img_path);
			$img_src_hidden = image_style_url('photo_album',$img_path);

            $file_value = $_SESSION['claim'][$claim_id]['scope'][$room_name][$image_id]['filename'];
        }

        ?>
        <form method="POST" class="ar_form" enctype="multipart/form-data"
              action="<?= base_path() ?>account/upload_room_image/<?= "$claim_id/$room_name"; ?>" id="newHotnessForm">
            <input type="hidden" name="image_id" value="<?= $image_id; ?>">

            <div class="ar_upload_wrapper ar_imb_box_<?= $image_id; ?>">
                <p><?php if (isset($pic_desc[$i])) print '<strong>' . $pic_desc[$i] . '</strong>'; ?></p>

                <div class="ar_imgbox"><img src="<?= $img_src; ?>" id="<?= $image_id; ?>"></div>
                <div class="ar_imgbox_hidden" style="display: none;"><img src="<?= $img_src_hidden; ?>"
                                                                          id="<?= $image_id; ?>_hidden"></div>

                <input type="file" name="files[file]" value="<?= $file_value; ?>">

                <input type="submit" value="Upload Photo">
                <?php if (isset($_SESSION['claim'][$claim_id]['scope'][$room_name][$image_id])): ?>
                    <!-- <input type="button" value="Remove Photo" class="remove-photo-album" onclick="removePhotoInAlbum(<?= $claim_id; ?>, '<?= $room_name; ?>', '<?= $image_id; ?>');" /> -->
                <?php endif; ?>
            </div>

        </form>
    <?php
    }

    $_url_room_scope_sheet = base_path() . "account/scope_sheet/$claim_id/" . rawurlencode($room_name) . "?from_photo_album=1";
    if ($pic_count == 6) {
        echo '<div class="ncn-room-action-panel clearfix"><span>You need to SAVE room before you can access Scope Sheet</span> &nbsp;&nbsp; <a href="' . $_url_room_scope_sheet . '" >Edit Room ScopeSheet</a></div>';
    }
}

//------------------------------------------------------------------------------
function ncn_create_claim_preprocess(&$vars)
{
}

//------------------------------------------------------------------------------
function ncn_create_claim_page()
{
    // render the form
    drupal_add_css(drupal_get_path('module', 'ncn_create_claim') . '/ncn_create_claim.css');
    drupal_add_js(drupal_get_path('module', 'ncn_create_claim') . '/ncn_create_claim.js');
    return theme('ncn_create_claim');
	//return true;

}

//------------------------------------------------------------------------------
// preprocess function for "ncn_add_room.tpl.php"
function template_preprocess_ncn_add_room(&$vars)
{
    drupal_add_css(drupal_get_path('module', 'ncn_create_claim') . '/tabs/tabs.css');
    drupal_add_js(drupal_get_path('module', 'ncn_create_claim') . '/tabs/ajax-upload.js');
    drupal_add_js(drupal_get_path('module', 'ncn_create_claim') . '/tabs/tabs.js');
}

//------------------------------------------------------------------------------
// preprocess function for "ncn_download_pdfs.tpl.php"
function template_preprocess_ncn_download_pdfs(&$vars)
{
}

//------------------------------------------------------------------------------
// preprocess function for 
function template_preprocess_ncn_claim_confirm(&$vars)
{
    global $user;
    $puser = user_load($user->uid);
    $member_type = get_member_type($puser);
    $vars['member_type'] = $member_type;
}

//------------------------------------------------------------------------------
// preprocess function 
function template_preprocess_ncn_claim_success(&$vars)
{
}


//------------------------------------------------------------------------------
// preprocess function for "ncn_create_claim.tpl.php"
function template_preprocess_ncn_create_claim(&$vars)
{
	$GLOBALS['ncn_create_claim_titles'] = array(
        'Create a New Claim',
        'Terms and Conditions',
        '',
        'Finished'
    );


    // get page num to index into
    $pagenum = (isset($_REQUEST['page']) ? $_REQUEST['page'] : 1) ;


    if (!is_numeric($pagenum)) {
        $pagenum = 1;
    }

    // run tfunction (post)
    if (isset($_POST['tfunction'])) {
        // switch the pages
        switch ($pagenum) {
            // page #1
            default:
                $pres = create_claim_page1_submit();
                break;

            // page #2
            case "2":
                $pres = create_claim_page2_submit();
                break;

            // page #3
            case "3":
                $pres = create_claim_page3_submit();
                break;

            // page #4
            case "4":
                $pres = create_claim_page4_submit();
                break;

            // page #5
            case "5":
                $pres = create_claim_page5_submit();
                break;

        }

        // there were no errors - move to next page
        if ($pres == true) {
            Header("Location:" . $GLOBALS['base_url'] . "/account/create-new-claim.html?page=" . ($pagenum + 1));
            exit;
        }
    }


    // --- draw specific pages ---
    ob_start();

    switch ($pagenum) {
        default:
            $vars['page_class'] = "create-claim-ccpage";
            create_claim_page1();
            break;

        case "2":
            $vars['page_class'] = "claim-confirm-ccpage";
            print theme('ncn_claim_confirm');
            break;

        case "3":
            create_claim_page3();
            break;

        case "4":
            if (!isset($_SESSION['claim']['scope'])) {
                $room_name = preg_replace("/[^a-zA-Z0-9\s]/", "", $_SESSION['claim']['customer_name']['val']);

                $_SESSION['claim']['scope'][$room_name] = array();
            }

            print theme('ncn_add_room', 1);
            break;

        case "5":
            print theme('ncn_download_pdfs', 1);
            break;

        case "6":
            print theme('ncn_claim_success', 1);
            break;


    }
    $vars['title'] = $GLOBALS['ncn_create_claim_titles'][$pagenum - 1];

    $vars['module_content'] = ob_get_contents();
    ob_end_clean();

    $vars['progress_list'] = ncn_create_claim_get_progress_list($pagenum - 1);

}

//------------------------------------------------------------------------------
function ncn_save_session_var($P_DATA, $item_name, $weight = -1)
{
    if (!is_array($P_DATA[$item_name])) {
        $val = trim((string)$P_DATA[$item_name]);
    } else {
        $val = $P_DATA[$item_name];
    }

    $_SESSION['claim'][$item_name] = array(
        'type' => 'textfield',
        'val' => $val,
        'weight' => $weight,
    );

}

//------------------------------------------------------------------------------
// used in "create_claim_product_title()" below...
function create_claim_product_title($nid)
{
    $node = node_load($nid);

    return ($node->title . " ($" . number_format($node->cost, 2) . ")");

}

//------------------------------------------------------------------------------
// first page in multipart form
function create_claim_page1()
{
    // reset claim session
    $_SESSION['claim'] = array();

    // draw the form
    ?>
    <form method="POST" id="create-claim-form">
        <input type="hidden" name="tfunction" value="process">
        <input type="hidden" name="page" value="1">
        <table class="create_claim_table">

            <?php fm_draw_leaduser("Internal Use Only", "lead_user", false); ?>
            <?php fm_draw_date("Date of Loss", "date_of_loss", true); ?>
            <?php fm_draw_textfield("Insured's Name", 'customer_name', false, true); ?>
            <?php fm_draw_countryfield('Country', 'insured_country', false, true); ?>
            <?php fm_draw_textfield('Address', 'insured_address', false, true); ?>
            <?php fm_draw_textfield('City', 'insured_city', false, true); ?>
            <?php fm_draw_statefield('State', 'insured_state', false, true); ?>
            <?php fm_draw_textfield('Zip Code', 'insured_zip', false, true); ?>
            <?php fm_draw_textfield("Insured's Phone Number", 'insured_phone_number', false, true); ?>
            <?php fm_draw_textfield('Technician Service Name', 'technician_service_name', false, true); ?>
            <script>
                jQuery(document).ready(function () {
                    jQuery("#fm_insured_phone_number").mask("999-999-9999");
                });
            </script>

            <tr>
                <td class="tlabel"><label>Claim Type:<font color="red">*</font> </label></td>
                <td>
					<select id="claim_type" name="claim_type">
                        <option value="">-- Choose --</option>
                        <option value="residential" <?php echo ((isset($_POST['claim_type']) && $_POST['claim_type']=='residential') ? 'selected' : '');?>>Residential</option>
                        <option value="commercial" <?php echo ((isset($_POST['claim_type']) && $_POST['claim_type']=='commercial') ? 'selected' : '');?>>Commercial</option>
                    </select>
                    &nbsp;
                    <select id="claim_product" name="claim_product">
                        <option value="">-- Choose --</option>
                        <option value="Water" <?php echo ((isset($_POST['claim_product']) && $_POST['claim_product']=='Water') ? 'selected' : '');?>>Water</option>
                        <option value="Water With Sketch" <?php echo ((isset($_POST['claim_product']) && $_POST['claim_product']=='Water With Sketch') ? 'selected' : '');?>>Water With Sketch</option>
                   <!-- <option value="Fire" <?php echo ((isset($_POST['claim_product']) && $_POST['claim_product']=='Fire') ? 'selected' : '');?>>Fire</option>
						<option value="Fire With Sketch" <?php echo ((isset($_POST['claim_product']) && $_POST['claim_product']=='Fire With Sketch') ? 'selected' : '');?>>Fire With Sketch</option>	-->
                        <option value="Fire/Smoke Contents Cleaning" <?php echo ((isset($_POST['claim_product']) && $_POST['claim_product']=='Fire/Smoke Contents Cleaning') ? 'selected' : '');?>>Contents Cleaning</option>
                        <option value="Fire/Smoke Structure Cleaning" <?php echo ((isset($_POST['claim_product']) && $_POST['claim_product']=='Fire/Smoke Structure Cleaning') ? 'selected' : '');?>>Structure Cleaning</option>
                        <option value="Mold" <?php echo ((isset($_POST['claim_product']) && $_POST['claim_product']=='Mold') ? 'selected' : '');?>>Mold</option>
                        <option value="Mold With Sketch" <?php echo ((isset($_POST['claim_product']) && $_POST['claim_product']=='Mold With Sketch') ? 'selected' : '');?>>Mold With Sketch</option>
                        <option value="Reconstruction" <?php echo ((isset($_POST['claim_product']) && $_POST['claim_product']=='Reconstruction') ? 'selected' : '');?>>Reconstruction</option>
                        <option value="Reconstruction With Sketch" <?php echo ((isset($_POST['claim_product']) && $_POST['claim_product']=='Reconstruction With Sketch') ? 'selected' : '');?>>Reconstruction With Sketch</option>
                    </select>
                    &nbsp;
                    <span id="claim_price"></span>
                    <script type="text/javascript">
                        (function ($) {
                            $(document).ready(function () {
                                $('#claim_type').bind('change', function(event){get_claim_invoice_price();});
                                $('#claim_product').bind('change', function(event){get_claim_invoice_price();});
                                $('#fm_expedite').bind('click', function(event){get_claim_invoice_expedite_price();});
                            });
                        })(jQuery);
                    </script>
                </td>

            </tr>
            <?php fm_draw_checkbox('Check this box if you would like to <b>EXPEDITE</b> your claim.<br/> Additional fee to expedite is: <span id="expedite_price"></span>', 'expedite', false, false); ?>
            <tr>
                <td>&nbsp;</td>
                <td style="padding: 10px 0px; line-height: 25px; vertical-align:middle;"><a class="create-claim-btn" href="javascript:void();" onclick="create_claim_page1()">Create a Claim</a>
                    <span style="margin-top: 2px;">&nbsp; or &nbsp;<a href="<?= $GLOBALS['base_url']; ?>/account">cancel
                </td>
                </span>
            </tr>

            <tr>
                <td colspan=2>
                    <div class="note">
                        <strong>Please Note:</strong>
                        By clicking the "Create a Claim" button, a Terms and Conditions Agreement will appear.<br/>
                        To save this file you must first read and then click the "I Agree" button. At that time your
                        credit card will be charged and processed for the agreed fee schedule for this claim file. If
                        you select the "cancel" button, the claim will be deleted.
                    </div>
                </td>
            </tr>
        </table>
    </form>
<?php

}

/**
0: Golden Member, 1: Silver Member, 5: CSI Member
Others : 0;
 */
function get_member_type($user)
{
    if(isset($user->profile_memberid))
	{
//		$query2 = "SELECT * FROM member_id_pool WHERE member_id=\"" . AddSlashes($user->profile_memberid) . "\";";
		$result2 = db_query('SELECT member_type FROM {member_id_pool} WHERE member_id=:a',array(':a'=>$user->profile_memberid));

        if ($result2->rowCount() > 0) {
            $member = $result2->fetchAssoc();
            return $member['member_type'];
        }
        return 0;
}
}
//------------------------------------------------------------------------------
// first sybmit in multipart form
function create_claim_page1_submit($P_DATA = array())
{

    if (empty($P_DATA)) {
        $P_DATA = $_POST;
    }

	// check for errors
    /*if ($P_DATA['lead_user'] == '') {
        drupal_set_message("Please select Lead user", 'error');
        return FALSE;
    }*/
    if ($P_DATA['date_of_loss'][0] == '' || $P_DATA['date_of_loss'][1] == '' || $P_DATA['date_of_loss'][2] == '') {
        drupal_set_message("Please input Date of Loss", 'error');
        return FALSE;
    }

    $P_DATA['customer_name'] = ncn_admin_remove_special_char_from_customer_name($P_DATA['customer_name']);

	if (strlen($P_DATA['customer_name']) < 5) {
        drupal_set_message("Insured's Name must be at least 5 characters", 'error');
        return FALSE;
    }

    if (strlen($P_DATA['insured_address']) < 8) {
        drupal_set_message("Insured's Address must be at least 8 characters", 'error');
        return FALSE;
    }

    if (strlen($P_DATA['insured_city']) < 3) {
        drupal_set_message("Insured's City must be at least 3 characters", 'error');
        return FALSE;
    }

    if (strlen($P_DATA['insured_state']) < 2) {
        drupal_set_message("Insured's State must be at least 2 characters", 'error');
        return FALSE;
    }

    if (strlen($P_DATA['insured_zip']) < 5) {
        drupal_set_message("Insured's Zip code must be at least 5 characters", 'error');
        return FALSE;
    }

    if (strlen($P_DATA['insured_phone_number']) < 10) {
        drupal_set_message("Insured's Phone Number is not valid.", 'error');
        return FALSE;
    }

    /*if (strlen($P_DATA['technician_service_name']) < 5) {
        drupal_set_message("Technician service name must be at least 5 characters", 'error');
        return FALSE;
    }*/

    if ($P_DATA['claim_type'] == '') {
        drupal_set_message("You did not select residential/commercial", 'error');
        return FALSE;
    }

    if ($P_DATA['claim_product'] == '') {
        drupal_set_message("You did not select product", 'error');
        return FALSE;
    }

    /*if (!is_numeric($P_DATA['product_id']))
    {	drupal_set_message("You did not select residential/commercial", 'error');return FALSE;	}*/


	GLOBAL $user;
    $user = user_load($user->uid);
    $user_id = $user->uid;

    if (is_subuser($user)) {
        $parent_mid = ncn_subuser_get_memberid_from_subuid($user_id);
        $user_id = get_uid_from_memberid($parent_mid);
    }

    $puser = user_load($user_id);
    $member_type = get_member_type($puser);


    $product_id = ncn_create_claim_get_product_id($member_type, $P_DATA['claim_type'], $P_DATA['claim_product']);
    if ($product_id == 0) {
        drupal_set_message("When creating a claim, charging has an error of unknown product", 'error');
        return FALSE;
    }

    $_SESSION['claim_type'] = $P_DATA['claim_type'];
    $_SESSION['claim_product'] = $P_DATA['claim_product'];
    $_SESSION['product_id'] = $product_id;
    $_SESSION['lead_user'] = $P_DATA['lead_user'];

    ncn_save_session_var($P_DATA, 'lead_user', 0);
    ncn_save_session_var($P_DATA, 'date_of_loss', 0);
    ncn_save_session_var($P_DATA, 'customer_name', 0);
    ncn_save_session_var($P_DATA, 'insured_country', 0);
    ncn_save_session_var($P_DATA, 'insured_address', 0);
    ncn_save_session_var($P_DATA, 'insured_city', 0);
    ncn_save_session_var($P_DATA, 'insured_state', 0);
    ncn_save_session_var($P_DATA, 'insured_zip', 0);
    ncn_save_session_var($P_DATA, 'insured_phone_number', 0);
    ncn_save_session_var($P_DATA, 'technician_service_name', 0);
    ncn_save_session_var($P_DATA, 'product_type', 0);

    ncn_save_session_var($P_DATA, 'expedite', 0);
    return TRUE;
}

/**
 * Get Product ID from Claim Type and Claim Product (When Creating a Claim)
 * static setting
 */

function ncn_create_claim_get_product_id_NEW($member_type, $claim_type, $claim_product)
{
    $product_id = 0;
    $claim_type = strtolower($claim_type);
    $claim_product = strtolower($claim_product);
    // Gold Member
    if ($member_type == 0) {
        if ($claim_type == 'residential') {
            if ($claim_product == 'water') {
                $product_id = 52; //$product_id = 18;
            } // RC-G-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 80; //$product_id = 69;
            } // RC-G-WATER-WS
            else if ($claim_product == 'fire') {
                $product_id = 69; //$product_id = 58;
            } // RC-G-FIRE
            else if ($claim_product == 'fire with sketch') {
                $product_id = 82; //$product_id = 71;
            } // RC-G-FIRE-WS
            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 97; //$product_id = 94;
            } // RC-G-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 98; //$product_id = 95;
            } // RC-G-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 97; //$product_id = 94;
            } // RC-G-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 98; //$product_id = 95;
            } // RC-G-FIRE-SSC
            else if ($claim_product == 'mold') {
                $product_id = 71; //$product_id = 60;
            } // RC-G-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 84; //$product_id = 73;
            } // RC-G-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 66; //$product_id = 53;
            } // RC-G-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 86; //$product_id = 75;
            } // RC-G-RECON-WS
        }
        else if ($claim_type == 'commercial') {
            if ($claim_product == 'water') {
                $product_id = 53; //$product_id = 30;
            } // CC-G-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 81; //$product_id = 70;
            } // CC-G-WATER-WS
            else if ($claim_product == 'fire') {
                $product_id = 70; //$product_id = 59;
            } // CC-G-FIRE
            else if ($claim_product == 'fire with sketch') {
                $product_id = 83; //$product_id = 72;
            } // CC-G-FIRE-WS
            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 101; //$product_id = 98;
            } // CC-G-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 102; //$product_id = 99;
            } // CC-G-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 101; //$product_id = 98;
            } // CC-G-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 102; //$product_id = 99;
            } // CC-G-FIRE-SSC
            else if ($claim_product == 'mold') {
                $product_id = 72; //$product_id = 61;
            } // CC-G-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 85; //$product_id = 74;
            } // CC-G-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 73; //$product_id = 62;
            } // CC-G-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 87; //$product_id = 76;
            } // CC-G-RECON-WS
        }
    } // CSI Member
    else if ($member_type == 5) {
        if ($claim_type == 'residential') {
            if ($claim_product == 'water') {
                $product_id = 52; //$product_id = 18;
            } // RC-S-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 80; //$product_id = 69;
            } // RC-S-WATER-WS
            else if ($claim_product == 'fire') {
                $product_id = 69; //$product_id = 58;
            } // RC-S-FIRE
            else if ($claim_product == 'fire with sketch') {
                $product_id = 82; //$product_id = 71;
            } // RC-S-FIRE-WS
            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 97; //$product_id = 94;
            } // RC-G-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 98; //$product_id = 95;
            } // RC-G-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 97; //$product_id = 94;
            } // RC-G-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 98; //$product_id = 95;
            } // RC-G-FIRE-SSC
            else if ($claim_product == 'mold') {
                $product_id = 71; //$product_id = 60;
            } // RC-G-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 84; //$product_id = 73;
            } // RC-G-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 66; //$product_id = 53;
            } // RC-G-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 86; //$product_id = 75;
            } // RC-G-RECON-WS
        }
        else if ($claim_type == 'commercial') {
            if ($claim_product == 'water') {
                $product_id = 53; //$product_id = 30;
            } // CC-G-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 81; //$product_id = 70;
            } // CC-G-WATER-WS
            else if ($claim_product == 'fire') {
                $product_id = 70; //$product_id = 59;
            } // CC-G-FIRE
            else if ($claim_product == 'fire with sketch') {
                $product_id = 83; //$product_id = 72;
            } // CC-G-FIRE-WS
            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 101; //$product_id = 98;
            } // CC-G-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 102; //$product_id = 99;
            } // CC-G-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 101; //$product_id = 98;
            } // CC-G-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 102; //$product_id = 99;
            } // CC-G-FIRE-SSC
            else if ($claim_product == 'mold') {
                $product_id = 72; //$product_id = 61;
            } // CC-S-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 85; //$product_id = 74;
            } // CC-S-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 73; //$product_id = 62;
            } // CC-S-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 87; //$product_id = 76;
            } // CC-S-RECON-WS
        }
    } // Silver Member
    else if ($member_type == 1) {
        if ($claim_type == 'residential') {
            if ($claim_product == 'water') {
                $product_id = 62; //$product_id = 45;
            } // RC-S-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 88; //$product_id = 77;
            } // RC-S-WATER-WS
            else if ($claim_product == 'fire') {
                $product_id = 74; //$product_id = 63;
            } // RC-S-FIRE
            else if ($claim_product == 'fire with sketch') {
                $product_id = 90; //$product_id = 79;
            } // RC-S-FIRE-WS
            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 99; //$product_id = 96;
            } // RC-S-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 100; //$product_id = 97;
            } // RC-S-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 99; //$product_id = 96;
            } // RC-S-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 100; //$product_id = 97;
            } // RC-S-FIRE-SSC
            else if ($claim_product == 'mold') {
                $product_id = 76; //$product_id = 65;
            } // RC-S-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 92; //$product_id = 81;
            } // RC-S-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 78; //$product_id = 67;
            } // RC-S-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 94; //$product_id = 83;
            } // RC-S-RECON-WS
        }
        else if ($claim_type == 'commercial') {
            if ($claim_product == 'water') {
                $product_id = 63; //$product_id = 46;
            } // CC-S-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 89; //$product_id = 78;
            } // CC-S-WATER-WS
            else if ($claim_product == 'fire') {
                $product_id = 75; //$product_id = 64;
            } // CC-S-FIRE
            else if ($claim_product == 'fire with sketch') {
                $product_id = 91; //$product_id = 80;
            } // CC-S-FIRE-WS
            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 103; //$product_id = 100;
            } // CC-G-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 104; //$product_id = 101;
            } // CC-G-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 103; //$product_id = 100;
            } // CC-G-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 104; //$product_id = 101;
            } // CC-G-FIRE-SSC
            else if ($claim_product == 'mold') {
                $product_id = 77; //$product_id = 66;
            } // CC-S-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 93; //$product_id = 82;
            } // CC-S-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 67; //$product_id = 54;
            } // CC-S-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 95; //$product_id = 84;
            } // CC-S-RECON-WS
        }
    }
    else if ($member_type == 2) { // Gold Lite
        if ($claim_type == 'residential') {
            if ($claim_product == 'water') {
                $product_id = 106; //$product_id = 103;
            } // RC-GL-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 114; //$product_id = 111;
            } // RC-GL-WATER-WS
            //			else if ($claim_product == 'fire') 				{ $product_id = 69; //$product_id = 58;	}	// RC-GL-FIRE
            //			else if ($claim_product == 'fire with sketch') 	{ $product_id = 82; //$product_id = 71;	}	// RC-GL-FIRE-WS
            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 108; //$product_id = 105;
            } // RC-GL-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 116; //$product_id = 113;
            } // RC-GL-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 108; //$product_id = 105;
            } // RC-GL-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 116; //$product_id = 113;
            } // RC-GL-FIRE-SSC
            else if ($claim_product == 'mold') {
                $product_id = 110; //$product_id = 107;
            } // RC-GL-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 118; //$product_id = 115;
            } // RC-GL-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 112; //$product_id = 109;
            } // RC-GL-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 120; //$product_id = 117;
            } // RC-GL-RECON-WS
        }
        else if ($claim_type == 'commercial') {
            if ($claim_product == 'water') {
                $product_id = 107; //$product_id = 104;
            } // CC-GL-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 115; //$product_id = 112;
            } // CC-GL-WATER-WS
            //			else if ($claim_product == 'fire') 				{ $product_id = 70; //$product_id = 59;	}	// CC-GL-FIRE
            //			else if ($claim_product == 'fire with sketch') 	{ $product_id = 83; //$product_id = 72;	}	// CC-GL-FIRE-WS
            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 109; //$product_id = 106;
            } // CC-GL-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 117; //$product_id = 114;
            } // CC-GL-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 109; //$product_id = 106;
            } // CC-GL-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 117; //$product_id = 114;
            } // CC-GL-FIRE-SSC
            else if ($claim_product == 'mold') {
                $product_id = 111; //$product_id = 108;
            } // CC-GL-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 119; //$product_id = 116;
            } // CC-GL-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 113; //$product_id = 110;
            } // CC-GL-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 121; //$product_id = 118;
            } // CC-GL-RECON-WS
        }
    }
    else if ($member_type == 3) { // Coach on Call
        if ($claim_type == 'residential') {
            if ($claim_product == 'water') {
                $product_id = 123; //$product_id = 120;
            } // RC-COC-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 131; //$product_id = 128;
            } // RC-COC-WATER-WS
            //			else if ($claim_product == 'fire') 				{ $product_id = 69; //$product_id = 58;	}	// RC-COC-FIRE
            //			else if ($claim_product == 'fire with sketch') 	{ $product_id = 82; //$product_id = 71;	}	// RC-COC-FIRE-WS
            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 125; //$product_id = 122;
            } // RC-COC-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 133; //$product_id = 130;
            } // RC-COC-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 125; //$product_id = 122;
            } // RC-COC-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 133; //$product_id = 130;
            } // RC-COC-FIRE-SSC
            else if ($claim_product == 'mold') {
                $product_id = 127; //$product_id = 124;
            } // RC-COC-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 135; //$product_id = 132;
            } // RC-COC-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 129; //$product_id = 126;
            } // RC-COC-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 137; //$product_id = 134;
            } // RC-COC-RECON-WS
        }
        else if ($claim_type == 'commercial') {
            if ($claim_product == 'water') {
                $product_id = 124; //$product_id = 121;
            } // CC-COC-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 132; //$product_id = 129;
            } // CC-COC-WATER-WS
            //			else if ($claim_product == 'fire') 				{ $product_id = 70; //$product_id = 59;}	// CC-COC-FIRE
            //			else if ($claim_product == 'fire with sketch') 	{ $product_id = 72;	}	// CC-COC-FIRE-WS
            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 126; //$product_id = 123;
            } // CC-COC-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 134; //$product_id = 131;
            } // CC-COC-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 126; //$product_id = 123;
            } // CC-COC-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 134; //$product_id = 131;
            } // CC-COC-FIRE-SSC
            else if ($claim_product == 'mold') {
                $product_id = 128; //$product_id = 125;
            } // CC-COC-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 136; //$product_id = 133;
            } // CC-COC-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 130; //$product_id = 127;
            } // CC-COC-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 138; //$product_id = 135;
            } // CC-COC-RECON-WS
        }
    }
    else if ($member_type == 4) { // Gold Coach
        if ($claim_type == 'residential') {
            if ($claim_product == 'water') {
                $product_id = 141; //$product_id = 138;
            } // RC-GC-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 149; //$product_id = 146;
            } // RC-GC-WATER-WS
            //			else if ($claim_product == 'fire') 				{ $product_id = 69; //$product_id = 58;	}	// RC-GC-FIRE
            //			else if ($claim_product == 'fire with sketch') 	{ $product_id = 82; //$product_id = 71;	}	// RC-GC-FIRE-WS
            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 143; //$product_id = 140;
            } // RC-GC-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 151; //$product_id = 148;
            } // RC-GC-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 143; //$product_id = 140;
            } // RC-GC-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 151; //$product_id = 148;
            } // RC-GC-FIRE-SSC
            else if ($claim_product == 'mold') {
                $product_id = 145; //$product_id = 142;
            } // RC-GC-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 153; //$product_id = 150;
            } // RC-GC-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 147; //$product_id = 144;
            } // RC-GC-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 155; //$product_id = 152;
            } // RC-GC-RECON-WS
        }
        else if ($claim_type == 'commercial') {
            if ($claim_product == 'water') {
                $product_id = 142; //$product_id = 139;
            } // CC-GC-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 150; //$product_id = 147;
            } // CC-GC-WATER-WS
            //			else if ($claim_product == 'fire') 				{ $product_id = 70; //$product_id = 59;	}	// CC-GC-FIRE
            //			else if ($claim_product == 'fire with sketch') 	{ $product_id = 83; //$product_id = 72;	}	// CC-GC-FIRE-WS
            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 144; //$product_id = 141;
            } // CC-GC-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 152; //$product_id = 149;
            } // CC-GC-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 144; //$product_id = 141;
            } // CC-GC-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 152; //$product_id = 149;
            } // CC-GC-FIRE-SSC
            else if ($claim_product == 'mold') {
                $product_id = 146; //$product_id = 143;
            } // CC-GC-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 154; //$product_id = 151;
            } // CC-GC-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 148; //$product_id = 145;
            } // CC-GC-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 156; //$product_id = 153;
            } // CC-GC-RECON-WS
        }
    }
    return $product_id;
}


function ncn_create_claim_get_product_id($member_type, $claim_type, $claim_product)
{
    $product_id = 0;
    $claim_type = strtolower($claim_type);
    $claim_product = strtolower($claim_product);

    // Gold Member
    if ($member_type == 0) {
        if ($claim_type == 'residential') {
            if ($claim_product == 'water') {
                $product_id = 18;
            } // RC-G-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 69;
            } // RC-G-WATER-WS
            else if ($claim_product == 'fire') {
                $product_id = 58;
            } // RC-G-FIRE
            else if ($claim_product == 'fire with sketch') {
                $product_id = 71;
            } // RC-G-FIRE-WS

            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 94;
            } // RC-G-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 95;
            } // RC-G-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 94;
            } // RC-G-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 95;
            } // RC-G-FIRE-SSC

            else if ($claim_product == 'mold') {
                $product_id = 60;
            } // RC-G-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 73;
            } // RC-G-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 53;
            } // RC-G-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 75;
            } // RC-G-RECON-WS
        } else if ($claim_type == 'commercial') {
            if ($claim_product == 'water') {
                $product_id = 30;
            } // CC-G-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 70;
            } // CC-G-WATER-WS
            else if ($claim_product == 'fire') {
                $product_id = 59;
            } // CC-G-FIRE
            else if ($claim_product == 'fire with sketch') {
                $product_id = 72;
            } // CC-G-FIRE-WS

            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 98;
            } // CC-G-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 99;
            } // CC-G-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 98;
            } // CC-G-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 99;
            } // CC-G-FIRE-SSC

            else if ($claim_product == 'mold') {
                $product_id = 61;
            } // CC-G-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 74;
            } // CC-G-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 62;
            } // CC-G-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 76;
            } // CC-G-RECON-WS
        }
    } // CSI Member
    else if ($member_type == 5) {
        if ($claim_type == 'residential') {
            if ($claim_product == 'water') {
                $product_id = 18;
            } // RC-S-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 69;
            } // RC-S-WATER-WS
            else if ($claim_product == 'fire') {
                $product_id = 58;
            } // RC-S-FIRE
            else if ($claim_product == 'fire with sketch') {
                $product_id = 71;
            } // RC-S-FIRE-WS

            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 94;
            } // RC-G-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 95;
            } // RC-G-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 94;
            } // RC-G-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 95;
            } // RC-G-FIRE-SSC

            else if ($claim_product == 'mold') {
                $product_id = 60;
            } // RC-G-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 73;
            } // RC-G-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 53;
            } // RC-G-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 75;
            } // RC-G-RECON-WS
        } else if ($claim_type == 'commercial') {
            if ($claim_product == 'water') {
                $product_id = 30;
            } // CC-G-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 70;
            } // CC-G-WATER-WS
            else if ($claim_product == 'fire') {
                $product_id = 59;
            } // CC-G-FIRE
            else if ($claim_product == 'fire with sketch') {
                $product_id = 72;
            } // CC-G-FIRE-WS

            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 98;
            } // CC-G-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 99;
            } // CC-G-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 98;
            } // CC-G-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 99;
            } // CC-G-FIRE-SSC

            else if ($claim_product == 'mold') {
                $product_id = 61;
            } // CC-S-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 74;
            } // CC-S-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 62;
            } // CC-S-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 76;
            } // CC-S-RECON-WS
        }
    } // Silver Member
    else if ($member_type == 1) {
        if ($claim_type == 'residential') {
            if ($claim_product == 'water') {
                $product_id = 45;
            } // RC-S-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 77;
            } // RC-S-WATER-WS
            else if ($claim_product == 'fire') {
                $product_id = 63;
            } // RC-S-FIRE
            else if ($claim_product == 'fire with sketch') {
                $product_id = 79;
            } // RC-S-FIRE-WS

            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 96;
            } // RC-S-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 97;
            } // RC-S-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 96;
            } // RC-S-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 97;
            } // RC-S-FIRE-SSC

            else if ($claim_product == 'mold') {
                $product_id = 65;
            } // RC-S-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 81;
            } // RC-S-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 67;
            } // RC-S-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 83;
            } // RC-S-RECON-WS
        } else if ($claim_type == 'commercial') {
            if ($claim_product == 'water') {
                $product_id = 46;
            } // CC-S-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 78;
            } // CC-S-WATER-WS
            else if ($claim_product == 'fire') {
                $product_id = 64;
            } // CC-S-FIRE
            else if ($claim_product == 'fire with sketch') {
                $product_id = 80;
            } // CC-S-FIRE-WS

            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 100;
            } // CC-G-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 101;
            } // CC-G-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 100;
            } // CC-G-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 101;
            } // CC-G-FIRE-SSC

            else if ($claim_product == 'mold') {
                $product_id = 66;
            } // CC-S-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 82;
            } // CC-S-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 54;
            } // CC-S-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 84;
            } // CC-S-RECON-WS
        }

    }
    else if ($member_type == 2) { // Gold Lite
        if ($claim_type == 'residential') {
            if ($claim_product == 'water') {
                $product_id = 103;
            } // RC-GL-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 111;
            } // RC-GL-WATER-WS
//			else if ($claim_product == 'fire') 				{ $product_id = 58;	}	// RC-GL-FIRE
//			else if ($claim_product == 'fire with sketch') 	{ $product_id = 71;	}	// RC-GL-FIRE-WS

            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 105;
            } // RC-GL-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 113;
            } // RC-GL-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 105;
            } // RC-GL-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 113;
            } // RC-GL-FIRE-SSC

            else if ($claim_product == 'mold') {
                $product_id = 107;
            } // RC-GL-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 115;
            } // RC-GL-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 109;
            } // RC-GL-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 117;
            } // RC-GL-RECON-WS
        } else if ($claim_type == 'commercial') {
            if ($claim_product == 'water') {
                $product_id = 104;
            } // CC-GL-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 112;
            } // CC-GL-WATER-WS
//			else if ($claim_product == 'fire') 				{ $product_id = 59;	}	// CC-GL-FIRE
//			else if ($claim_product == 'fire with sketch') 	{ $product_id = 72;	}	// CC-GL-FIRE-WS

            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 106;
            } // CC-GL-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 114;
            } // CC-GL-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 106;
            } // CC-GL-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 114;
            } // CC-GL-FIRE-SSC

            else if ($claim_product == 'mold') {
                $product_id = 108;
            } // CC-GL-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 116;
            } // CC-GL-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 110;
            } // CC-GL-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 118;
            } // CC-GL-RECON-WS
        }
    }
    else if ($member_type == 3) { // Coach on Call
        if ($claim_type == 'residential') {
            if ($claim_product == 'water') {
                $product_id = 120;
            } // RC-COC-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 128;
            } // RC-COC-WATER-WS
//			else if ($claim_product == 'fire') 				{ $product_id = 58;	}	// RC-COC-FIRE
//			else if ($claim_product == 'fire with sketch') 	{ $product_id = 71;	}	// RC-COC-FIRE-WS

            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 122;
            } // RC-COC-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 130;
            } // RC-COC-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 122;
            } // RC-COC-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 130;
            } // RC-COC-FIRE-SSC

            else if ($claim_product == 'mold') {
                $product_id = 124;
            } // RC-COC-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 132;
            } // RC-COC-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 126;
            } // RC-COC-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 134;
            } // RC-COC-RECON-WS
        } else if ($claim_type == 'commercial') {
            if ($claim_product == 'water') {
                $product_id = 121;
            } // CC-COC-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 129;
            } // CC-COC-WATER-WS
//			else if ($claim_product == 'fire') 				{ $product_id = 59;	}	// CC-COC-FIRE
//			else if ($claim_product == 'fire with sketch') 	{ $product_id = 72;	}	// CC-COC-FIRE-WS

            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 123;
            } // CC-COC-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 131;
            } // CC-COC-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 123;
            } // CC-COC-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 131;
            } // CC-COC-FIRE-SSC

            else if ($claim_product == 'mold') {
                $product_id = 125;
            } // CC-COC-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 133;
            } // CC-COC-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 127;
            } // CC-COC-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 135;
            } // CC-COC-RECON-WS
        }
    }
    else if ($member_type == 4) { // Gold Coach
        if ($claim_type == 'residential') {
            if ($claim_product == 'water') {
                $product_id = 138;
            } // RC-GC-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 146;
            } // RC-GC-WATER-WS
//			else if ($claim_product == 'fire') 				{ $product_id = 58;	}	// RC-GC-FIRE
//			else if ($claim_product == 'fire with sketch') 	{ $product_id = 71;	}	// RC-GC-FIRE-WS

            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 140;
            } // RC-GC-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 148;
            } // RC-GC-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 140;
            } // RC-GC-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 148;
            } // RC-GC-FIRE-SSC

            else if ($claim_product == 'mold') {
                $product_id = 142;
            } // RC-GC-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 150;
            } // RC-GC-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 144;
            } // RC-GC-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 152;
            } // RC-GC-RECON-WS
        } else if ($claim_type == 'commercial') {
            if ($claim_product == 'water') {
                $product_id = 139;
            } // CC-GC-WATER
            else if ($claim_product == 'water with sketch') {
                $product_id = 147;
            } // CC-GC-WATER-WS
//			else if ($claim_product == 'fire') 				{ $product_id = 59;	}	// CC-GC-FIRE
//			else if ($claim_product == 'fire with sketch') 	{ $product_id = 72;	}	// CC-GC-FIRE-WS

            else if ($claim_product == 'fire/smoke contents cleaning') {
                $product_id = 141;
            } // CC-GC-FIRE-SCC
            else if ($claim_product == 'fire/smoke structure cleaning') {
                $product_id = 149;
            } // CC-GC-FIRE-SSC
            else if ($claim_product == 'contents cleaning') {
                $product_id = 141;
            } // CC-GC-FIRE-SCC
            else if ($claim_product == 'structure cleaning') {
                $product_id = 149;
            } // CC-GC-FIRE-SSC

            else if ($claim_product == 'mold') {
                $product_id = 143;
            } // CC-GC-MOLD
            else if ($claim_product == 'mold with sketch') {
                $product_id = 151;
            } // CC-GC-MOLD-WS
            else if ($claim_product == 'reconstruction') {
                $product_id = 145;
            } // CC-GC-RECON
            else if ($claim_product == 'reconstruction with sketch') {
                $product_id = 153;
            } // CC-GC-RECON-WS
        }
    }


    return $product_id;
}


/*function get_claim_type($product_id) {
	$claim_type = '';
	if ($product_id==18 || $product_id==45) {
		$claim_type = 'residential';
	} else if ($product_id==30 || $product_id==46) {
		$claim_type = 'commercial';
	} else if ($product_id==53 || $product_id==54) {
		$claim_type = 'reconstruction';
	}
	
	return $claim_type;
}*/

//------------------------------------------------------------------------------
// jump to cart from t&c
function create_claim_page2_submit()
{
    $claim_id = ncn_create_claim_create_new_claim();

    // check for expired session
    if ((!isset($_SESSION['claim'])) || (!isset($_SESSION['product_id']))) {
        drupal_set_message('Sorry, your session has expired.', 'error');
        Header("Location:1");
    }

    $claim_id = $_SESSION['claim']['id'];
    $claim_desc = $_SESSION['claim']['customer_name']['val'] . ", " . $_SESSION['claim']['property_zip']['val'];

    $url = $GLOBALS['base_url'] . "/cart/add/e-p" . $_SESSION['product_id'] . "_q1_m" . $claim_id . "_a1o" . $claim_id . "_a2o" . $claim_desc . "?destination=cart/checkout";

    Header('Location:' . $url);
    exit;

}

function ncn_create_claim_create_new_claim($redirect = TRUE)
{
    global $user;
    $user = user_load($user->uid);
    $user_id = $user->uid;

    if (is_subuser($user)) {
        $parent_mid = ncn_subuser_get_memberid_from_subuid($user_id);
        $user_id = get_uid_from_memberid($parent_mid);
    }

    $puser = user_load($user_id);

    $claim_type = $_SESSION['claim_type'];
    $claim_product = $_SESSION['claim_product'];
    $claim_lead = $_SESSION['lead_user'];


    $claim_id = ncn_save_claim(0, false, $claim_type, $claim_product, $claim_lead);

    // NCN Gold First Special
    if (ncn_admin_is_member_first_free($puser->profile_memberid) && ncn_admin_member_first_free_month_passed($puser->profile_memberid) == FALSE) {
        if (ncn_admin_get_member_first_free_claim_id($puser->profile_memberid) == 0) {
            if (ncn_admin_set_member_first_free_claim($puser->profile_memberid, $claim_id)) {
                ncn_admin_set_member_first_free_claim_product_id($claim_id, $_SESSION['product_id']);

                // same as uc_authorizenet_sim module
            //    $query = "UPDATE claims SET claim_status='incomplete' WHERE claim_id=" . $claim_id;
                $result = db_query('UPDATE {claims} SET claim_status=:a WHERE claim_id=:b',array(':a'=>incomplete,':b'=>$claim_id));
                ncn_create_claim_send_mail($claim_id);
                if ($redirect) {
                    drupal_goto("account/my-active-claims.html");
                    exit;
                } else {
                    return TRUE;
                }
            }
        }
    } // NCN Gold Member Demo
    else if (ncn_admin_is_gold_member_demo($puser->profile_memberid)) {
        ncn_admin_check_gold_member_demo_expired($puser->profile_memberid);
        if (!ncn_admin_is_gold_member_demo_expired($puser->profile_memberid)) {
            ncn_admin_insert_free_claim_for_gmd($puser->uid, $claim_id, $_SESSION['product_id']);

            ncn_admin_check_gold_member_demo_expired($puser->profile_memberid);
            // same as uc_authorizenet_sim module
//            $query = "UPDATE claims SET claim_status='incomplete' WHERE claim_id=" . $claim_id;
            $result = db_query('UPDATE {claims} SET claim_status=:a WHERE claim_id=:b',array(':a'=>incomplete,':b'=>$claim_id));
            ncn_create_claim_send_mail($claim_id);
            if ($redirect) {
                drupal_goto("account/my-active-claims.html");
                exit;
            } else {
                return TRUE;
            }
        }
    }

    return $claim_id;
}

//------------------------------------------------------------------------------
// second page in multipart form
function create_claim_page3()
{

    Header("Location:4");
    exit;

    $_POST['property_owner'] = $_SESSION['claim']['customer_name']['val'];

    // draw the form
    ?>
    <table class="create_claim_table">
    <form method="POST">
    <input type="hidden" name="tfunction" value="process">

    <?php fm_draw_textfield('Property Owner', 'property_owner', true); ?>

    <?php fm_draw_date('Date', 'claim_date', false, true); ?>

    <tr>
        <td class="style11">
            <div align="right">Time:</div>
        </td>
        <td class="style11"><select name="claim_time[]">
                <?php
                for ($i = 1; $i <= 12; $i++) {
                    ?>
                    <option value="<?= $i; ?>"><?= $i; ?></option><?php
                }
                ?>
            </select>
            <select name="claim_time[]">
                <?php
                for ($i = 0; $i < 60; $i++) {
                    ?>
                    <option value="<?= sprintf("%02d", $i) ?>"><?= sprintf("%02d", $i) ?></option><?php
                }
                ?>
            </select>
            <select name="claim_time[]">
                <option>AM</option>
                <option>PM</option>
            </select></td>
    </tr>
    <tr>
        <td class="style11">
            <div align="right"></div>
        </td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Pro<span class="style10">perty Address: </span></span></div>
        </td>
        <td><span class="style11"><span class="style10">
                <input name="property_address" type="text" value="<?= StripSlashes($_POST['property_address']) ?>"/>
              </span></span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11"><span class="style10">City: </span></span></div>
        </td>
        <td><span class="style11"><span class="style10">
                <input name="property_city" type="text" value="<?= StripSlashes($_POST['property_city']) ?>"/>
              </span></span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">State<span class="style10">: </span></span></div>
        </td>
        <td><span class="style11"><span class="style10">
                <input name="property_state" type="text" value="<?= StripSlashes($_POST['property_state']) ?>"/>
              </span></span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Zip Code <span class="style10">: </span></span></div>
        </td>
        <td><span class="style11"><span class="style10">
                <input name="property_zip" type="text" value="<?= StripSlashes($_POST['property_zip']) ?>"/>
              </span></span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Phone: </span></div>
        </td>
        <td><span class="style11">
                <input name="property_phone[]" type="text" size="3"
                       value="<?= StripSlashes($_POST['property_phone'][0]) ?>"/>
                -
                <input name="property_phone[]" type="text" size="3"
                       value="<?= StripSlashes($_POST['property_phone'][1]) ?>"/>
                -
                <input name="property_phone[]" type="text" size="4"
                       value="<?= StripSlashes($_POST['property_phone'][2]) ?>"/>
              </span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Work: </span></div>
        </td>
        <td><span class="style11">
                <input name="work_phone[]" type="text" size="3" value="<?= StripSlashes($_POST['work_phone'][0]) ?>"/>
                -
                <input name="work_phone[]" type="text" size="3" value="<?= StripSlashes($_POST['work_phone'][1]) ?>"/>
                -
                <input name="work_phone[]" type="text" size="4" value="<?= StripSlashes($_POST['work_phone'][2]) ?>"/>
              </span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Cell: </span></div>
        </td>
        <td><span class="style11">
                <input name="cell[]" type="text" size="3" value="<?= StripSlashes($_POST['cell'][0]) ?>"/>
                -
                <input name="cell[]" type="text" size="3" value="<?= StripSlashes($_POST['cell'][1]) ?>"/>
                -
                <input name="cell[]" type="text" size="4" value="<?= StripSlashes($_POST['cell'][2]) ?>"/>
              </span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Fax: </span></div>
        </td>
        <td><span class="style11">
                <input name="fax[]" type="text" size="3" value="<?= StripSlashes($_POST['fax'][0]) ?>"/>
                -
                <input name="fax[]" type="text" size="3" value="<?= StripSlashes($_POST['fax'][1]) ?>"/>
                -
                <input name="fax[]" type="text" size="4" value="<?= StripSlashes($_POST['fax'][2]) ?>"/>
              </span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Email <span class="style10">: </span></span></div>
        </td>
        <td><span class="style11"><span class="style10">
                <input name="email_address" type="text" value="<?= StripSlashes($_POST['email_address']) ?>"/>
              </span></span></td>
    </tr>
    <tr>
        <td>
            <div align="right"></div>
        </td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style12">Insurance Policy Information </span></div>
        </td>
    </tr>
    <tr>
        <td>
            <div align="right"></div>
        </td>
    </tr>
    <tr>
        <td class="style11">
            <div align="right">Named Beneficiary of Policy:</div>
        </td>
        <td class="style11"><input type="text" name="beneficiary" value="<?= StripSlashes($_POST['beneficiary']) ?>"/>
        </td>
    </tr>
    <tr>
        <td class="style12">
            <div align="right"></div>
        </td>
        <td class="style12">&nbsp;</td>
        <td class="style12">&nbsp;</td>
    </tr>
    <tr>
        <td class="style12">
            <div align="right">Select Type of Policy:</div>
        </td>
        <td class="style12">&nbsp;</td>
        <td class="style12">&nbsp;</td>
    </tr>
    <tr>
        <td class="style11">
            <div align="right"></div>
            <label></label>
        </td>
        <td class="style11"><label>
                <input type="checkbox" name="home_owner_policy" value="yes"/>
            </label>
            Home owners policy
            <label> <br/>
                <input type="checkbox" name="rental_property_policy" value="yes"/>
            </label>
            Rental Property policy
            <label> <br/>
                <input type="checkbox" name="forced_policy" value="yes"/>
            </label>
            Forced policy
            <label> <br/>
                <input type="checkbox" name="foreclosure_policy" value="yes"/>
                Foreclosure</label>
            policy
        </td>
    </tr>
    <tr>
        <td class="style11">
            <div align="right"></div>
        </td>
    </tr>
    <tr>
        <td class="style11">
            <div align="right">Insurance Company:</div>
        </td>
        <td class="style11"><input type="text" name="insurance_company"
                                   value="<?= StripSlashes($_POST['insurance_company']) ?>"/></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Phone:</span></div>
        </td>
        <td><span class="style11">
                <input name="insurance_phone[]" type="text" size="3"
                       value="<?= StripSlashes($_POST['insurance_phone'][0]) ?>"/>
                -
                <input name="insurance_phone[]" type="text" size="3"
                       value="<?= StripSlashes($_POST['insurance_phone'][1]) ?>"/>
                -
                <input name="insurance_phone[]" type="text" size="4"
                       value="<?= StripSlashes($_POST['insurance_phone'][2]) ?>"/>
              </span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Insurance Agent: </span></div>
        </td>
        <td><span class="style11">
                <input name="insurance_agent" type="text" value="<?= StripSlashes($_POST['insurance_agent']) ?>"/>
              </span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Phone: </span></div>
        </td>
        <td><span class="style11">
                <input name="agent_phone[]" type="text" size="3" value="<?= StripSlashes($_POST['agent_phone'][0]) ?>"/>
                -
                <input name="agent_phone[]" type="text" size="3" value="<?= StripSlashes($_POST['agent_phone'][1]) ?>"/>
                -
                <input name="agent_phone[]" type="text" size="4" value="<?= StripSlashes($_POST['agent_phone'][2]) ?>"/>
              </span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Policy number : </span></div>
        </td>
        <td><span class="style11">
                <input name="policy_number" type="text" value="<?= StripSlashes($_POST['policy_number']) ?>"/>
              </span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Claim number : </span></div>
        </td>
        <td><span class="style11">
                <input name="claim_number" type="text" value="<?= StripSlashes($_POST['claim_number']) ?>"/>
              </span></td>
    </tr>
    <tr>
        <td>
            <div align="right"></div>
        </td>
    </tr>
    <?php fm_draw_date('Effective policy date', 'effective_date', false, true); ?>
    <tr>
        <td>
            <div align="right"><span class="style11">Deductible Amount  : </span></div>
        </td>
        <td><span class="style11">
                <input name="deductible_amount" type="text" value="<?= StripSlashes($_POST['deductible_amount']) ?>"/>
              </span></td>
    </tr>
    <tr>
        <td>
            <div align="right"></div>
        </td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Type of loss: </span></div>
        </td>
        <td><span class="style11">
                <input name="type_of_loss" type="text" value="<?= StripSlashes($_POST['type_of_loss']) ?>"/>
              </span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Cause and origin of loss: </span></div>
        </td>
        <td><span class="style11">
                <input name="origin" type="text" value="<?= StripSlashes($_POST['origin']) ?>"/>
              </span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Category of water: </span></div>
        </td>
        <td><span class="style11">
                <input name="category_of_water" type="text" value="<?= StripSlashes($_POST['category_of_water']) ?>"/>
              </span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Class of loss: </span></div>
        </td>
        <td><span class="style11">
                <input name="class_of_loss" type="text" value="<?= StripSlashes($_POST['class_of_loss']) ?>"/>
              </span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Number of stories affected : </span></div>
        </td>
        <td><span class="style11">
                <input name="stories_affected" type="text" value="<?= StripSlashes($_POST['stories_affected']) ?>"/>
              </span></td>
    </tr>
    <tr>
        <td>
            <div align="right"><span class="style11">Comments: </span></div>
        </td>
        <td><span class="style11">
                <input name="comments" type="text" value="<?= StripSlashes($_POST['comments']) ?>"/>
              </span></td>
    </tr>


    <tr>
        <td>&nbsp;</td>
        <td><input type="submit" value="Submit"></td>
    </tr>

    </form>
    </table>
<?php

}

//------------------------------------------------------------------------------
function fm_draw_date($title, $name, $required)
{
	if(!isset($_POST[$name])){
		$_POST[$name] = array(array(),array(),array());
	}
	$month_list = array("January","February","March","April","May","June","July","August","September","October","November","December");

	$yd = (strtotime(date("Y")."-01-01") - strtotime("2011-01-01"));
	$ydc = floor(($yd)/(60*60*24*365));
	?>
    <tr>
        <td class="tlabel"><label><?= $title; ?> : <?php if ($required == true) print '<font color=red>*</font>'; ?></label></td>
        <td class="style11"><select name="<?= $name; ?>[]">
                <option <?php if (!isset($_POST[$name][0]) || $_POST[$name][0] == "") print 'selected' ?>></option>
				<?php foreach($month_list as $month){ ?>
      				<option <?php echo ($_POST[$name][0] == $month) ? 'selected' : '' ;?>><?php echo $month;?></option>
	  			<?php }?>
            </select>
            <select name="<?= $name; ?>[]">
                <option <?php if (!isset($_POST[$name][1]) || $_POST[$name][1] == "") print 'selected' ?>></option>
                <?php for ($i = 1; $i <= 31; $i++) {?>
                    <option  <?php if ($_POST[$name][1] == $i) print 'selected' ?>><?= $i; ?></option>
				<?php }?>
            </select>
            <select name="<?= $name; ?>[]">
                <option <?php if (!isset($_POST[$name][2]) || $_POST[$name][2] == "") print 'selected' ?>></option>
				<?php for($y=0;$y<=$ydc;$y++) { $yr_val = (2011+$y); ?>
					<option <?php if ($_POST[$name][2] == $yr_val) print 'selected';?>><?php echo $yr_val;?></option>
				<?php } ?>
            </select></td>
    </tr>

<?php
}

function fm_draw_leaduser($title, $name, $required)
{
    $query = "SELECT usr_lead.*, usr.* FROM users_lead as usr_lead INNER JOIN users as usr  WHERE usr.uid = usr_lead.user_id AND usr.status != '0'";
    $result = db_query($query);
    $row_count = $result->rowCount();
    ?>
    <tr style="text-align:right;">
        <td class="tlabel"><!--<label><?/*= $title; */?>
                : <?php /*if ($required == true) print '<font color=red>*</font>'; */?></label>--></td>
        <td class="style11"><?= $title; ?> : <select name="<?= $name; ?>">
                <option <?php if (!isset($_POST[$name][0]) || $_POST[$name][0] == "") print 'selected' ?>></option>
                <?php
                foreach ($result as $row) {
                    $row = (array)$row;
                    $selected = "";
                    $select_id = 0;
                    if ($select_id == $row['uid']) {
                        $selected = "selected";
                    }
                    print '<option value="' . $row['uid'] . '" ' . $selected . ' >' . $row['lead_id'] . '</a>';
                }
                ?>
            </select>
    </tr>

<?php
}

//------------------------------------------------------------------------------
function draw_countryform_part($name, $disabled, $required)
{
	$profile_country = (isset($_POST[$name]) && trim($_POST[$name]) != '' ? $_POST[$name] : '');
	echo ncn_loc_country($name, 'ncn-loc-country', 'ncn-loc-state', $disabled, $required, $profile_country);
}

function draw_countryform_part_sel($name, $disabled, $required, $sel_val)
{
    echo ncn_loc_country($name, 'ncn-loc-country', 'ncn-loc-state', $disabled, $required, $sel_val);
}

function draw_stateform_part($name, $disabled, $required)
{
	$profile_state = (isset($_POST[$name]) && trim($_POST[$name]) != '' ? $_POST[$name] : '');
	echo ncn_loc_state($name, 'ncn-loc-state', $disabled, $required, $profile_state, 'US');
}

function draw_stateform_part_sel($name, $disabled, $required, $country, $sel_val)
{
    echo ncn_loc_state($name, 'ncn-loc-state', $disabled, $required, $sel_val, $country);
}

/*function draw_stateform_part($name, $disabled, $required)
{
	$states = array("AL", "AK", "AZ", "AR", "CA", "CO", "CT", "DE", "DC", "FL", "GA", "HI", "ID", "IL", "IN", "IA", "KS", "KY", "LA", "ME", "MD", "MA", "MI", "MN", "MS", "MO", "MT", "NE", "NV", "NH", "NJ", "NM", "NY", "NC", "ND", "OH", "OK", "OR", "PA", "RI", "SC", "SD", "TN", "TX", "UT", "VT", "VA", "WA", "WV", "WI", "WY");
	
	if (!isset($_POST[$name]))
	{	$_POST[$name] = "FL";	}
?>
	<select name="<?= $name; ?>" <?php if ($disabled == true) print ' disabled="disabled"'; ?>>
	
	<?php
		foreach ($states as $state)
		{
			?>
			<option value="<?= $state; ?>" <?php if ($state == $_POST[$name]) print ' selected="selected "'; ?>><?= $state; ?></option>
			<?php
		}
	
	?>
	
	</select>
<?php
}*/

//------------------------------------------------------------------------------
function fm_draw_countryfield($title, $name, $disabled = false, $required = false)
{

    ?>
    <tr>
        <td class="tlabel"><label><?= $title; ?>
                : <?php if ($required == true) print '<font color=red>*</font>'; ?></label></td>
        <td>
            <?php draw_countryform_part($name, $disabled, $required); ?>
        </td>
    </tr>

<?php
}

function fm_draw_statefield($title, $name, $disabled = false, $required = false)
{

    ?>
    <tr>
        <td class="tlabel"><label><?= $title; ?>
                : <?php if ($required == true) print '<font color=red>*</font>'; ?></label></td>
        <td>
            <?php draw_stateform_part($name, $disabled, $required); ?>
        </td>
    </tr>

<?php
}

//------------------------------------------------------------------------------
function fm_draw_textfield($title, $name, $disabled = false, $required = false)
{
    ?>
    <tr>
        <td class="tlabel"><label><?= $title; ?>
                : <?php if ($required == true) print '<font color=red>*</font>'; ?></label></td>
        <td><input type="text" name="<?= $name; ?>" id="fm_<?= $name; ?>" autocomplete="off"
                   value="<?= isset($_POST[$name])?$_POST[$name]:''; ?>" <?php if ($disabled == true) print ' disabled="disabled"'; ?>></td>
    </tr>
<?php
}

function fm_draw_checkbox($title, $name, $disabled = false, $required = false)
{
    ?>
    <tr>
        <td class="tlabel"><input type="checkbox" name="<?= $name; ?>" id="fm_<?= $name; ?>"
                                  autocomplete="off" <?php if ($disabled == true) print ' disabled="disabled"'; ?>></td>
        <td><label
                for="fm_<?= $name; ?>"><?= $title; ?> <?php if ($required == true) print '<font color=red>*</font>'; ?></label>
        </td>
    </tr>
<?php
}

//------------------------------------------------------------------------------
// second submit in multipart form
function create_claim_page3_submit()
{

    if ($_POST['property_owner'] != '') {
        ncn_save_session_var($_POST, 'property_owner', 1);
    }

    foreach ($_POST as $key => $val) {
        ncn_save_session_var($_POST, $key, 1);
    }


    return true;
}

//------------------------------------------------------------------------------
// add room page (#3)
function create_claim_page4()
{
    // draw the form
    ?>
    <table class="create_claim_table">
        <form method="POST">
            <input type="hidden" name="tfunction" value="process">


            <tr>
                <td>&nbsp;</td>
                <td><input type="submit" value="Submit"></td>
            </tr>

        </form>
    </table>
<?php

}

//------------------------------------------------------------------------------
// add room submit (#3)
function create_claim_page4_submit()
{
    // nothing to do (all images are handled by ajax)
    return true;
}


//------------------------------------------------------------------------------
// (#4)
function create_claim_page5()
{
    print ":o == 4";

}

//------------------------------------------------------------------------------
// (#4)
function create_claim_page5_submit()
{

    // save the claim
    if ((isset($_SESSION['claim']['id'])) && (is_numeric($_SESSION['claim']['id']))) {
        echo "<pre>";print_r(2);exit;
        ncn_save_claim($_SESSION['claim']['id'], true);
        unset($_SESSION['claim']);
    } else {
        print 'Your session has expired.';
        exit;
    }

    return true;
}

//------------------------------------------------------------------------------
// (#5)
function create_claim_page6()
{
    print ":o == 5";

}

//------------------------------------------------------------------------------
// (#5)
function create_claim_page6_submit()
{

//	unset($_SESSION['claim']);

    return true;
}


//------------------------------------------------------------------------------
function ncn_create_claim_theme()
{
    return array(
        'ncn_create_claim' => array(
            'arguments' => array('stat' => NULL),
            'template' => 'ncn_create_claim',
        ),
        'ncn_add_room' => array(
            'arguments' => array('claim_id' => NULL, 'room_choose_type' => NULL, 'room_choose_val' => NULL),
            'template' => 'ncn_add_room',
        ),
        'ncn_download_pdfs' => array(
            'arguments' => array('stat' => NULL),
            'template' => 'ncn_download_pdfs',
        ),
        'ncn_claim_confirm' => array(
            'arguments' => array('stat' => NULL),
            'template' => 'ncn_claim_confirm',
        ),
        'ncn_claim_success' => array(
            'arguments' => array('stat' => NULL),
            'template' => 'ncn_claim_success',
        ),
    );
}

//------------------------------------------------------------------------------
// used in validation function (below)
function ncn_process_file_upload($form_state, $fieldName, $file_desc)
{

    $form_id = $form_state['values']['form_build_id'];
    $file_data = $_SESSION['files']['upload_element'][$form_id][$fieldName];

    // check file was uploaded
    if (sizeof($file_data) == 0) {
        return;
    }

    // check file was discarded
    if ($file_data->submit_action != 1) {
        return;
    }

    // file was uploaded
    upload_element_save($file_data, 'sites/default/files/user_files', FILE_EXISTS_RENAME);

    return ($file_data);

}

//------------------------------------------------------------------------------
function ncn_create_claim_help($section)
{

    switch ($section) {
        case 'admin/modules#description':
            // This description is shown in the listing at admin/modules.
            return t('The ncn_create_claim module multiplies two numbers together.');
    }
}

function remove_unnecessary_file($claim_id)
{
    /* Add by 2011-03-26 */
    if (!isset($_SESSION['claim'][$claim_id]['scope'])) {
        return;
    }
    foreach ($_SESSION['claim'][$claim_id]['scope'] as $key => $room) {
        foreach ($room as $image_id => $image_info) {
            if ($image_info['resize_image_path']) {
				$path = $image_info['resize_image_path'];
				$path->uri  = str_replace("public://","public://styles/photo_album/public/",$path->uri);
				$res = file_move($path, $image_info['path'], FILE_EXISTS_REPLACE);
				unset($_SESSION['claim'][$claim_id]['scope'][$key][$image_id]['resize_image_path']);
            }
        }
    }
}

//------------------------------------------------------------------------------
function ncn_save_claim($claim_id = 0, $update = false, $claim_type = '', $claim_product = '', $claim_lead = '')
{
    GLOBAL $user, $base_url;
    $user = user_load($user->uid);
    $user_id = $user->uid;

    if (is_subuser($user)) {
        $parent_mid = ncn_subuser_get_memberid_from_subuid($user_id);
        $user_id = get_uid_from_memberid($parent_mid);
        drupal_set_message($user_id);
    }

    // only do new if not set
    if ($update == false) {
        $expedite = 0;
        if ($_SESSION['claim']['expedite']['val'] == 'on') {
            $expedite = 1;
        }

        // insert claim definition
		if($claim_lead=='') $claim_lead=0;

       $claim_id = db_insert('claims')->fields(array('user_id' => $user_id,
													'claim_type' => $claim_type,
													'claim_product' => $claim_product,
													'created'=>date("U"),
													'last_modified'=>date("U"),
													'claim_amount'=>0,
													'payment_received'=>0,
													'claim_status'=>'unpurchased',
													'claim_status_message'=>'',
													'file_note'=>'',
													'workflow'=>'',
													'expedite'=>$expedite,
													'deleted'=>0,
													'leaduser'=>$claim_lead))->execute();
        $_SESSION['claim']['id'] = $claim_id;
    }

    remove_unnecessary_file($claim_id);

    /*echo "<pre>";
    print_r($_SESSION['claim']);
    echo "</pre>";
    exit;*/

    // insert claim data
    $scope_data = array();
    if ($update) {
        $scope_data = $_SESSION['claim'][$claim_id];
    } else {
        $scope_data = $_SESSION['claim'];
    }
    foreach ($scope_data as $key => $val) {
        if ($key == '#data') {
            continue;
        }
        // fix up some of the data
        $res = serialize($val);

        if (isset($val['weight']) && !is_numeric($val['weight'])) {
            @$val['weight'] = 0;
        }

        // remove old data
        $result = db_query("DELETE FROM {claims_data} WHERE claim_id=:a AND `key`=:b",array(':a'=>$claim_id,':b'=>$key));

        // insert new data
        $cfType = isset($val['type']) ? $val['type'] : '';
        $cfWeight = isset($val['weight']) ? $val['weight'] : 0;

        $result = db_query("INSERT INTO {claims_data} (`claim_id`,`field_type`,`key`,`val`,`weight`) VALUES (:a,:b,:c,:d,:e) ",
            array(':a'=>$claim_id,':b'=>$cfType,':c'=>$key,':d'=>$res,':e'=>$cfWeight));

    }


    // update the log file
    if ($update == true) {
        if (isset($_SESSION['claim_log'][$claim_id]) && $_SESSION['claim_log'][$claim_id] != "") {
            ncn_admin_insert_claim_log($claim_id, date('U'), $_SESSION['claim_log'][$claim_id]);
            $_SESSION['claim_log'][$claim_id] = "";
            unset($_SESSION['claim_log'][$claim_id]);
        }
        /*else {
                $log_message = t("Claim #!claim_id updated by !user_name.", array('!claim_id'=>$claim_id, '!user_name'=>ncn_amin_get_user_role_and_name()));
                ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);
            }*/

        if (isset($_SESSION['claim_room_rename_actions'][$claim_id])) {
            if (is_array($_SESSION['claim_room_rename_actions'][$claim_id])) {
                foreach ($_SESSION['claim_room_rename_actions'][$claim_id] as $rename_action) {
                    ncn_admin_update_room_data_by_renaming_room($claim_id, $rename_action['old_name'], $rename_action['new_name']);
                }
            }
            unset($_SESSION['claim_room_rename_actions'][$claim_id]);
        }
    }

    // send notification
    if ($update == false) {

    }

    return ($claim_id);
}

function ncn_create_claim_send_mail($claim_id)
{
    GLOBAL $user, $base_url;
    $user = user_load($user->uid);
    $user_id = $user->uid;

    if (is_subuser($user)) {
        $parent_mid = ncn_subuser_get_memberid_from_subuid($user_id);
        $user_id = get_uid_from_memberid($parent_mid);
    }

    $user_details = user_load($user_id);

    $log_message = t("Claim #!claim_id created by !user_name.", array('!claim_id' => $claim_id, '!user_name' => ncn_amin_get_user_role_and_name($user_id)));
    // Claim Information
    $log_message .= t("\r\n Insured's name: !insured_name", array('!insured_name' => ncn_cd($claim_id, 'customer_name')));
    $log_message .= t("\r\n Date of Loss: !date_of_loss", array('!date_of_loss' => ncn_cd($claim_id, 'date_of_loss')));
    $log_message .= t("\r\n Country: !insured_country", array('!insured_country' => ncn_cd($claim_id, 'insured_country')));
    $log_message .= t("\r\n Address: !insured_address", array('!insured_address' => ncn_cd($claim_id, 'insured_address')));
    $log_message .= t("\r\n City: !insured_city", array('!insured_city' => ncn_cd($claim_id, 'insured_city')));
    $log_message .= t("\r\n State: !insured_state", array('!insured_state' => ncn_cd($claim_id, 'insured_state')));
    $log_message .= t("\r\n Zip Code: !insured_zip", array('!insured_zip' => ncn_cd($claim_id, 'insured_zip')));
    $log_message .= t("\r\n Insured's Phone Number: !insured_phone_number", array('!insured_phone_number' => ncn_cd($claim_id, 'insured_phone_number')));
    $log_message .= t("\r\n Technician Service Name: !technician_service_name", array('!technician_service_name' => ncn_cd($claim_id, 'technician_service_name')));

    $claim_info = get_claim_data($claim_id);
    $claim_type = ucwords($claim_info['claim_type']) . ' ' . $claim_info['claim_product'];
    if (ncn_cd($claim_id, 'expedite')) {
        $claim_type .= " (EXPEDITE)";
    }
    $log_message .= t("\r\n Claim Type: !claim_type", array('!claim_type' => $claim_type));

    ncn_admin_insert_claim_log($claim_id, date('U'), $log_message);

    // email the user with access details
    $params = array(
        '!claim_id' => $claim_id,
        '!legalname' => $user->profile_legalname,
        '!firstname' => $user->profile_firstname,
        '!lastname' => $user->profile_lastname,
    );
    // send to customer
    //drupal_mail('ncn_create_claim', 'new_claim_customer', $user_details->mail, language_default(), $params);
    if ($user->uid != $user_id) { // mail to sub user
        if (!empty($user->mail)) {
            drupal_mail('ncn_create_claim', 'new_claim_customer', $user->mail, language_default(), $params);
        }
    }

    // HERE
    if (variable_get('ncn_new_claim_active', '') == 1) {
        // send to rep (first get rep from pool table)
    //    $query = "SELECT * FROM member_id_pool WHERE member_id=\"" . AddSlashes($user_details->profile_memberid) . "\";";
        $result = db_query('SELECT * FROM {member_id_pool} WHERE member_id=:a',array(':a'=>$user_details->profile_memberid));
        $row_count = $result->rowCount();
        $row = $result->fetchAssoc();

        $am = user_load($row['am_uid']);
        if (!$am->mail) {
            drupal_mail('ncn_create_claim', 'new_claim', $am->mail, language_default(), $params);
        }

        /*$query = "SELECT parent FROM users_parent WHERE uid=".$row['owner'];
        $result = db_query($query);
        $row_count = $result->rowCount();
        for ($i=0; $i<$row_count; $i++) {
            $row = (array)$result;

            $this_user = user_load($row['parent']);		// load the sales rep
            if (!$this_user) {
                drupal_mail('ncn_create_claim', 'new_claim', $this_user->mail, language_default(), $params);
            }
        }*/

        // send to admin
        $this_user = user_load(1); // load the admin
        if (!$this_user) {
            drupal_mail('ncn_create_claim', 'new_claim', $this_user->mail, language_default(), $params);
        }

    }
}

//------------------------------------------------------------------------------
function ncn_create_claim_mail($key, &$message, $params)
{
    //$language = $message['language'];
	$options = array('langcode' => $message['language']->language);
    $variables = user_mail_tokens($params['account'], $language);

    switch ($key) {
        case "new_claim":
            $message['subject'] = t(variable_get('ncn_new_claim_subject', ''), $params, $options);
            $message['body'][] = t(variable_get('ncn_new_claim_body', ''), $params, $options);
            break;

        case "new_claim_customer":
            $message['subject'] = t(variable_get('ncn_new_claim_customer_subject', ''), $params, $options);
            $message['body'][] = t(variable_get('ncn_new_claim_customer_body', ''), $params, $options);
            break;

    }
}

//------------------------------------------------------------------------------
// show the lhs progress tick list
function ncn_create_claim_get_progress_list($active_page)
{
    GLOBAL $ncn_create_claim_titles;

    // start processing
    ob_start();

    print '<ul class="create_claim_lhs_list">';

    // run through options
    $other_class = "previous";

    for ($i = 0; $i < sizeof($ncn_create_claim_titles); $i++) {
        if ($ncn_create_claim_titles[$i] != '') {

            if ($i == $active_page) {
                print "<li class='active'>" . $ncn_create_claim_titles[$i] . "</li>";
                $other_class = "inactive";
            } else {
                print "<li class='" . $other_class . "'>" . $ncn_create_claim_titles[$i] . "</li>";
            }
        }

    }

    print '</ul>';

    // get and return contents
    $content = ob_get_contents();
    ob_end_clean();

    return ($content);
}

/**
 * Ajax Handler (ajax/ncn_create_claim/get_claim_invoice)
 */
function ncn_create_claim_display_price()
{
    $j_result['msg'] = '';
    $j_result['code'] = "success";
    $j_result['price'] = '';

    global $user;
    $puser = user_load($user->uid);
    $member_type = get_member_type($puser);

    $product_id = ncn_create_claim_get_product_id($member_type, $_POST['claim_type'], $_POST['claim_product']);
    if ($product_id != 0) {
        $p_node = node_load($product_id);
        $price = $p_node->sell_price;
        $j_result['price'] = '$' . number_format($price, 2, '.', ',');
        /*if ($_POST['expedite']) {
            $j_result['price'] .= ' x 2';
        }*/
    }
    echo json_encode($j_result);
}

//------------------------------------------------------------------------------

/**
 * Action Handler ( ajax/ncn_create_claim/remove_photo/% )
 * Remove Photo in Photo Album
 * @param mixed $claim_id
 */
function ncn_create_claim_remove_photo($claim_id)
{
    global $base_url;

    $room_name = $_REQUEST['room_name'];
    $image_id = $_REQUEST['image_id'];

    $j_result['code'] = 'success';
    $j_result['msg'] = '';

    $default_room_name = ncn_admin_claim_get_default_room_name($claim_id);
    $image_count = 6;
    if ($room_name == $default_room_name) {
        $image_count = 3;
    }
    $image_index = substr($image_id, -1, 1);
    $j_result['image_blank_path'] = _get_blank_room_image_url($image_count, $image_index);

    if (isset($_SESSION['claim'][$claim_id]["scope"][$room_name][$image_id])) {
        unset($_SESSION['claim'][$claim_id]["scope"][$room_name][$image_id]);

        global $user;
        $_SESSION['claim_log'][$claim_id] .= t("!user_name remove photo(!img_id) into the room(!roomname).", array('!user_name' => ncn_amin_get_user_role_and_name($user->uid), '!roomname' => $room_name, '!img_id' => $image_id));
        $_SESSION['claim_log'][$claim_id] .= "\r\n";
    }

    echo json_encode($j_result);
}


?>
